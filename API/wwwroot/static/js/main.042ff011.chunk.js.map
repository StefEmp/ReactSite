{"version":3,"sources":["App/Layout/NotFound.tsx","Features/nav/NavBar.tsx","App/API/agent.ts","App/Util/FilterOptions.ts","App/Store/jobsStore.ts","App/Testing.tsx","App/Util/JobTitles.ts","Features/Jobs/Features/SearchBar.tsx","Features/Jobs/Features/TrendingJob.tsx","Features/Jobs/Features/DisplayJobsCard.tsx","Features/Jobs/Features/Sectors.tsx","Features/Jobs/Features/Locations.tsx","Features/Jobs/Features/Courses.tsx","Features/Jobs/Jobs.tsx","Features/Homepage/Homepage.tsx","App/Layout/UnderConstruction.tsx","Features/Courses/Courses.tsx","Features/CareerAdvice/CareerAdvice.tsx","Features/Recruiting/Recruiting.tsx","Features/Users/RegisterCV.tsx","Features/Users/SignIn.tsx","Features/Users/Shortlistedjobs.tsx","Features/Footer/Footer.tsx","Features/JobSeekerLandingPage/Features/SearchBar.tsx","Features/JobSeekerLandingPage/Features/Filters.tsx","App/Layout/LoadingComponent.tsx","Features/JobSeekerLandingPage/Features/Cards.tsx","Features/JobSeekerLandingPage/Features/FiltersAndCards.tsx","Features/JobSeekerLandingPage/SearchResults.tsx","Features/JobSeekerLandingPage/Features/JobCard.tsx","Features/JobSeekerLandingPage/Features/SimilarJobs.tsx","Features/JobSeekerLandingPage/Features/JobDetails.tsx","Features/JobSeekerLandingPage/DetailedView.tsx","App/Layout/App.tsx","serviceWorker.ts","App/Layout/ScrollToTop.tsx","index.tsx"],"names":["NotFound","Segment","placeholder","Header","icon","Icon","name","Inline","Button","as","Link","to","primary","NavBar","Menu","fixed","inverted","Container","Item","header","NavLink","exact","style","fontSize","position","backgroundColor","border","borderRadius","padding","marginRight","color","axios","defaults","baseURL","interceptors","response","use","undefined","error","message","respone","toast","status","history","push","responseBody","data","sleep","ms","Promise","resolve","setTimeout","requests","url","get","then","Jobs","counter","detailedJob","id","listJobs","params","createIndex","salaryOptions","key","text","value","anytime","Date","now","today","lastThreeDays","lastWeek","lastTwoWeeks","changeReq","days","setDate","getDate","toString","timeAdded","imageSelector","ls","require","configure","enforceActions","JobsStore","handlePhoto","result","first","Math","random","rand","round","i","length","observable","Map","action","a","indexButton","agent","runInAction","console","log","oldQuery","remove","clear","jobTitle","jobs","set","query","minimumSalary","maximumSalary","fullTime","partTime","contract","date","getListJobs","counterRegistry","loadingInitial","job","jobRegistry","lists","forEach","photos","counters","jobsRegistry","addPhotoToJobs","getCounters","isuggestion","locationName","suggestions","JobStore","createContext","lowerCasedJobTitles","map","language","toLowerCase","Auto","setSearchParamsAutosuggest","useContext","useState","setValue","setSuggestions","React","setQuery","onSuggestionsClearRequested","onSuggestionsFetchRequested","filter","startsWith","trim","getSuggestions","onSuggestionSelected","_","suggestionValue","getSuggestionValue","suggestion","renderSuggestion","inputProps","onChange","newValue","method","highlightFirstSuggestion","observer","jobsStore","jobsCounter","setSearchParams","onSubmit","useEffect","fluid","className","backgroundImage","Grid","centered","GridColumn","totalJobs","textAlign","addedToday","render","handleSubmit","Form","Group","Field","component","queryX","handleClick","e","trueValue","stackable","Row","Column","width","List","link","onClick","DisplayJobsCard","employerName","lineHeight","columns","Card","image","extra","textStyle","bottom","height","Sectors","styleP","paddingLeft","Image","circular","src","basic","Content","Courses","margin","paddingRight","borderLeftWidth","borderRightWidth","Homepage","UnderConstruction","backgroundRepeat","paddingTop","backgroundSize","backgroundPosition","loading","CareerAdvice","Recruiting","RegisterCV","SignIn","Shortlistedjobs","Footer","vertical","content","Divider","section","combineQuery","returnValue","returnDateValue","parse","show","toggleShow","setTrue","toJS","SegmentGroup","size","animated","visible","hidden","Select","currentTarget","innerText","selection","options","grouped","Checkbox","label","temporary","replace","permanent","checked","overflowY","marginBottom","borderTop","LoadingComponent","Dimmer","active","boxShadow","Loader","jobsPag","CardGroup","Description","count","index","GridRow","font","marginTop","floated","alt","jobId","Meta","formatDistance","parseISO","datePosted","addSuffix","yearlyMinimumSalary","yearlyMaximumSalary","contractType","clamp","truncationChar","dangerouslySetInnerHTML","__html","jobDescription","Modal","trigger","wrapped","scrolling","Actions","currentPage","setCurrentPage","postsPerPage","indexOfLastJob","indexOfFirstJob","currentPosts","slice","Pagination","firstItem","lastItem","siblingRange","activePage","totalPages","onPageChange","event","window","scrollTo","withRouter","getQuery","applications","fontWeight","match","loadJob","parseInt","path","SearchResults","DetailedView","Boolean","location","hostname","children","pathname","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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AMxC,SAASC,GAHd,cAGd+C,EAHc,OAIlBP,sBAAY,YAAY,WACtB,EAAKO,KAAOA,EACZ,EAAKkB,aAAajB,IAAID,EAAM,EAAKA,MACjC,EAAKW,gBAAiB,EACtB,EAAKQ,eAAe,EAAKnB,MACzB,EAAKoB,YAAYpB,MATD,kBAYX,EAAKA,MAZM,gCAclBP,sBAAY,mBAAmB,WAC7BC,QAAQC,IAAR,MACA,EAAKgB,gBAAiB,KAhBN,yDApMxB,yGAyNGtB,UAzNH,2HAyN6B,WAAOpC,GAAP,eAAAqC,EAAA,6DACzB,EAAK+B,YAAatB,SAAW9C,EADJ,kBAGNuC,GAAMxC,SAAS,EAAKqE,aAHd,cAGnBrB,EAHmB,OAMvBP,sBAAY,YAAY,WACtBO,EAAKc,MAAMC,SAAQ,SAACH,SAPC,GAQRb,SAAWa,EAAIb,eARP,GASRuB,aAAeV,EAAIU,gBAGhC,EAAKC,iBAZgB,uBAchB,EAAKA,aAdW,gCAgBvB9B,sBAAY,mBAAmB,WAC7BC,QAAQC,IAAR,MACA,EAAKgB,gBAAiB,KAlBD,yDAzN7B,6DAiPaa,GAAWC,wBAAc,IAAIhD,I,gDC1PpCiD,I,OCR6B,CACjC,aACA,QACA,UACA,kCACA,cACA,2BACA,kCACA,0BACA,sBACA,0BACA,sBACA,qBACA,mCACA,QACA,wBACA,kCACA,sBACA,yBACA,uBACA,gCACA,sBACA,0BACA,sBACA,6BACA,4BACA,yBACA,qCACA,oBACA,8BACA,kBACA,gBACA,uBACA,mBACA,6BACA,mBACA,iBACA,wBACA,mBACA,iBACA,WACA,6BACA,iBACA,uBACA,iBACA,aACA,eACA,YACA,wBACA,wBACA,YACA,eACA,cACA,SACA,YACA,aACA,UACA,mBACA,uBACA,wBACA,YACA,uCACA,qDACA,cACA,UACA,SACA,kCACA,8CACA,6BACA,sBACA,sBACA,iBACA,UACA,QACA,UACA,SACA,YACA,0BACA,gCACA,UACA,kBACA,mBACA,6BACA,4BACA,aACA,wBACA,sBACA,eACA,UACA,4BACA,aACA,kBACA,cACA,aACA,6BACA,SACA,aACA,yBACA,yBACA,uBACA,kBACA,iBACA,qBACA,eACA,UACA,QACA,eACA,sBACA,iBACA,kBACA,kBACA,4BACA,cACA,YACA,mBACA,eACA,UACA,SACA,yBACA,+BACA,eACA,8BACA,YACA,UACA,OACA,oBACA,0BACA,UACA,oBACA,kBACA,sBACA,mBACA,eACA,gBACA,gBACA,iBACA,+BACA,kBACA,kBACA,sBACA,UACA,iCACA,mCACA,wBACA,iBACA,qBACA,gBACA,aACA,cACA,wBACA,mBACA,mBACA,0BACA,oCACA,yBACA,gCACA,4BACA,oCACA,qBACA,WACA,6BACA,6BACA,oBACA,sBACA,2BACA,8BACA,iCACA,2BACA,YACA,cACA,oBACA,+BACA,yBACA,sBACA,cACA,yBACA,uBACA,uBACA,sBACA,qCACA,qBACA,oBACA,OACA,6BACA,cACA,uBACA,oCACA,uBACA,gBACA,gBACA,iBACA,oBACA,0BACA,YACA,UACA,OACA,SACA,QACA,YACA,aACA,YACA,OACA,iBACA,WACA,eACA,kBACA,WACA,iBACA,eACA,iBACA,iBACA,iBACA,mBACA,wBACA,2BACA,iBACA,UACA,eACA,kCACA,SACA,2BACA,SACA,mBACA,yBACA,oBACA,2BACA,eACA,mBACA,mBACA,+BACA,UACA,mBACA,WACA,oBACA,YACA,iCACA,YACA,2BACA,sBACA,YACA,kBACA,WACA,aACA,aACA,4BACA,UACA,oBACA,gBACA,kBACA,0BACA,aACA,iBACA,iCACA,sBACA,oBACA,0BACA,gBACA,oBACA,YACA,SACA,0BACA,0BACA,iCACA,sBACA,iCACA,uBACA,kCACA,cACA,gCACA,4BACA,qBACA,oBACA,WACA,gCACA,+BACA,mBACA,WACA,sBACA,sBACA,2BACA,WACA,0BACA,yBACA,gCACA,0BACA,iBACA,SACA,SACA,gBACA,sBACA,qCACA,sBACA,mBACA,mBACA,oBACA,oBACA,gBACA,sBACA,aACA,SACA,sBACA,uBACA,mBACA,eACA,0BACA,wBACA,SACA,aACA,mBACA,iBACA,gBACA,wBACA,uBACA,aACA,2BACA,wBACA,oBACA,qBACA,oBACA,iCACA,cACA,8BACA,kBACA,iBACA,oBACA,cACA,uBACA,cACA,eACA,SACA,0BACA,kBACA,mBACA,iBACA,cACA,eACA,kBACA,kBACA,gCACA,0BACA,0BACA,iBACA,cACA,uBACA,oBACA,2BACA,6BACA,8BACA,wBACA,oCACA,gBACA,WACA,mBACA,yBACA,oBACA,gBACA,gBACA,sBACA,oBACA,mBACA,0BACA,mBACA,qBACA,qBACA,uBACA,qBACA,uBACA,gBACA,sBACA,iBACA,8BACA,iBACA,kBACA,iBACA,qBACA,+BACA,kBACA,uBACA,aACA,oBACA,sBACA,wBACA,eACA,UACA,6CACA,8BACA,mBACA,gBACA,wBACA,eACA,cACA,cACA,uBACA,eACA,gBACA,cACA,wBACA,aACA,qCACA,YACA,6BACA,kBACA,gCACA,0BACA,6BACA,2BACA,kBACA,iCACA,oBACA,mBACA,qBACA,6BACA,YACA,kBACA,2BACA,0BACA,yBACA,+BACA,mBACA,0BACA,OACA,UACA,UACA,mBACA,uBACA,4BACA,0BACA,0BACA,SACA,cACA,cACA,sBACA,sBACA,oCACA,gCACA,gCACA,4BACA,yCACA,oBACA,iCACA,+BACA,8BACA,YACA,4BACA,aACA,oBACA,yBACA,wBACA,wBACA,uBACA,oBACA,YACA,cACA,cACA,eACA,SACA,UACA,UACA,QACA,qBACA,kBACA,gBACA,uBACA,8BACA,sBACA,qBACA,eACA,iBACA,0BACA,cACA,SACA,gBACA,iBACA,kBACA,kBACA,aACA,YACA,oBACA,0BACA,qBACA,2BACA,4BACA,iBACA,YACA,qBACA,iBACA,mBACA,qBACA,2BACA,aACA,mBACA,eACA,kBACA,wBACA,YACA,sBACA,mBACA,kBACA,aACA,6BACA,cACA,iBACA,YACA,mBACA,aACA,OACA,aACA,wBACA,sBACA,sBACA,qBACA,gBACA,qBACA,aACA,kCACA,qBACA,gBACA,kBACA,eACA,0BACA,oBACA,uBACA,YACA,SACA,MACA,QACA,qBACA,oBACA,iBACA,qBACA,sBACA,+BACA,0BACA,gBACA,wBACA,WACA,cACA,cACA,eACA,2BACA,qBACA,sBACA,oCACA,WACA,+BACA,oBACA,6BACA,6BACA,gCACA,kCACA,6BACA,oBACA,oBACA,2BACA,2BACA,kBACA,0BACA,8BACA,wBACA,YACA,eACA,qBACA,0BACA,eACA,eACA,kCACA,gCACA,eACA,iBACA,wBACA,yBACA,aACA,gCACA,4BACA,kBACA,yBACA,0BACA,+BACA,wBACA,kCACA,wBACA,cACA,QACA,SACA,YACA,mBACA,+BACA,qBACA,qBACA,+BACA,sBACA,oBACA,oBACA,iBACA,gBACA,8BACA,WACA,2BACA,kBACA,gCACA,qBACA,cACA,2BACA,mBACA,gCACA,iCACA,qBACA,eACA,qBACA,kBACA,eACA,eACA,4CACA,4CACA,yBACA,4BACA,iCACA,YACA,eACA,0BACA,qBACA,qBACA,8BACA,mCACA,WACA,cACA,eACA,cACA,eACA,UACA,2BACA,eACA,YACA,mCACA,gBACA,6BACA,WACA,kBACA,6BACA,cACA,YACA,YACA,6BACA,wBACA,oBACA,4BACA,gBACA,eACA,aACA,qBACA,gBACA,6BACA,sBACA,uBACA,oBACA,oBACA,qBACA,mBACA,iCACA,8BACA,uBACA,aACA,gBACA,sBACA,qBACA,mBACA,eACA,8BACA,2CACA,0BACA,+BACA,qBACA,sBACA,YACA,YACA,kBACA,uBACA,aACA,YACA,2BACA,iBACA,iBACA,kBACA,YACA,uBACA,iBACA,UACA,aACA,oBACA,iBACA,0BACA,4BACA,sBACA,uBACA,8BACA,kDACA,gCACA,6BACA,aACA,wBACA,iBACA,kBACA,mBACA,oBACA,uBACA,sBACA,wBACA,gCACA,sBACA,oBACA,SACA,uBACA,0BACA,oBACA,oBACA,oBACA,WACA,mBACA,mBACA,wBACA,cACA,mBACA,cACA,iBACA,mBACA,yBACA,eACA,eACA,qBACA,2BACA,8BACA,gBACA,mBACA,qBACA,sBACA,kBACA,4BACA,iBACA,wBACA,0BACA,oBACA,6BACA,qBACA,uCACA,0BACA,qBACA,kBACA,UACA,wBACA,qBACA,sBACA,0BACA,kBACA,eACA,eACA,qBACA,oBACA,yBACA,0CACA,gCACA,UACA,gCACA,0BACA,yBACA,mBACA,mBACA,mBACA,2BACA,0BACA,2BACA,mBACA,gCACA,mBACA,eACA,gBACA,WACA,sBACA,oBACA,wBACA,iCACA,eACA,qBACA,gBACA,SACA,gBACA,yBACA,cACA,SACA,wBACA,aACA,gBACA,SACA,iBACA,gBACA,uBACA,UACA,0BACA,SACA,oBACA,sBACA,uBACA,eACA,WACA,8BACA,2BACA,YACA,yBACA,iBACA,4BACA,kBACA,oCACA,0BACA,uBACA,eACA,qBACA,0BACA,YACA,SACA,qBACA,2BACA,eACA,gBACA,cACA,WACA,iBACA,wBACA,cACA,mBACA,kBACA,kBACA,SACA,aACA,sBACA,cACA,yBACA,kBACA,oCACA,0BACA,mBACA,2BACA,yBACA,sBACA,gBACA,cACA,oBACA,qBACA,oBACA,iBACA,WACA,SACA,+BACA,kBACA,4BACA,8BACA,qBACA,qBACA,mBACA,sBACA,wBACA,eACA,cACA,cACA,cACA,aACA,gBACA,qBACA,yBACA,8BACA,0BACA,0BACA,eACA,4BACA,gCACA,kBACA,+BACA,UACA,wBACA,oBACA,uBACA,WACA,kBACA,uBACA,SACA,6BACA,kBACA,QACA,gBACA,eACA,eACA,cACA,oBACA,UACA,iBACA,mBACA,yCACA,eACA,qBACA,uBACA,SACA,oBACA,kBACA,SACA,6BACA,iCACA,kCACA,kBACA,iBACA,YACA,eACA,eACA,cACA,oBACA,0BACA,eACA,eACA,gBACA,mBACA,iBACA,iBACA,oCACA,aACA,eACA,aACA,iBACA,aACA,4BACA,iBACA,wBACA,mBACA,+BACA,gBACA,qBACA,mCACA,sCACA,iBACA,aACA,mCACA,2BACA,mCACA,wBACA,UACA,eACA,eACA,eACA,cACA,eACA,UACA,eACA,iBACA,QACA,gCACA,SACA,SACA,aACA,cACA,gBACA,QACA,kBACA,2BACA,eACA,uBACA,wBACA,uBACA,+BACA,SACA,WACA,iBACA,iCACA,yBACA,gBACA,UACA,SACA,kBACA,kBACA,qBACA,iBACA,oBACA,aACA,iBACA,SACA,aACA,YACA,qBACA,aACA,wBACA,UACA,cACA,gCACA,8BACA,yBACA,gBACA,sBACA,wBACA,0BACA,uBACA,iCACA,yBACA,qBACA,yBACA,qBACA,sBACA,WACA,gBACA,YACA,6BACA,YACA,uBACA,iBACA,gBACA,qBACA,UACA,sBACA,YACA,yBACA,sBACA,sBACA,uBACA,kBACA,gBACA,yBACA,oCACA,6BACA,oBACA,kBACA,qCACA,kBACA,qBACA,eACA,mBACA,0BACA,uBACA,8BACA,wBACA,mBACA,eACA,iBACA,8BACA,sBACA,0BACA,0BACA,gCACA,8BACA,qCACA,oCACA,sBACA,4BACA,wCACA,uBACA,yBACA,mBACA,0BACA,wBACA,8BACA,mBACA,oBACA,yBACA,qBACA,uBACA,aACA,0BACA,uCACA,mBACA,sBACA,aACA,qBACA,mCACA,iBACA,mCACA,mBACA,UACA,kBACA,4BACA,2BACA,eACA,iBACA,6BACA,yBACA,uBACA,mBACA,UACA,kBACA,YACA,qBACA,oCACA,oBACA,iBACA,YACA,sBACA,0BACA,sBACA,uBACA,2BACA,8BACA,wBACA,kCACA,+BACA,wBACA,0BACA,8BACA,iCACA,aACA,eACA,qCACA,8BACA,uBACA,wBACA,qBACA,uBACA,oBACA,cACA,oBACA,yBACA,iBACA,oBACA,qBACA,aACA,2CACA,0BACA,oBACA,8BACA,mBACA,4BACA,8BACA,8BACA,yBACA,iBACA,YACA,mBACA,iCACA,iCACA,kBACA,2BACA,gBACA,kBACA,0BACA,cACA,cACA,sBACA,eACA,8BACA,wBACA,8BACA,2CACA,mBACA,6BACA,0BACA,wBACA,cACA,qBACA,wCACA,sCACA,0BACA,gBACA,qBACA,aACA,wBACA,sBACA,sBACA,4BACA,kBACA,6BACA,+BACA,8BACA,kBACA,yBACA,uBACA,iCACA,0BACA,iCACA,2BACA,sBACA,uBACA,wBACA,yBACA,iCACA,0BACA,mBACA,0BACA,4BACA,4BACA,sBACA,sBACA,mCACA,qBACA,uBACA,sBACA,gBACA,cACA,gBACA,oBACA,yBACA,sBACA,eACA,gBACA,iBACA,UACA,kBACA,mBACA,wBACA,yBACA,2BACA,oCACA,kBACA,gBACA,8BACA,kBACA,wBACA,QACA,wBACA,eACA,yBACA,gBACA,iBACA,yBACA,aACA,2BACA,yBACA,mBACA,YACA,kBACA,kBACA,yBACA,qBACA,qBACA,aACA,iBACA,4BACA,eACA,kBACA,qBACA,oCACA,sBACA,gBACA,iBACA,wBACA,mCACA,iBACA,qBACA,mBACA,iBACA,wBACA,oBACA,gCACA,qBACA,uBACA,kBACA,0BACA,6BACA,kBACA,uCACA,uCACA,uBACA,mBACA,gCACA,aACA,4BACA,oBACA,kBACA,yBACA,oBACA,6BACA,mBACA,qBACA,qBACA,gBACA,eACA,iBACA,sBACA,oBACA,kBACA,gBACA,yBACA,YACA,sBACA,gBACA,eACA,oBACA,gBACA,qBACA,iBACA,YACA,gCACA,eACA,6BACA,mBACA,eACA,cACA,sBACA,kBACA,oBACA,gBACA,gCACA,oBACA,sBACA,sCACA,+BACA,mBACA,2BACA,oBACA,kCACA,4BACA,gBACA,kBACA,8BACA,2BACA,eACA,+BACA,SACA,4BACA,mCACA,aACA,yBACA,eACA,+BACA,cACA,sBACA,mBACA,qBACA,sBACA,uBACA,2BACA,oBACA,yBACA,6BACA,iBACA,eACA,gBACA,yBACA,SACA,eACA,UACA,UACA,cACA,wBACA,kBACA,kBACA,uBACA,UACA,6BACA,sCACA,2BACA,+BACA,iBACA,iDACA,kBACA,4BACA,+CACA,oBACA,sBACA,UACA,gCACA,iCACA,cACA,sBACA,6CACA,aACA,UACA,uBACA,8BACA,qBACA,0DACA,oBACA,qCACA,qBACA,qCACA,6BACA,6BACA,sBACA,gDACA,iBACA,uBACA,UACA,2BACA,qBACA,uBACA,2BACA,+DACA,qBACA,yBACA,iDACA,uBACA,iDACA,+CACA,0BACA,yBACA,yCACA,wCACA,sBACA,UACA,uBACA,yCACA,wBACA,uBACA,iBACA,eACA,mBACA,yBACA,iBACA,mCACA,mCACA,mCACA,2BACA,mCACA,0BACA,mCACA,0EACA,mBACA,mCACA,mBACA,mCACA,mCACA,+CACA,mCACA,mCACA,mCACA,mCACA,mCACA,yBACA,sCACA,uBACA,mBACA,yBACA,wBACA,sCACA,0CACA,SACA,mBACA,kBACA,eACA,+CACA,yBACA,mBACA,eACA,iBACA,uBACA,uBACA,4BACA,8CACA,sBACA,sBACA,iBACA,sBACA,mBACA,iCACA,sEACA,gCACA,UACA,uCACA,8BACA,oCACA,SACA,+CACA,iBACA,2BACA,8BACA,qBACA,UACA,+BACA,iBACA,oBACA,sCACA,yBACA,kCACA,iCACA,sBACA,eACA,+BACA,kBACA,uBACA,yBACA,gCACA,sBACA,gCACA,+BACA,8BACA,iCACA,iCACA,yBACA,iCACA,+BACA,+BACA,4CACA,iBACA,wBACA,uCACA,mCACA,wCACA,yBACA,4CACA,UACA,8BACA,iBACA,sBACA,uBACA,0BACA,4BACA,mBACA,uBACA,0BACA,0BACA,6CACA,+BACA,gDACA,6BACA,kBACA,wBACA,UACA,gDACA,2BACA,8BACA,6BACA,gCACA,+CACA,eACA,4DACA,6BACA,2BACA,wDACA,wBACA,oEACA,kBACA,mBACA,gBACA,2BACA,+BACA,uBACA,8BACA,sDACA,uBACA,0BACA,2BACA,kDACA,iDACA,2CACA,UACA,0BACA,yCACA,YACA,iBACA,qBACA,kBACA,2CACA,iCACA,QACA,gBACA,4BACA,wBACA,oBACA,mDACA,gCACA,iCACA,2BACA,+DACA,4DACA,iBACA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","file":"static/js/main.042ff011.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Segment, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere but couldn't find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/\" primary>\r\n          Return to our main page!\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Menu, Container, Button } from \"semantic-ui-react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <p style={{ fontSize: \"19px\" }}>\r\n            <b>reed</b>.co.uk\r\n          </p>\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Jobs\" as={NavLink} to=\"/jobs\" />\r\n        <Menu.Item name=\"Courses\" as={NavLink} to=\"/courses\" />\r\n        <Menu.Item name=\"Career advice\" as={NavLink} to=\"/careeradvice\" />\r\n        <Menu.Item name=\"Recruiting?Post a job\" as={NavLink} to=\"/recruiting\" />\r\n        <Menu.Item position=\"right\">\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/registercv\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"1px solid white\",\r\n              borderRadius: \"15px\",\r\n              padding: \"7px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Register CV</p>\r\n          </Button>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/signin\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              padding: \"3px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Sign in</p>\r\n          </Button>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/shortlistedjobs\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              padding: \"3px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Shortlisted jobs</p>\r\n          </Button>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { ICounter, IJobResult, IListSearchResult } from \"../Models/Models\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api/search\";\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.respone) {\r\n    toast.error(\"Network error - Servers are currently offline.\");\r\n  }\r\n  const { status } = error.response;\r\n\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    history.push(\"/notfound\");\r\n  }\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nexport const sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\nconst requests = {\r\n  getEasy: (url: string) => axios.get(url),\r\n  get: (url: string) => axios.get(url).then(sleep(50)).then(responseBody),\r\n  getForm: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(sleep(10)).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(sleep(10)).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(sleep(10)).then(responseBody),\r\n};\r\n\r\nconst Jobs = {\r\n  counter: (): Promise<ICounter> => requests.get(\"/counter\"),\r\n  detailedJob: (id: number): Promise<IJobResult> =>\r\n    requests.get(`/result/${id}`),\r\n  listJobs: (params: URLSearchParams): Promise<IListSearchResult> =>\r\n    axios.get(\"/results\", { params: params }).then(responseBody),\r\n\r\n  createIndex: () => requests.getEasy(\"/createIndex\"),\r\n};\r\nexport default Jobs;\r\n","export const salaryOptions = [\r\n  { key: \"s1\", text: \"Up to £10000\", value: 10000 },\r\n  { key: \"s2\", text: \"£12000\", value: 12000 },\r\n  { key: \"s3\", text: \"£14000\", value: 14000 },\r\n  { key: \"s4\", text: \"£18000\", value: 18000 },\r\n  { key: \"s5\", text: \"£25000\", value: 25000 },\r\n  { key: \"s6\", text: \"£30000\", value: 30000 },\r\n  { key: \"s7\", text: \"£35000\", value: 35000 },\r\n  { key: \"s8\", text: \"£40000\", value: 40000 },\r\n  { key: \"s9\", text: \"£45000\", value: 45000 },\r\n  { key: \"s10\", text: \"£50000\", value: 50000 },\r\n  { key: \"s11\", text: \"£55000\", value: 55000 },\r\n  { key: \"s12\", text: \"£75000\", value: 75000 },\r\n  { key: \"s13\", text: \"£100000\", value: 100000 },\r\n];\r\n\r\nconst anytime = new Date(Date.now());\r\nconst today = new Date(Date.now());\r\nconst lastThreeDays = new Date(Date.now());\r\nconst lastWeek = new Date(Date.now());\r\nconst lastTwoWeeks = new Date(Date.now());\r\n//dateTime.setFullYear(dateTime.getFullYear() + 1);\r\nconst changeReq = (data: Date, days: number) => {\r\n  const date = new Date(data.setDate(data.getDate() + days));\r\n  return date.toString();\r\n};\r\n\r\nexport const timeAdded = [\r\n  { key: \"anytime\", text: \"Anytime\", value: changeReq(anytime, -365) },\r\n  { key: \"today\", text: \"Today\", value: changeReq(today, -1) },\r\n  {\r\n    key: \"last three days\",\r\n    text: \"Last three days\",\r\n    value: changeReq(lastThreeDays, -3),\r\n  },\r\n  { key: \"last week\", text: \"Last week\", value: changeReq(lastWeek, -7) },\r\n  {\r\n    key: \"last two weeks\",\r\n    text: \"Last two weeks\",\r\n    value: changeReq(lastTwoWeeks, -14),\r\n  },\r\n];\r\n\r\nexport const contractType = [\r\n  { text: \"Permanent\", value: \"Permanent\" },\r\n  { text: \"Contract\", value: \"Contract\" },\r\n  { text: \"Temporary\", value: \"Temporary\" },\r\n];\r\n\r\nexport const imageSelector = [\r\n  { key: 1, value: \"/assets/reedTechnology.png\" },\r\n  { key: 2, value: \"/assets/reedBussiness.png\" },\r\n  { key: 3, value: \"/assets/reedEngine.png\" },\r\n  { key: 4, value: \"/assets/reedProcurement.png\" },\r\n  { key: 5, value: \"/assets/reedAcc.png\" },\r\n  { key: 0, value: \"/assets/reedLogo2.png\" },\r\n];\r\n\r\nexport const employerSelector = [\r\n  { key: 1, text: \"hays\", value: \"/assets/hays.png\" },\r\n  { key: 2, text: \"the training room\", value: \"/assets/trainingroom.png\" },\r\n  { key: 3, text: \"tradewind\", value: \"/assets/tradewind.png\" },\r\n  { key: 4, text: \"rise\", value: \"/assets/rise.png\" },\r\n  { key: 5, text: \"prospero\", value: \"/assets/prospero.png\" },\r\n  {\r\n    key: 0,\r\n    text: \"teaching personnel\",\r\n    value: \"/assets/teachingpersonnel.png\",\r\n  },\r\n  {\r\n    key: 6,\r\n    text: \"academics\",\r\n    value: \"/assets/academics.png\",\r\n  },\r\n  {\r\n    key: 7,\r\n    text: \"NHS National Services Scotland\",\r\n    value: \"/assets/nhsscotland.png\",\r\n  },\r\n  {\r\n    key: 8,\r\n    text: \"NHS Business Services Authority Jobs\",\r\n    value: \"/assets/nhsjobs.png\",\r\n  },\r\n];\r\n","import { observable, action, runInAction, configure } from \"mobx\";\r\nimport {\r\n  ICounter,\r\n  IQueryRequest,\r\n  IJobResult,\r\n  IListSearchResult,\r\n  ICounters,\r\n  ISuggest,\r\n} from \"../Models/Models\";\r\nimport agent from \"../API/agent\";\r\nimport { history } from \"../../index\";\r\nimport { createContext } from \"react\";\r\nimport { imageSelector } from \"../Util/FilterOptions\";\r\nvar ls = require(\"local-storage\");\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport class JobsStore {\r\n  @observable counter: ICounter | undefined;\r\n  @observable counters: ICounters | undefined;\r\n  @observable resultCount?: number;\r\n  @observable counterRegistry = new Map();\r\n  @observable queryRegistry = new Map();\r\n  @observable loadingInitial = false;\r\n  @observable addedToday: number | undefined;\r\n  @observable jobs?: IListSearchResult;\r\n  @observable jobsRegistry = new Map();\r\n  @observable jobRegistry = new Map();\r\n  @observable appLoaded = false;\r\n  @observable query?: IQueryRequest;\r\n  @observable job?: IJobResult;\r\n  @observable jobresult?: IJobResult;\r\n  @observable jobsPag?: IJobResult[];\r\n  @observable indexButton = false;\r\n  @observable isuggestion?: ISuggest;\r\n  @observable suggestions?: ISuggest[];\r\n\r\n  @action createIndex = async () => {\r\n    this.indexButton = true;\r\n    await agent.createIndex();\r\n    try {\r\n      runInAction(async () => {\r\n        this.indexButton = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action trendingQuery = async (data: string) => {\r\n    const oldQuery: IQueryRequest = await ls.get(\"data\");\r\n    ls.remove(\"data\");\r\n    ls.clear();\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        oldQuery.jobTitle = data;\r\n      });\r\n      return this.jobs;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action setSearchParams = async (data: IQueryRequest) => {\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        if (ls.get(\"data\") !== null) {\r\n          ls.remove(\"data\");\r\n          ls.clear();\r\n          ls.set(\"data\", data);\r\n        } else {\r\n          ls.set(\"data\", data);\r\n        }\r\n\r\n        this.query = data;\r\n        history.push(\"/jobs/results\");\r\n      });\r\n      return this.query;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action setSearchParamsAutosuggest = async (data: IQueryRequest) => {\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        if (ls.get(\"data\") !== null) {\r\n          ls.remove(\"data\");\r\n          ls.clear();\r\n          ls.set(\"data\", data);\r\n        } else {\r\n          ls.set(\"data\", data);\r\n        }\r\n\r\n        this.query = data;\r\n      });\r\n      return this.query;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handlePhoto = () => {\r\n    const min = 0;\r\n    const max = 5;\r\n    const first = min + Math.random() * (max - min);\r\n    const rand = Math.round(first);\r\n    let result;\r\n    for (var i = 0; i < imageSelector.length; i++) {\r\n      if (imageSelector[i].key === rand) {\r\n        result = imageSelector[i].value;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action combineQuery = async (data: IQueryRequest) => {\r\n    const oldQuery: IQueryRequest = await ls.get(\"data\");\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        if (data.minimumSalary !== null) {\r\n          oldQuery.minimumSalary = data.minimumSalary;\r\n        }\r\n        if (data.maximumSalary !== null) {\r\n          oldQuery.maximumSalary = data.maximumSalary;\r\n        }\r\n        if (data.fullTime !== null) {\r\n          oldQuery.fullTime = data.fullTime;\r\n        }\r\n        if (data.partTime !== null) {\r\n          oldQuery.partTime = data.partTime;\r\n        }\r\n        if (data.contract !== null) {\r\n          oldQuery.contract = data.contract;\r\n        }\r\n        if (data.date !== null) {\r\n          oldQuery.date = data.date;\r\n        }\r\n        ls.set(\"data\", oldQuery);\r\n        this.getListJobs(oldQuery!);\r\n      });\r\n      return this.jobs;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action getQuery = () => {\r\n    try {\r\n      runInAction(\"loading counter\", () => {\r\n        this.query = ls.get(\"data\");\r\n      });\r\n      return this.query;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action jobsCounter = async () => {\r\n    try {\r\n      let counter = await agent.counter();\r\n      runInAction(\"loading counter\", () => {\r\n        this.counter = counter;\r\n        this.counterRegistry.set(counter, this.counter);\r\n      });\r\n      return counter;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action loadJob = async (id: number) => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      let job = await agent.detailedJob(id);\r\n      runInAction(\"load job\", () => {\r\n        this.job = job;\r\n        this.jobRegistry.set(job, this.job);\r\n        this.loadingInitial = false;\r\n      });\r\n      return job;\r\n    } catch (error) {\r\n      this.loadingInitial = false;\r\n\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action addPhotoToJobs = async (jobs: IListSearchResult) => {\r\n    try {\r\n      runInAction(\"add images\", () => {\r\n        jobs.lists.forEach((job) => {\r\n          job.photos = this.handlePhoto();\r\n        });\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getCounters = (params: IListSearchResult) => {\r\n    try {\r\n      runInAction(() => {\r\n        this.counters = params.counters;\r\n      });\r\n      return this.counters;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action getListJobs = async (params: IQueryRequest) => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      let jobs = await agent.listJobs(params);\r\n      runInAction(\"get list\", () => {\r\n        this.jobs = jobs;\r\n        this.jobsRegistry.set(jobs, this.jobs);\r\n        this.loadingInitial = false;\r\n        this.addPhotoToJobs(this.jobs);\r\n        this.getCounters(jobs!);\r\n      });\r\n\r\n      return this.jobs;\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getListJobTitles = async (params: string) => {\r\n    this.isuggestion!.jobTitle = params;\r\n    try {\r\n      let jobs = await agent.listJobs(this.isuggestion!);\r\n      let suggestions: ISuggest[];\r\n      let suggestion: ISuggest;\r\n      runInAction(\"get list\", () => {\r\n        jobs.lists.forEach((job) => {\r\n          suggestion.jobTitle = job.jobTitle;\r\n          suggestion.locationName = job.locationName;\r\n          suggestions?.push(suggestion);\r\n        });\r\n        this.suggestions = suggestions;\r\n      });\r\n      return this.suggestions;\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport const JobStore = createContext(new JobsStore());\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport AutoSuggest from \"react-autosuggest\";\r\nimport \"./testing.css\";\r\nimport { jobtitles } from \"./Util/JobTitles\";\r\nimport { IQueryRequest } from \"./Models/Models\";\r\nimport { JobStore } from \"./Store/jobsStore\";\r\n\r\nconst lowerCasedJobTitles = jobtitles.map((language) => language.toLowerCase());\r\n\r\nconst Auto = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParamsAutosuggest } = jobsStore;\r\n  const [value, setValue] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [query, setQuery] = React.useState<IQueryRequest>();\r\n\r\n  function getSuggestions(value: string): string[] {\r\n    return lowerCasedJobTitles.filter((language) =>\r\n      language.startsWith(value.trim().toLowerCase())\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <AutoSuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsClearRequested={() => setSuggestions([])}\r\n        onSuggestionsFetchRequested={({ value }) => {\r\n          setValue(value);\r\n          setSuggestions(getSuggestions(value));\r\n        }}\r\n        onSuggestionSelected={async (_, { suggestionValue }) => {\r\n          await setQuery({\r\n            ...query!,\r\n            jobTitle: suggestionValue,\r\n          });\r\n\r\n          await setSearchParamsAutosuggest(query!);\r\n\r\n          console.log(suggestionValue);\r\n          console.log(query?.jobTitle);\r\n        }}\r\n        getSuggestionValue={(suggestion) => suggestion}\r\n        renderSuggestion={(suggestion) => <span>{suggestion}</span>}\r\n        inputProps={{\r\n          placeholder: \"e.g. nurse\",\r\n          value: value,\r\n          onChange: (_, { newValue, method }) => {\r\n            setValue(newValue);\r\n          },\r\n        }}\r\n        highlightFirstSuggestion={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Auto;\r\n","export const jobtitles: string[] = [\r\n  \"accountant\",\r\n  \"actor\",\r\n  \"actuary\",\r\n  \"adhesive bonding machine tender\",\r\n  \"adjudicator\",\r\n  \"administrative assistant\",\r\n  \"administrative services manager\",\r\n  \"adult education teacher\",\r\n  \"advertising manager\",\r\n  \"advertising sales agent\",\r\n  \"aerobics instructor\",\r\n  \"aerospace engineer\",\r\n  \"aerospace engineering technician\",\r\n  \"agent\",\r\n  \"agricultural engineer\",\r\n  \"agricultural equipment operator\",\r\n  \"agricultural grader\",\r\n  \"agricultural inspector\",\r\n  \"agricultural manager\",\r\n  \"agricultural sciences teacher\",\r\n  \"agricultural sorter\",\r\n  \"agricultural technician\",\r\n  \"agricultural worker\",\r\n  \"air conditioning installer\",\r\n  \"air conditioning mechanic\",\r\n  \"air traffic controller\",\r\n  \"aircraft cargo handling supervisor\",\r\n  \"aircraft mechanic\",\r\n  \"aircraft service technician\",\r\n  \"airline copilot\",\r\n  \"airline pilot\",\r\n  \"ambulance dispatcher\",\r\n  \"ambulance driver\",\r\n  \"amusement machine servicer\",\r\n  \"anesthesiologist\",\r\n  \"animal breeder\",\r\n  \"animal control worker\",\r\n  \"animal scientist\",\r\n  \"animal trainer\",\r\n  \"animator\",\r\n  \"answering service operator\",\r\n  \"anthropologist\",\r\n  \"apparel patternmaker\",\r\n  \"apparel worker\",\r\n  \"arbitrator\",\r\n  \"archeologist\",\r\n  \"architect\",\r\n  \"architectural drafter\",\r\n  \"architectural manager\",\r\n  \"archivist\",\r\n  \"art director\",\r\n  \"art teacher\",\r\n  \"artist\",\r\n  \"assembler\",\r\n  \"astronomer\",\r\n  \"athlete\",\r\n  \"athletic trainer\",\r\n  \"ATM machine repairer\",\r\n  \"atmospheric scientist\",\r\n  \"attendant\",\r\n  \"audio and video equipment technician\",\r\n  \"audio-visual and multimedia collections specialist\",\r\n  \"audiologist\",\r\n  \"auditor\",\r\n  \"author\",\r\n  \"auto damage insurance appraiser\",\r\n  \"automotive and watercraft service attendant\",\r\n  \"automotive glass installer\",\r\n  \"automotive mechanic\",\r\n  \"avionics technician\",\r\n  \"baggage porter\",\r\n  \"bailiff\",\r\n  \"baker\",\r\n  \"barback\",\r\n  \"barber\",\r\n  \"bartender\",\r\n  \"basic education teacher\",\r\n  \"behavioral disorder counselor\",\r\n  \"bellhop\",\r\n  \"bench carpenter\",\r\n  \"bicycle repairer\",\r\n  \"bill and account collector\",\r\n  \"billing and posting clerk\",\r\n  \"biochemist\",\r\n  \"biological technician\",\r\n  \"biomedical engineer\",\r\n  \"biophysicist\",\r\n  \"blaster\",\r\n  \"blending machine operator\",\r\n  \"blockmason\",\r\n  \"boiler operator\",\r\n  \"boilermaker\",\r\n  \"bookkeeper\",\r\n  \"boring machine tool tender\",\r\n  \"brazer\",\r\n  \"brickmason\",\r\n  \"bridge and lock tender\",\r\n  \"broadcast news analyst\",\r\n  \"broadcast technician\",\r\n  \"brokerage clerk\",\r\n  \"budget analyst\",\r\n  \"building inspector\",\r\n  \"bus mechanic\",\r\n  \"butcher\",\r\n  \"buyer\",\r\n  \"cabinetmaker\",\r\n  \"cafeteria attendant\",\r\n  \"cafeteria cook\",\r\n  \"camera operator\",\r\n  \"camera repairer\",\r\n  \"cardiovascular technician\",\r\n  \"cargo agent\",\r\n  \"carpenter\",\r\n  \"carpet installer\",\r\n  \"cartographer\",\r\n  \"cashier\",\r\n  \"caster\",\r\n  \"ceiling tile installer\",\r\n  \"cellular equipment installer\",\r\n  \"cement mason\",\r\n  \"channeling machine operator\",\r\n  \"chauffeur\",\r\n  \"checker\",\r\n  \"chef\",\r\n  \"chemical engineer\",\r\n  \"chemical plant operator\",\r\n  \"chemist\",\r\n  \"chemistry teacher\",\r\n  \"chief executive\",\r\n  \"child social worker\",\r\n  \"childcare worker\",\r\n  \"chiropractor\",\r\n  \"choreographer\",\r\n  \"civil drafter\",\r\n  \"civil engineer\",\r\n  \"civil engineering technician\",\r\n  \"claims adjuster\",\r\n  \"claims examiner\",\r\n  \"claims investigator\",\r\n  \"cleaner\",\r\n  \"clinical laboratory technician\",\r\n  \"clinical laboratory technologist\",\r\n  \"clinical psychologist\",\r\n  \"coating worker\",\r\n  \"coatroom attendant\",\r\n  \"coil finisher\",\r\n  \"coil taper\",\r\n  \"coil winder\",\r\n  \"coin machine servicer\",\r\n  \"commercial diver\",\r\n  \"commercial pilot\",\r\n  \"commodities sales agent\",\r\n  \"communications equipment operator\",\r\n  \"communications teacher\",\r\n  \"community association manager\",\r\n  \"community service manager\",\r\n  \"compensation and benefits manager\",\r\n  \"compliance officer\",\r\n  \"composer\",\r\n  \"computer hardware engineer\",\r\n  \"computer network architect\",\r\n  \"computer operator\",\r\n  \"computer programmer\",\r\n  \"computer science teacher\",\r\n  \"computer support specialist\",\r\n  \"computer systems administrator\",\r\n  \"computer systems analyst\",\r\n  \"concierge\",\r\n  \"conciliator\",\r\n  \"concrete finisher\",\r\n  \"conservation science teacher\",\r\n  \"conservation scientist\",\r\n  \"conservation worker\",\r\n  \"conservator\",\r\n  \"construction inspector\",\r\n  \"construction manager\",\r\n  \"construction painter\",\r\n  \"construction worker\",\r\n  \"continuous mining machine operator\",\r\n  \"convention planner\",\r\n  \"conveyor operator\",\r\n  \"cook\",\r\n  \"cooling equipment operator\",\r\n  \"copy marker\",\r\n  \"correctional officer\",\r\n  \"correctional treatment specialist\",\r\n  \"correspondence clerk\",\r\n  \"correspondent\",\r\n  \"cosmetologist\",\r\n  \"cost estimator\",\r\n  \"costume attendant\",\r\n  \"counseling psychologist\",\r\n  \"counselor\",\r\n  \"courier\",\r\n  \"chef\",\r\n  \"driver\",\r\n  \"sales\",\r\n  \"goverment\",\r\n  \"programmer\",\r\n  \"developer\",\r\n  \"care\",\r\n  \"work from home\",\r\n  \"reporter\",\r\n  \"c# developer\",\r\n  \"react developer\",\r\n  \"reporter\",\r\n  \"court reporter\",\r\n  \"craft artist\",\r\n  \"crane operator\",\r\n  \"credit analyst\",\r\n  \"credit checker\",\r\n  \"credit counselor\",\r\n  \"criminal investigator\",\r\n  \"criminal justice teacher\",\r\n  \"crossing guard\",\r\n  \"curator\",\r\n  \"custom sewer\",\r\n  \"customer service representative\",\r\n  \"cutter\",\r\n  \"cutting machine operator\",\r\n  \"dancer\",\r\n  \"data entry keyer\",\r\n  \"database administrator\",\r\n  \"decorating worker\",\r\n  \"delivery services driver\",\r\n  \"demonstrator\",\r\n  \"dental assistant\",\r\n  \"dental hygienist\",\r\n  \"dental laboratory technician\",\r\n  \"dentist\",\r\n  \"derrick operator\",\r\n  \"designer\",\r\n  \"desktop publisher\",\r\n  \"detective\",\r\n  \"diagnostic medical sonographer\",\r\n  \"die maker\",\r\n  \"diesel engine specialist\",\r\n  \"dietetic technician\",\r\n  \"dietitian\",\r\n  \"dinkey operator\",\r\n  \"director\",\r\n  \"dishwasher\",\r\n  \"dispatcher\",\r\n  \"door-to-door sales worker\",\r\n  \"drafter\",\r\n  \"dragline operator\",\r\n  \"drama teacher\",\r\n  \"dredge operator\",\r\n  \"dressing room attendant\",\r\n  \"dressmaker\",\r\n  \"drier operator\",\r\n  \"drilling machine tool operator\",\r\n  \"dry-cleaning worker\",\r\n  \"drywall installer\",\r\n  \"dyeing machine operator\",\r\n  \"earth driller\",\r\n  \"economics teacher\",\r\n  \"economist\",\r\n  \"editor\",\r\n  \"education administrator\",\r\n  \"electric motor repairer\",\r\n  \"electrical electronics drafter\",\r\n  \"electrical engineer\",\r\n  \"electrical equipment assembler\",\r\n  \"electrical installer\",\r\n  \"electrical power-line installer\",\r\n  \"electrician\",\r\n  \"electro-mechanical technician\",\r\n  \"elementary school teacher\",\r\n  \"elevator installer\",\r\n  \"elevator repairer\",\r\n  \"embalmer\",\r\n  \"emergency management director\",\r\n  \"emergency medical technician\",\r\n  \"engine assembler\",\r\n  \"engineer\",\r\n  \"engineering manager\",\r\n  \"engineering teacher\",\r\n  \"english language teacher\",\r\n  \"engraver\",\r\n  \"entertainment attendant\",\r\n  \"environmental engineer\",\r\n  \"environmental science teacher\",\r\n  \"environmental scientist\",\r\n  \"epidemiologist\",\r\n  \"escort\",\r\n  \"etcher\",\r\n  \"event planner\",\r\n  \"excavating operator\",\r\n  \"executive administrative assistant\",\r\n  \"executive secretary\",\r\n  \"exhibit designer\",\r\n  \"expediting clerk\",\r\n  \"explosives worker\",\r\n  \"extraction worker\",\r\n  \"fabric mender\",\r\n  \"fabric patternmaker\",\r\n  \"fabricator\",\r\n  \"faller\",\r\n  \"family practitioner\",\r\n  \"family social worker\",\r\n  \"family therapist\",\r\n  \"farm advisor\",\r\n  \"farm equipment mechanic\",\r\n  \"farm labor contractor\",\r\n  \"farmer\",\r\n  \"farmworker\",\r\n  \"fashion designer\",\r\n  \"fast food cook\",\r\n  \"fence erector\",\r\n  \"fiberglass fabricator\",\r\n  \"fiberglass laminator\",\r\n  \"file clerk\",\r\n  \"filling machine operator\",\r\n  \"film and video editor\",\r\n  \"financial analyst\",\r\n  \"financial examiner\",\r\n  \"financial manager\",\r\n  \"financial services sales agent\",\r\n  \"fine artist\",\r\n  \"fire alarm system installer\",\r\n  \"fire dispatcher\",\r\n  \"fire inspector\",\r\n  \"fire investigator\",\r\n  \"firefighter\",\r\n  \"fish and game warden\",\r\n  \"fish cutter\",\r\n  \"fish trimmer\",\r\n  \"fisher\",\r\n  \"fitness studies teacher\",\r\n  \"fitness trainer\",\r\n  \"flight attendant\",\r\n  \"floor finisher\",\r\n  \"floor layer\",\r\n  \"floor sander\",\r\n  \"floral designer\",\r\n  \"food batchmaker\",\r\n  \"food cooking machine operator\",\r\n  \"food preparation worker\",\r\n  \"food science technician\",\r\n  \"food scientist\",\r\n  \"food server\",\r\n  \"food service manager\",\r\n  \"food technologist\",\r\n  \"foreign language teacher\",\r\n  \"foreign literature teacher\",\r\n  \"forensic science technician\",\r\n  \"forest fire inspector\",\r\n  \"forest fire prevention specialist\",\r\n  \"forest worker\",\r\n  \"forester\",\r\n  \"forestry teacher\",\r\n  \"forging machine setter\",\r\n  \"foundry coremaker\",\r\n  \"freight agent\",\r\n  \"freight mover\",\r\n  \"fundraising manager\",\r\n  \"funeral attendant\",\r\n  \"funeral director\",\r\n  \"funeral service manager\",\r\n  \"furnace operator\",\r\n  \"furnishings worker\",\r\n  \"furniture finisher\",\r\n  \"gaming booth cashier\",\r\n  \"gaming cage worker\",\r\n  \"gaming change person\",\r\n  \"gaming dealer\",\r\n  \"gaming investigator\",\r\n  \"gaming manager\",\r\n  \"gaming surveillance officer\",\r\n  \"garment mender\",\r\n  \"garment presser\",\r\n  \"gas compressor\",\r\n  \"gas plant operator\",\r\n  \"gas pumping station operator\",\r\n  \"general manager\",\r\n  \"general practitioner\",\r\n  \"geographer\",\r\n  \"geography teacher\",\r\n  \"geological engineer\",\r\n  \"geological technician\",\r\n  \"geoscientist\",\r\n  \"glazier\",\r\n  \"government program eligibility interviewer\",\r\n  \"graduate teaching assistant\",\r\n  \"graphic designer\",\r\n  \"groundskeeper\",\r\n  \"groundskeeping worker\",\r\n  \"gynecologist\",\r\n  \"hairdresser\",\r\n  \"hairstylist\",\r\n  \"hand grinding worker\",\r\n  \"hand laborer\",\r\n  \"hand packager\",\r\n  \"hand packer\",\r\n  \"hand polishing worker\",\r\n  \"hand sewer\",\r\n  \"hazardous materials removal worker\",\r\n  \"head cook\",\r\n  \"health and safety engineer\",\r\n  \"health educator\",\r\n  \"health information technician\",\r\n  \"health services manager\",\r\n  \"health specialties teacher\",\r\n  \"healthcare social worker\",\r\n  \"hearing officer\",\r\n  \"heat treating equipment setter\",\r\n  \"heating installer\",\r\n  \"heating mechanic\",\r\n  \"heavy truck driver\",\r\n  \"highway maintenance worker\",\r\n  \"historian\",\r\n  \"history teacher\",\r\n  \"hoist and winch operator\",\r\n  \"home appliance repairer\",\r\n  \"home economics teacher\",\r\n  \"home entertainment installer\",\r\n  \"home health aide\",\r\n  \"home management advisor\",\r\n  \"host\",\r\n  \"hostess\",\r\n  \"hostler\",\r\n  \"hotel desk clerk\",\r\n  \"housekeeping cleaner\",\r\n  \"human resources assistant\",\r\n  \"human resources manager\",\r\n  \"human service assistant\",\r\n  \"hunter\",\r\n  \"hydrologist\",\r\n  \"illustrator\",\r\n  \"industrial designer\",\r\n  \"industrial engineer\",\r\n  \"industrial engineering technician\",\r\n  \"industrial machinery mechanic\",\r\n  \"industrial production manager\",\r\n  \"industrial truck operator\",\r\n  \"industrial-organizational psychologist\",\r\n  \"information clerk\",\r\n  \"information research scientist\",\r\n  \"information security analyst\",\r\n  \"information systems manager\",\r\n  \"inspector\",\r\n  \"instructional coordinator\",\r\n  \"instructor\",\r\n  \"insulation worker\",\r\n  \"insurance claims clerk\",\r\n  \"insurance sales agent\",\r\n  \"insurance underwriter\",\r\n  \"intercity bus driver\",\r\n  \"interior designer\",\r\n  \"internist\",\r\n  \"interpreter\",\r\n  \"interviewer\",\r\n  \"investigator\",\r\n  \"jailer\",\r\n  \"janitor\",\r\n  \"jeweler\",\r\n  \"judge\",\r\n  \"judicial law clerk\",\r\n  \"kettle operator\",\r\n  \"kiln operator\",\r\n  \"kindergarten teacher\",\r\n  \"laboratory animal caretaker\",\r\n  \"landscape architect\",\r\n  \"landscaping worker\",\r\n  \"lathe setter\",\r\n  \"laundry worker\",\r\n  \"law enforcement teacher\",\r\n  \"law teacher\",\r\n  \"lawyer\",\r\n  \"layout worker\",\r\n  \"leather worker\",\r\n  \"legal assistant\",\r\n  \"legal secretary\",\r\n  \"legislator\",\r\n  \"librarian\",\r\n  \"library assistant\",\r\n  \"library science teacher\",\r\n  \"library technician\",\r\n  \"licensed practical nurse\",\r\n  \"licensed vocational nurse\",\r\n  \"life scientist\",\r\n  \"lifeguard\",\r\n  \"light truck driver\",\r\n  \"line installer\",\r\n  \"literacy teacher\",\r\n  \"literature teacher\",\r\n  \"loading machine operator\",\r\n  \"loan clerk\",\r\n  \"loan interviewer\",\r\n  \"loan officer\",\r\n  \"lobby attendant\",\r\n  \"locker room attendant\",\r\n  \"locksmith\",\r\n  \"locomotive engineer\",\r\n  \"locomotive firer\",\r\n  \"lodging manager\",\r\n  \"log grader\",\r\n  \"logging equipment operator\",\r\n  \"logistician\",\r\n  \"machine feeder\",\r\n  \"machinist\",\r\n  \"magistrate judge\",\r\n  \"magistrate\",\r\n  \"maid\",\r\n  \"mail clerk\",\r\n  \"mail machine operator\",\r\n  \"mail superintendent\",\r\n  \"maintenance painter\",\r\n  \"maintenance worker\",\r\n  \"makeup artist\",\r\n  \"management analyst\",\r\n  \"manicurist\",\r\n  \"manufactured building installer\",\r\n  \"mapping technician\",\r\n  \"marble setter\",\r\n  \"marine engineer\",\r\n  \"marine oiler\",\r\n  \"market research analyst\",\r\n  \"marketing manager\",\r\n  \"marketing specialist\",\r\n  \"carpenter\",\r\n  \"doctor\",\r\n  \"nhs\",\r\n  \"mover\",\r\n  \"marriage therapist\",\r\n  \"massage therapist\",\r\n  \"material mover\",\r\n  \"materials engineer\",\r\n  \"materials scientist\",\r\n  \"mathematical science teacher\",\r\n  \"mathematical technician\",\r\n  \"mathematician\",\r\n  \"maxillofacial surgeon\",\r\n  \"measurer\",\r\n  \"meat cutter\",\r\n  \"meat packer\",\r\n  \"meat trimmer\",\r\n  \"mechanical door repairer\",\r\n  \"mechanical drafter\",\r\n  \"mechanical engineer\",\r\n  \"mechanical engineering technician\",\r\n  \"mediator\",\r\n  \"medical appliance technician\",\r\n  \"medical assistant\",\r\n  \"medical equipment preparer\",\r\n  \"medical equipment repairer\",\r\n  \"medical laboratory technician\",\r\n  \"medical laboratory technologist\",\r\n  \"medical records technician\",\r\n  \"medical scientist\",\r\n  \"medical secretary\",\r\n  \"medical services manager\",\r\n  \"medical transcriptionist\",\r\n  \"meeting planner\",\r\n  \"mental health counselor\",\r\n  \"mental health social worker\",\r\n  \"merchandise displayer\",\r\n  \"messenger\",\r\n  \"metal caster\",\r\n  \"metal patternmaker\",\r\n  \"metal pickling operator\",\r\n  \"metal pourer\",\r\n  \"metal worker\",\r\n  \"metal-refining furnace operator\",\r\n  \"metal-refining furnace tender\",\r\n  \"meter reader\",\r\n  \"microbiologist\",\r\n  \"middle school teacher\",\r\n  \"milling machine setter\",\r\n  \"millwright\",\r\n  \"mine cutting machine operator\",\r\n  \"mine shuttle car operator\",\r\n  \"mining engineer\",\r\n  \"mining safety engineer\",\r\n  \"mining safety inspector\",\r\n  \"mining service unit operator\",\r\n  \"mixing machine setter\",\r\n  \"mobile heavy equipment mechanic\",\r\n  \"mobile home installer\",\r\n  \"model maker\",\r\n  \"model\",\r\n  \"molder\",\r\n  \"mortician\",\r\n  \"motel desk clerk\",\r\n  \"motion picture projectionist\",\r\n  \"motorboat mechanic\",\r\n  \"motorboat operator\",\r\n  \"motorboat service technician\",\r\n  \"motorcycle mechanic\",\r\n  \"multimedia artist\",\r\n  \"museum technician\",\r\n  \"music director\",\r\n  \"music teacher\",\r\n  \"musical instrument repairer\",\r\n  \"musician\",\r\n  \"natural sciences manager\",\r\n  \"naval architect\",\r\n  \"network systems administrator\",\r\n  \"new accounts clerk\",\r\n  \"news vendor\",\r\n  \"nonfarm animal caretaker\",\r\n  \"nuclear engineer\",\r\n  \"nuclear medicine technologist\",\r\n  \"nuclear power reactor operator\",\r\n  \"nuclear technician\",\r\n  \"nursing aide\",\r\n  \"nursing instructor\",\r\n  \"nursing teacher\",\r\n  \"nutritionist\",\r\n  \"obstetrician\",\r\n  \"occupational health and safety specialist\",\r\n  \"occupational health and safety technician\",\r\n  \"occupational therapist\",\r\n  \"occupational therapy aide\",\r\n  \"occupational therapy assistant\",\r\n  \"offbearer\",\r\n  \"office clerk\",\r\n  \"office machine operator\",\r\n  \"operating engineer\",\r\n  \"operations manager\",\r\n  \"operations research analyst\",\r\n  \"ophthalmic laboratory technician\",\r\n  \"optician\",\r\n  \"optometrist\",\r\n  \"oral surgeon\",\r\n  \"order clerk\",\r\n  \"order filler\",\r\n  \"orderly\",\r\n  \"ordnance handling expert\",\r\n  \"orthodontist\",\r\n  \"orthotist\",\r\n  \"outdoor power equipment mechanic\",\r\n  \"oven operator\",\r\n  \"packaging machine operator\",\r\n  \"painter \",\r\n  \"painting worker\",\r\n  \"paper goods machine setter\",\r\n  \"paperhanger\",\r\n  \"paralegal\",\r\n  \"paramedic\",\r\n  \"parking enforcement worker\",\r\n  \"parking lot attendant\",\r\n  \"parts salesperson\",\r\n  \"paving equipment operator\",\r\n  \"payroll clerk\",\r\n  \"pediatrician\",\r\n  \"pedicurist\",\r\n  \"personal care aide\",\r\n  \"personal chef\",\r\n  \"personal financial advisor\",\r\n  \"pest control worker\",\r\n  \"pesticide applicator\",\r\n  \"pesticide handler\",\r\n  \"pesticide sprayer\",\r\n  \"petroleum engineer\",\r\n  \"petroleum gauger\",\r\n  \"petroleum pump system operator\",\r\n  \"petroleum refinery operator\",\r\n  \"petroleum technician\",\r\n  \"pharmacist\",\r\n  \"pharmacy aide\",\r\n  \"pharmacy technician\",\r\n  \"philosophy teacher\",\r\n  \"photogrammetrist\",\r\n  \"photographer\",\r\n  \"photographic process worker\",\r\n  \"photographic processing machine operator\",\r\n  \"physical therapist aide\",\r\n  \"physical therapist assistant\",\r\n  \"physical therapist\",\r\n  \"physician assistant\",\r\n  \"physician\",\r\n  \"physicist\",\r\n  \"physics teacher\",\r\n  \"pile-driver operator\",\r\n  \"pipefitter\",\r\n  \"pipelayer\",\r\n  \"planing machine operator\",\r\n  \"planning clerk\",\r\n  \"plant operator\",\r\n  \"plant scientist\",\r\n  \"plasterer\",\r\n  \"plastic patternmaker\",\r\n  \"plastic worker\",\r\n  \"plumber\",\r\n  \"podiatrist\",\r\n  \"police dispatcher\",\r\n  \"police officer\",\r\n  \"policy processing clerk\",\r\n  \"political science teacher\",\r\n  \"political scientist\",\r\n  \"postal service clerk\",\r\n  \"postal service mail carrier\",\r\n  \"postal service mail processing machine operator\",\r\n  \"postal service mail processor\",\r\n  \"postal service mail sorter\",\r\n  \"postmaster\",\r\n  \"postsecondary teacher\",\r\n  \"poultry cutter\",\r\n  \"poultry trimmer\",\r\n  \"power dispatcher\",\r\n  \"power distributor\",\r\n  \"power plant operator\",\r\n  \"power tool repairer\",\r\n  \"precious stone worker\",\r\n  \"precision instrument repairer\",\r\n  \"prepress technician\",\r\n  \"preschool teacher\",\r\n  \"priest\",\r\n  \"print binding worker\",\r\n  \"printing press operator\",\r\n  \"private detective\",\r\n  \"probation officer\",\r\n  \"procurement clerk\",\r\n  \"producer\",\r\n  \"product promoter\",\r\n  \"production clerk\",\r\n  \"production occupation\",\r\n  \"proofreader\",\r\n  \"property manager\",\r\n  \"prosthetist\",\r\n  \"prosthodontist\",\r\n  \"psychiatric aide\",\r\n  \"psychiatric technician\",\r\n  \"psychiatrist\",\r\n  \"psychologist\",\r\n  \"psychology teacher\",\r\n  \"public relations manager\",\r\n  \"public relations specialist\",\r\n  \"pump operator\",\r\n  \"purchasing agent\",\r\n  \"purchasing manager\",\r\n  \"radiation therapist\",\r\n  \"radio announcer\",\r\n  \"radio equipment installer\",\r\n  \"radio operator\",\r\n  \"radiologic technician\",\r\n  \"radiologic technologist\",\r\n  \"rail car repairer\",\r\n  \"rail transportation worker\",\r\n  \"rail yard engineer\",\r\n  \"rail-track laying equipment operator\",\r\n  \"railroad brake operator\",\r\n  \"railroad conductor\",\r\n  \"railroad police\",\r\n  \"rancher\",\r\n  \"real estate appraiser\",\r\n  \"real estate broker\",\r\n  \"real estate manager\",\r\n  \"real estate sales agent\",\r\n  \"receiving clerk\",\r\n  \"receptionist\",\r\n  \"record clerk\",\r\n  \"recreation teacher\",\r\n  \"recreation worker\",\r\n  \"recreational therapist\",\r\n  \"recreational vehicle service technician\",\r\n  \"recyclable material collector\",\r\n  \"referee\",\r\n  \"refractory materials repairer\",\r\n  \"refrigeration installer\",\r\n  \"refrigeration mechanic\",\r\n  \"refuse collector\",\r\n  \"regional planner\",\r\n  \"registered nurse\",\r\n  \"rehabilitation counselor\",\r\n  \"reinforcing iron worker\",\r\n  \"reinforcing rebar worker\",\r\n  \"religion teacher\",\r\n  \"religious activities director\",\r\n  \"religious worker\",\r\n  \"rental clerk\",\r\n  \"repair worker\",\r\n  \"reporter\",\r\n  \"residential advisor\",\r\n  \"resort desk clerk\",\r\n  \"respiratory therapist\",\r\n  \"respiratory therapy technician\",\r\n  \"retail buyer\",\r\n  \"retail salesperson\",\r\n  \"revenue agent\",\r\n  \"rigger\",\r\n  \"rock splitter\",\r\n  \"rolling machine tender\",\r\n  \"roof bolter\",\r\n  \"roofer\",\r\n  \"rotary drill operator\",\r\n  \"roustabout\",\r\n  \"safe repairer\",\r\n  \"sailor\",\r\n  \"sales engineer\",\r\n  \"sales manager\",\r\n  \"sales representative\",\r\n  \"sampler\",\r\n  \"sawing machine operator\",\r\n  \"scaler\",\r\n  \"school bus driver\",\r\n  \"school psychologist\",\r\n  \"school social worker\",\r\n  \"scout leader\",\r\n  \"sculptor\",\r\n  \"secondary education teacher\",\r\n  \"secondary school teacher\",\r\n  \"secretary\",\r\n  \"securities sales agent\",\r\n  \"security guard\",\r\n  \"security system installer\",\r\n  \"segmental paver\",\r\n  \"self-enrichment education teacher\",\r\n  \"semiconductor processor\",\r\n  \"septic tank servicer\",\r\n  \"set designer\",\r\n  \"sewer pipe cleaner\",\r\n  \"sewing machine operator\",\r\n  \"shampooer\",\r\n  \"shaper\",\r\n  \"sheet metal worker\",\r\n  \"sheriff's patrol officer\",\r\n  \"ship captain\",\r\n  \"ship engineer\",\r\n  \"ship loader\",\r\n  \"shipmate\",\r\n  \"shipping clerk\",\r\n  \"shoe machine operator\",\r\n  \"shoe worker\",\r\n  \"short order cook\",\r\n  \"signal operator\",\r\n  \"signal repairer\",\r\n  \"singer\",\r\n  \"ski patrol\",\r\n  \"skincare specialist\",\r\n  \"slaughterer\",\r\n  \"slicing machine tender\",\r\n  \"slot supervisor\",\r\n  \"social science research assistant\",\r\n  \"social sciences teacher\",\r\n  \"social scientist\",\r\n  \"social service assistant\",\r\n  \"social service manager\",\r\n  \"social work teacher\",\r\n  \"social worker\",\r\n  \"sociologist\",\r\n  \"sociology teacher\",\r\n  \"software developer\",\r\n  \"software engineer\",\r\n  \"soil scientist\",\r\n  \"solderer\",\r\n  \"sorter\",\r\n  \"sound engineering technician\",\r\n  \"space scientist\",\r\n  \"special education teacher\",\r\n  \"speech-language pathologist\",\r\n  \"sports book runner\",\r\n  \"sports entertainer\",\r\n  \"sports performer\",\r\n  \"stationary engineer\",\r\n  \"statistical assistant\",\r\n  \"statistician\",\r\n  \"steamfitter\",\r\n  \"stock clerk\",\r\n  \"stock mover\",\r\n  \"stonemason\",\r\n  \"street vendor\",\r\n  \"streetcar operator\",\r\n  \"structural iron worker\",\r\n  \"structural metal fabricator\",\r\n  \"structural metal fitter\",\r\n  \"structural steel worker\",\r\n  \"stucco mason\",\r\n  \"substance abuse counselor\",\r\n  \"substance abuse social worker\",\r\n  \"subway operator\",\r\n  \"surfacing equipment operator\",\r\n  \"surgeon\",\r\n  \"surgical technologist\",\r\n  \"survey researcher\",\r\n  \"surveying technician\",\r\n  \"surveyor\",\r\n  \"switch operator\",\r\n  \"switchboard operator\",\r\n  \"tailor\",\r\n  \"tamping equipment operator\",\r\n  \"tank car loader\",\r\n  \"taper\",\r\n  \"tax collector\",\r\n  \"tax examiner\",\r\n  \"tax preparer\",\r\n  \"taxi driver\",\r\n  \"teacher assistant\",\r\n  \"teacher\",\r\n  \"team assembler\",\r\n  \"technical writer\",\r\n  \"telecommunications equipment installer\",\r\n  \"telemarketer\",\r\n  \"telephone operator\",\r\n  \"television announcer\",\r\n  \"teller\",\r\n  \"terrazzo finisher\",\r\n  \"terrazzo worker\",\r\n  \"tester\",\r\n  \"textile bleaching operator\",\r\n  \"textile cutting machine setter\",\r\n  \"textile knitting machine setter\",\r\n  \"textile presser\",\r\n  \"textile worker\",\r\n  \"therapist\",\r\n  \"ticket agent\",\r\n  \"ticket taker\",\r\n  \"tile setter\",\r\n  \"timekeeping clerk\",\r\n  \"timing device assembler\",\r\n  \"tire builder\",\r\n  \"tire changer\",\r\n  \"tire repairer\",\r\n  \"title abstractor\",\r\n  \"title examiner\",\r\n  \"title searcher\",\r\n  \"tobacco roasting machine operator\",\r\n  \"tool filer\",\r\n  \"tool grinder\",\r\n  \"tool maker\",\r\n  \"tool sharpener\",\r\n  \"tour guide\",\r\n  \"tower equipment installer\",\r\n  \"tower operator\",\r\n  \"track switch repairer\",\r\n  \"tractor operator\",\r\n  \"tractor-trailer truck driver\",\r\n  \"traffic clerk\",\r\n  \"traffic technician\",\r\n  \"training and development manager\",\r\n  \"training and development specialist\",\r\n  \"transit police\",\r\n  \"translator\",\r\n  \"transportation equipment painter\",\r\n  \"transportation inspector\",\r\n  \"transportation security screener\",\r\n  \"transportation worker\",\r\n  \"trapper\",\r\n  \"travel agent\",\r\n  \"travel clerk\",\r\n  \"travel guide\",\r\n  \"tree pruner\",\r\n  \"tree trimmer\",\r\n  \"trimmer\",\r\n  \"truck loader\",\r\n  \"truck mechanic\",\r\n  \"tuner\",\r\n  \"turning machine tool operator\",\r\n  \"typist\",\r\n  \"umpire\",\r\n  \"undertaker\",\r\n  \"upholsterer\",\r\n  \"urban planner\",\r\n  \"usher\",\r\n  \"valve installer\",\r\n  \"vending machine servicer\",\r\n  \"veterinarian\",\r\n  \"veterinary assistant\",\r\n  \"veterinary technician\",\r\n  \"vocational counselor\",\r\n  \"vocational education teacher\",\r\n  \"waiter\",\r\n  \"waitress\",\r\n  \"watch repairer\",\r\n  \"water treatment plant operator\",\r\n  \"weaving machine setter\",\r\n  \"web developer\",\r\n  \"weigher\",\r\n  \"welder\",\r\n  \"wellhead pumper\",\r\n  \"wholesale buyer\",\r\n  \"wildlife biologist\",\r\n  \"window trimmer\",\r\n  \"wood patternmaker\",\r\n  \"woodworker\",\r\n  \"word processor\",\r\n  \"writer\",\r\n  \"yardmaster\",\r\n  \"zoologist\",\r\n  \"Academic librarian\",\r\n  \"Accountant\",\r\n  \"Accounting technician\",\r\n  \"Actuary\",\r\n  \"Adult nurse\",\r\n  \"Advertising account executive\",\r\n  \"Advertising account planner\",\r\n  \"Advertising copywriter\",\r\n  \"Advice worker\",\r\n  \"Advocate (Scotland)\",\r\n  \"Aeronautical engineer\",\r\n  \"Agricultural consultant\",\r\n  \"Agricultural manager\",\r\n  \"Aid worker/humanitarian worker\",\r\n  \"Air traffic controller\",\r\n  \"Airline cabin crew\",\r\n  \"Amenity horticulturist\",\r\n  \"Analytical chemist\",\r\n  \"Animal nutritionist\",\r\n  \"Animator\",\r\n  \"Archaeologist\",\r\n  \"Architect\",\r\n  \"Architectural technologist\",\r\n  \"Archivist\",\r\n  \"Armed forces officer\",\r\n  \"Aromatherapist\",\r\n  \"Art therapist\",\r\n  \"Arts administrator\",\r\n  \"Auditor\",\r\n  \"Automotive engineer\",\r\n  \"Barrister\",\r\n  \"Barrister’s clerk\",\r\n  \"Bilingual secretary\",\r\n  \"Biomedical engineer\",\r\n  \"Biomedical scientist\",\r\n  \"Biotechnologist\",\r\n  \"Brand manager\",\r\n  \"Broadcasting presenter\",\r\n  \"Building control officer/surveyor\",\r\n  \"Building services engineer\",\r\n  \"Building surveyor\",\r\n  \"Camera operator\",\r\n  \"Careers adviser (higher education)\",\r\n  \"Careers adviser\",\r\n  \"Careers consultant\",\r\n  \"Cartographer\",\r\n  \"Catering manager\",\r\n  \"Charities administrator\",\r\n  \"Charities fundraiser\",\r\n  \"Chemical (process) engineer\",\r\n  \"Child psychotherapist\",\r\n  \"Children's nurse\",\r\n  \"Chiropractor\",\r\n  \"Civil engineer\",\r\n  \"Civil Service administrator\",\r\n  \"Clinical biochemist\",\r\n  \"Clinical cytogeneticist\",\r\n  \"Clinical microbiologist\",\r\n  \"Clinical molecular geneticist\",\r\n  \"Clinical research associate\",\r\n  \"Clinical scientist - tissue typing\",\r\n  \"Clothing and textile technologist\",\r\n  \"Colour technologist\",\r\n  \"Commercial horticulturist\",\r\n  \"Commercial/residential/rural surveyor\",\r\n  \"Commissioning editor\",\r\n  \"Commissioning engineer\",\r\n  \"Commodity broker\",\r\n  \"Communications engineer\",\r\n  \"Community arts worker\",\r\n  \"Community education officer\",\r\n  \"Community worker\",\r\n  \"Company secretary\",\r\n  \"Computer sales support\",\r\n  \"Computer scientist\",\r\n  \"Conference organiser\",\r\n  \"Consultant\",\r\n  \"Consumer rights adviser\",\r\n  \"Control and instrumentation engineer\",\r\n  \"Corporate banker\",\r\n  \"Corporate treasurer\",\r\n  \"Counsellor\",\r\n  \"Courier/tour guide\",\r\n  \"Court reporter/verbatim reporter\",\r\n  \"Credit analyst\",\r\n  \"Crown Prosecution Service lawyer\",\r\n  \"Crystallographer\",\r\n  \"Curator\",\r\n  \"Customs officer\",\r\n  \"Cyber security specialist\",\r\n  \"Dance movement therapist\",\r\n  \"Data analyst\",\r\n  \"Data scientist\",\r\n  \"Data visualisation analyst\",\r\n  \"Database administrator\",\r\n  \"Debt/finance adviser\",\r\n  \"Dental hygienist\",\r\n  \"Dentist\",\r\n  \"Design engineer\",\r\n  \"Dietitian\",\r\n  \"Diplomatic service\",\r\n  \"Doctor (general practitioner, GP)\",\r\n  \"Doctor (hospital)\",\r\n  \"Dramatherapist\",\r\n  \"Economist\",\r\n  \"Editorial assistant\",\r\n  \"Education administrator\",\r\n  \"Electrical engineer\",\r\n  \"Electronics engineer\",\r\n  \"Employment advice worker\",\r\n  \"Energy conservation officer\",\r\n  \"Engineering geologist\",\r\n  \"Environmental education officer\",\r\n  \"Environmental health officer\",\r\n  \"Environmental manager\",\r\n  \"Environmental scientist\",\r\n  \"Equal opportunities officer\",\r\n  \"Equality and diversity officer\",\r\n  \"Ergonomist\",\r\n  \"Estate agent\",\r\n  \"European Commission administrators\",\r\n  \"Exhibition display designer\",\r\n  \"Exhibition organiser\",\r\n  \"Exploration geologist\",\r\n  \"Facilities manager\",\r\n  \"Field trials officer\",\r\n  \"Financial manager\",\r\n  \"Firefighter\",\r\n  \"Fisheries officer\",\r\n  \"Fitness centre manager\",\r\n  \"Food scientist\",\r\n  \"Food technologist\",\r\n  \"Forensic scientist\",\r\n  \"Geneticist\",\r\n  \"Geographical information systems manager\",\r\n  \"Geomatics/land surveyor\",\r\n  \"Government lawyer\",\r\n  \"Government research officer\",\r\n  \"Graphic designer\",\r\n  \"Health and safety adviser\",\r\n  \"Health and safety inspector\",\r\n  \"Health promotion specialist\",\r\n  \"Health service manager\",\r\n  \"Health visitor\",\r\n  \"Herbalist\",\r\n  \"Heritage manager\",\r\n  \"Higher education administrator\",\r\n  \"Higher education advice worker\",\r\n  \"Homeless worker\",\r\n  \"Horticultural consultant\",\r\n  \"Hotel manager\",\r\n  \"Housing adviser\",\r\n  \"Human resources officer\",\r\n  \"Hydrologist\",\r\n  \"Illustrator\",\r\n  \"Immigration officer\",\r\n  \"Immunologist\",\r\n  \"Industrial/product designer\",\r\n  \"Information scientist\",\r\n  \"Information systems manager\",\r\n  \"Information technology/software trainers\",\r\n  \"Insurance broker\",\r\n  \"Insurance claims inspector\",\r\n  \"Insurance risk surveyor\",\r\n  \"Insurance underwriter\",\r\n  \"Interpreter\",\r\n  \"Investment analyst\",\r\n  \"Investment banker - corporate finance\",\r\n  \"Investment banker – operations\",\r\n  \"Investment fund manager\",\r\n  \"IT consultant\",\r\n  \"IT support analyst\",\r\n  \"Journalist\",\r\n  \"Laboratory technician\",\r\n  \"Land-based engineer\",\r\n  \"Landscape architect\",\r\n  \"Learning disability nurse\",\r\n  \"Learning mentor\",\r\n  \"Lecturer (adult education)\",\r\n  \"Lecturer (further education)\",\r\n  \"Lecturer (higher education)\",\r\n  \"Legal executive\",\r\n  \"Leisure centre manager\",\r\n  \"Licensed conveyancer\",\r\n  \"Local government administrator\",\r\n  \"Local government lawyer\",\r\n  \"Logistics/distribution manager\",\r\n  \"Magazine features editor\",\r\n  \"Magazine journalist\",\r\n  \"Maintenance engineer\",\r\n  \"Management accountant\",\r\n  \"Manufacturing engineer\",\r\n  \"Manufacturing machine operator\",\r\n  \"Manufacturing toolmaker\",\r\n  \"Marine scientist\",\r\n  \"Market research analyst\",\r\n  \"Market research executive\",\r\n  \"Marketing account manager\",\r\n  \"Marketing assistant\",\r\n  \"Marketing executive\",\r\n  \"Marketing manager (social media)\",\r\n  \"Materials engineer\",\r\n  \"Materials specialist\",\r\n  \"Mechanical engineer\",\r\n  \"Media analyst\",\r\n  \"Media buyer\",\r\n  \"Media planner\",\r\n  \"Medical physicist\",\r\n  \"Medical representative\",\r\n  \"Mental health nurse\",\r\n  \"Metallurgist\",\r\n  \"Meteorologist\",\r\n  \"Microbiologist\",\r\n  \"Midwife\",\r\n  \"Mining engineer\",\r\n  \"Mobile developer\",\r\n  \"Multimedia programmer\",\r\n  \"Multimedia specialists\",\r\n  \"Museum education officer\",\r\n  \"Museum/gallery exhibition officer\",\r\n  \"Music therapist\",\r\n  \"Nanoscientist\",\r\n  \"Nature conservation officer\",\r\n  \"Naval architect\",\r\n  \"Network administrator\",\r\n  \"Nurse\",\r\n  \"Nutritional therapist\",\r\n  \"Nutritionist\",\r\n  \"Occupational therapist\",\r\n  \"Oceanographer\",\r\n  \"Office manager\",\r\n  \"Operational researcher\",\r\n  \"Orthoptist\",\r\n  \"Outdoor pursuits manager\",\r\n  \"Packaging technologist\",\r\n  \"Paediatric nurse\",\r\n  \"Paramedic\",\r\n  \"Patent attorney\",\r\n  \"Patent examiner\",\r\n  \"Pension scheme manager\",\r\n  \"Personal assistant\",\r\n  \"Petroleum engineer\",\r\n  \"Pharmacist\",\r\n  \"Pharmacologist\",\r\n  \"Pharmacovigilance officer\",\r\n  \"Photographer\",\r\n  \"Physiotherapist\",\r\n  \"Picture researcher\",\r\n  \"Planning and development surveyor\",\r\n  \"Planning technician\",\r\n  \"Plant breeder\",\r\n  \"Police officer\",\r\n  \"Political party agent\",\r\n  \"Political party research officer\",\r\n  \"Practice nurse\",\r\n  \"Press photographer\",\r\n  \"Press sub-editor\",\r\n  \"Prison officer\",\r\n  \"Private music teacher\",\r\n  \"Probation officer\",\r\n  \"Product development scientist\",\r\n  \"Production manager\",\r\n  \"Programme researcher\",\r\n  \"Project manager\",\r\n  \"Psychologist (clinical)\",\r\n  \"Psychologist (educational)\",\r\n  \"Psychotherapist\",\r\n  \"Public affairs consultant (lobbyist)\",\r\n  \"Public affairs consultant (research)\",\r\n  \"Public house manager\",\r\n  \"Public librarian\",\r\n  \"Public relations (PR) officer\",\r\n  \"QA analyst\",\r\n  \"Quality assurance manager\",\r\n  \"Quantity surveyor\",\r\n  \"Records manager\",\r\n  \"Recruitment consultant\",\r\n  \"Recycling officer\",\r\n  \"Regulatory affairs officer\",\r\n  \"Research chemist\",\r\n  \"Research scientist\",\r\n  \"Restaurant manager\",\r\n  \"Retail banker\",\r\n  \"Retail buyer\",\r\n  \"Retail manager\",\r\n  \"Retail merchandiser\",\r\n  \"Retail pharmacist\",\r\n  \"Sales executive\",\r\n  \"Sales manager\",\r\n  \"Scene of crime officer\",\r\n  \"Secretary\",\r\n  \"Seismic interpreter\",\r\n  \"Site engineer\",\r\n  \"Site manager\",\r\n  \"Social researcher\",\r\n  \"Social worker\",\r\n  \"Software developer\",\r\n  \"Soil scientist\",\r\n  \"Solicitor\",\r\n  \"Speech and language therapist\",\r\n  \"Sports coach\",\r\n  \"Sports development officer\",\r\n  \"Sports therapist\",\r\n  \"Statistician\",\r\n  \"Stockbroker\",\r\n  \"Structural engineer\",\r\n  \"Systems analyst\",\r\n  \"Systems developer\",\r\n  \"Tax inspector\",\r\n  \"Teacher (nursery/early years)\",\r\n  \"Teacher (primary)\",\r\n  \"Teacher (secondary)\",\r\n  \"Teacher (special educational needs)\",\r\n  \"Teaching/classroom assistant\",\r\n  \"Technical author\",\r\n  \"Technical sales engineer\",\r\n  \"TEFL/TESL teacher\",\r\n  \"Television production assistant\",\r\n  \"Test automation developer\",\r\n  \"Tour operator\",\r\n  \"Tourism officer\",\r\n  \"Tourist information manager\",\r\n  \"Town and country planner\",\r\n  \"Toxicologist\",\r\n  \"Trade union research officer\",\r\n  \"Trader\",\r\n  \"Trading standards officer\",\r\n  \"Training and development officer\",\r\n  \"Translator\",\r\n  \"Transportation planner\",\r\n  \"Travel agent\",\r\n  \"TV/film/theatre set designer\",\r\n  \"UX designer\",\r\n  \"Validation engineer\",\r\n  \"Veterinary nurse\",\r\n  \"Veterinary surgeon\",\r\n  \"Video game designer\",\r\n  \"Video game developer\",\r\n  \"Volunteer work organiser\",\r\n  \"Warehouse manager\",\r\n  \"Waste disposal officer\",\r\n  \"Water conservation officer\",\r\n  \"Water engineer\",\r\n  \"Web designer\",\r\n  \"Web developer\",\r\n  \"Welfare rights adviser\",\r\n  \"Writer\",\r\n  \"Youth worker\",\r\n  \"advisor\",\r\n  \"finance\",\r\n  \"Team Leader\",\r\n  \"ASP.Net, C# Developer\",\r\n  \"Sales Executive\",\r\n  \"Lawyer - Family\",\r\n  \"Warehouse Operative \",\r\n  \"Medical\",\r\n  \"Electrical Design Engineer\",\r\n  \"Senior Customer Experience Manager \",\r\n  \"Software Project Manager\",\r\n  \"Finance Manager / Controller\",\r\n  \"Office Manager\",\r\n  \"Internal Communications and Engagement Manager\",\r\n  \"ADR LGV1 DRIVER\",\r\n  \"Junior Accounts Assistant\",\r\n  \"Critical Care Nurse Band 5 - Archway, London\",\r\n  \"Senior Accountant\",\r\n  \"Warehouse Operative\",\r\n  \"Medical\",\r\n  \"Children's Registered Manager\",\r\n  \"Safer Neighbourhood specialist\",\r\n  \"Care Worker\",\r\n  \"Class 2 HIAB Driver\",\r\n  \"Lawyer - Lease Extension / Enfranchisement\",\r\n  \"MOT Tester\",\r\n  \"Medical\",\r\n  \"Employment Lawyer NQ\",\r\n  \"Digital Marketing Assistant\",\r\n  \"Trainee Headhunter\",\r\n  \"Audiologist/Hearing Aid Dispenser - Bournemouth, Dorset\",\r\n  \"Quantity Surveyor\",\r\n  \"Lawyer - Leasehold Enfranchisement\",\r\n  \"Sales Ledger Clerk\",\r\n  \"HCA Community - Band 2 - Herne Bay\",\r\n  \"Architectural Technologist\",\r\n  \"Fitter/Assembly Technician\",\r\n  \"Cleaning Supervisor\",\r\n  \"18th Edition / 2391  / JIB card / Electrician\",\r\n  \"HGV 1 Weekends\",\r\n  \"Maintenance Engineer\",\r\n  \"Medical\",\r\n  \"ER and Policy Specialist\",\r\n  \"Accounts Assistant\",\r\n  \"Maintenance Engineer\",\r\n  \"Private Client Solicitor\",\r\n  \"Learning Support Assistant - Primary SEN School, Southampton\",\r\n  \"IT Project Manager\",\r\n  \"Foster Carer - Exmouth\",\r\n  \"Therapeutic Care / Support Worker Drivers Only\",\r\n  \"Development Engineer\",\r\n  \"Therapeutic Care / Support Worker Drivers Only\",\r\n  \"Business Consultant/Architect - Core Banking\",\r\n  \"Warehouse Administrator\",\r\n  \"Multi Skilled Engineer\",\r\n  \"Electrical Maintenance Engineer Static\",\r\n  \"Warehouse Operative - Friday - Sunday\",\r\n  \"Account Coordinator\",\r\n  \"Medical\",\r\n  \"Corporate Tax Senior\",\r\n  \"GRADUATE CUSTOMER SERVICE CO-ORDINATOR\",\r\n  \"Maintenance Operative\",\r\n  \"Night Care Assistant\",\r\n  \"Care Assistant\",\r\n  \"Audit Senior\",\r\n  \"Cover Supervisor\",\r\n  \"Wellbeing Co-ordinator\",\r\n  \"Care Assistant\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Semi Senior Accountant -\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Activities Co-ordinator\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"eDisclosure Projects Co-ordinator/eDisclosure Co-ordinator - Relativity\",\r\n  \"Head Housekeeper\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered Nurse\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Home Administrator - Financial Administrator\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Registered/Pre Registered Nurses\",\r\n  \"Supply Primary Teacher\",\r\n  \"Procurement Manager - Epos Terminal\",\r\n  \"Nursing Home Manager\",\r\n  \"Consultancy Role\",\r\n  \"Cleaner with DBS check\",\r\n  \"Lawyer - Conveyancing\",\r\n  \"Mental Health Support Worker - Bank\",\r\n  \"Graduate Trainee Recruitment Consultant\",\r\n  \"Doctor\",\r\n  \"Security Officer\",\r\n  \"Product Manager\",\r\n  \"Night Worker\",\r\n  \"Critical Care Nurse Band 5 - Enfield, London\",\r\n  \"SQL Database Developer\",\r\n  \"Master Scheduler\",\r\n  \"Electrician \",\r\n  \"Branch Manager\",\r\n  \"SEN TA - East London\",\r\n  \"Night Care Assistant\",\r\n  \"Customer Services Officer\",\r\n  \"Critical Care Nurse Band 6 - City of London\",\r\n  \"Warehouse Operative\",\r\n  \"Warehouse Operative\",\r\n  \"Supply Teacher\",\r\n  \"Warehouse Operative\",\r\n  \"Regional Manager\",\r\n  \"Sales Engineer PCB/Electronics\",\r\n  \"Support Workers / Healthcare Assistants - Milnsbridge, Huddersfield\",\r\n  \"Category Manager 12 Month FTC\",\r\n  \"Cleaner\",\r\n  \"2 day a week Spanish Primary Teacher\",\r\n  \"Head of Housing Development\",\r\n  \"Letting Negotiator/Administrator \",\r\n  \"Doctor\",\r\n  \"Workplace Product Owner - 12 Month Contract \",\r\n  \"Supply Teacher\",\r\n  \"Disability Analyst Wigan\",\r\n  \"Estate Agent Sales Manager \",\r\n  \"Chair of the Board\",\r\n  \"Cleaner\",\r\n  \"Waking Nights Support Worker\",\r\n  \"Supply Teacher\",\r\n  \"Child Care Worker\",\r\n  \"Backend Java Developer Linux TCP/IP\",\r\n  \"Senior Payroll Officer\",\r\n  \"Mortgage and Protection Advisor\",\r\n  \"Sales Engineer PCB/Electronics\",\r\n  \"Marketing Executive\",\r\n  \"Electrician \",\r\n  \"Senior UK Compliance Officer\",\r\n  \"Admin Assistant\",\r\n  \"Deputy Store Manager\",\r\n  \"National Sales Manager\",\r\n  \"Senior Recruitment Consultant\",\r\n  \"Preceptorship Nurse\",\r\n  \"Head of Business Intelligence\",\r\n  \"Teacher of Science Chemistry\",\r\n  \"Disability Analyst Stirling\",\r\n  \"Private Client Solicitor - HNW\",\r\n  \"2nd Line IT Support Technician\",\r\n  \"Finance admin officers\",\r\n  \"Electrical/Mechanical Engineer\",\r\n  \"Business Development Manager\",\r\n  \"Family & Childcare Solicitor\",\r\n  \"Mental Health Support Worker - Full Time \",\r\n  \"Supply Teacher\",\r\n  \"Senior Support Worker\",\r\n  \"SEN TEACHER - ICT / COMPUTER SCIENCE\",\r\n  \"Commercial Gas Engineer - Static\",\r\n  \"Remote Mobile Developer iOS & Android\",\r\n  \"Service Charge Analyst\",\r\n  \"IT Support Engineer - Newquay- £28,000\",\r\n  \"Medical\",\r\n  \"Roofer/Bricklayer - Walsall\",\r\n  \"CLASS 1 DRIVER\",\r\n  \"Accounts Assistant \",\r\n  \"Assistant Accountant\",\r\n  \"IT Service Desk Analyst\",\r\n  \"Corporate Actions Analyst\",\r\n  \"Cat B Van Driver\",\r\n  \"Production Operative\",\r\n  \"Health & Safety Officer\",\r\n  \"Multi Skilled Tradesman\",\r\n  \"Supervising Social Worker - Fostering Team\",\r\n  \"Business Development Manager\",\r\n  \"Customer Care Coordinator - New Build Housing\",\r\n  \"Generator Service Engineer\",\r\n  \"Test Technician\",\r\n  \"Immigration Solicitor\",\r\n  \"Medical\",\r\n  \"Lawyer - Commercial Property Turkish Speaking\",\r\n  \"SEN TA - with Team Teach\",\r\n  \"Practice Accounts Assistant\",\r\n  \"Software Programme Manager\",\r\n  \"Gas Service Engineer/ Plumber\",\r\n  \"Senior Quantity Surveyor (Civil Engineering)\",\r\n  \"QHSE Manager\",\r\n  \"Wandsworth Council - Senior Social Worker - Child in Need\",\r\n  \"Disability Analyst Preston\",\r\n  \"M&E Maintenance Engineer\",\r\n  \"Learning Support Assistant required for a 1 to 1 role\",\r\n  \"Senior Designer - PED\",\r\n  \"Flexible Worker Advisor - Teaching Hospitals NHS Foundation Trust\",\r\n  \"Supply Teachers\",\r\n  \"Finance Director\",\r\n  \"Returns Clerk\",\r\n  \"Resident Medical Officer\",\r\n  \"Secondary teaching Assistant\",\r\n  \"Financial Controller\",\r\n  \"Partner Integration Manager\",\r\n  \"Self-Employed Mortgage Advisor - Suffolk Home-Based\",\r\n  \"Service Co-ordinator\",\r\n  \"SEND Teaching Assistant\",\r\n  \"Clinical Trial Physician\",\r\n  \"Critical Care Nurse Band 5 - Farringdon, London\",\r\n  \"Customer Collections & Loans Agent - Castlebar\",\r\n  \"Solutions Architect - 12 Month Contract \",\r\n  \"Cleaner\",\r\n  \"Test Job - Do not apply\",\r\n  \"Registered Nurse - Functional Assessor\",\r\n  \"Operative\",\r\n  \"Supply Teacher\",\r\n  \"Hygiene Supervisor\",\r\n  \"Chef de Partie \",\r\n  \"DSP Software Engineer, Thames Valley, UK\",\r\n  \"Property Mantaintence Manager \",\r\n  \"HGV 1\",\r\n  \"Fire Engineer\",\r\n  \"Telesales Account Manager\",\r\n  \"Forklift Truck Driver\",\r\n  \"Test Lead/Manager\",\r\n  \"Critical Care Nurse Band 6 - Leytonstone, London\",\r\n  \"Disability Analyst Motherwell\",\r\n  \"Trainee Recruitment Consultant\",\r\n  \"Factory Cleaner (NIGHTS)\",\r\n  \"Functional Assessor - Registered Nurse - Edinburgh, Scotland\",\r\n  \"Models, Actors, Extras Required for Commercials,TV & Film\",\r\n  \"Care Assistant\",\r\n  \"Medical\",\r\n  \"Work From Home\",\r\n  \"Senior Care Assistant\",\r\n  \"HGV Technician - Plymouth \",\r\n  \"Quality Manager\",\r\n  \"Management Accountant \",\r\n  \"Design Engineer - Temporary Works (Civil Engineering)\",\r\n  \"Registered Nurse - Functional Assessor\",\r\n  \"Mechanical Technician\",\r\n  \"Paraplanner\",\r\n  \"Senior Recruitment Consultant - Big Data and Change Management - 25k-35k - London\",\r\n  \"Digital / IT Recruitment Consultant - £30,000 + South West London - Award Winning Business\",\r\n  \"Recruitment Consultant - Insurance - £35,000+ - London \",\r\n  \"Recruitment Consultant - Life Sciences - London - £28,000 - £38,000\",\r\n  \"Senior Recruitment Consultant - Actuarial - £35,000 - £50,000 - London\",\r\n  \"Financial Senior Recruitment Consultant - basic upto 40k\",\r\n  \"HGV 2 Moffett\",\r\n  \"HR Business Partner\",\r\n  \"Regional Manager- Welfare to Work Sector\",\r\n  \"Assistant Management Accountant\",\r\n  \"Warehouse Stock Admin Controller\",\r\n  \"Early Years Teaching Assistant\",\r\n  \"Trust Recruitment Coordinator - Sheffield Teaching Hospitals NHS Foundation Trust\",\r\n  \"Lease Restructuring Advisor\",\r\n  \"Senior Engineer - Civil Engineering \",\r\n  \"Chinook Technician\",\r\n  \"Senior Recruitment Consultant\",\r\n  \"Disability Analyst Manchester\",\r\n  \"Lettings Manager\",\r\n  \"Communications and Marketing Manager\",\r\n  \"General Manager\",\r\n  \"Industrial Cleaner\",\r\n  \"Commercial & Domestic Gas Engineer -\",\r\n  \"FLEXI BENDI/PIVOT STEER DRIVER REQUIRED \",\r\n  \"Engineer or Geologist\",\r\n  \"Electrical Maintenance Engineer \",\r\n  \"Cleaning Supervisor\",\r\n  \"Quality Administrator\",\r\n  \"Head of PPC - Digital Marketing Agency - Altrincham\",\r\n  \"Medical\",\r\n  \"Project Coordinator\",\r\n  \"Operations/Financial Manager\",\r\n  \"Accounts Assistant\",\r\n  \"Registered Manager  Children's Home\",\r\n  \"Performance Account Director\",\r\n  \"Sales Assessor\",\r\n  \"Panel Wireman\",\r\n  \"Product Validation Engineer\",\r\n  \"Underwriter\",\r\n  \"HR and Payroll Officer\",\r\n  \"Postperson with driving - Forest Hall Delivery Office NE12 9AA\",\r\n  \"Postperson with Driving - Oswestry Delivery Office SY10 8GP\",\r\n  \"Postperson with driving - Darlington Delivery OfficeDL1 1AA\",\r\n  \"Postperson with Driving - Rochdale Delivery Office \",\r\n  \"Postperson with Driving - Bootle Delivery Office\",\r\n  \"Postperson with Driving - Wembley Highs Delivery Office HA0 2SS\",\r\n  \"Cleaning Operative - Denbigh Delivery Office LL16 3SA\",\r\n  \"Postperson with Driving - Manvers Delivery Office S63 5AA\",\r\n  \"Postperson with Driving - Chorlton Delivery Office \",\r\n  \"Postperson with Driving - Immingham Delivery Office DN40 1BL\",\r\n  \"Postperson with Driving - Dunbar Delivery Office EH42 1AA\",\r\n  \"Asbestos Analyst\",\r\n  \"Cleaning Operative Weekend - National Distribution Centre, Northampton NN6 7DD\",\r\n  \"Postperson with Driving - Sheffield South East Delivery Office S12 2AF\",\r\n  \"Postperson with driving - Newcastle West Delivery Office NE5 2AA\",\r\n  \"Postperson with Driving - Glaisdale Parkway Delivery Office NG8 4GB\",\r\n  \"Residential Park Manager/ warden/ maintenance\",\r\n  \"Test Administrator - Tunbridge Wells\",\r\n  \"Test Centre Administrator-Watford\",\r\n  \"Test Centre Administrator - Stornoway\",\r\n  \"Test Centre Administrator-Eastbourne\",\r\n  \"Test Centre Administrator - Sidcup\",\r\n  \"Test Centre Administrator - Croydon\",\r\n  \"Car Sales Executive Vacancy\",\r\n  \"Infrastructure Architect - Azure\",\r\n  \"Plantarea Buyer/Manager\",\r\n  \"Disability Analyst Leeds\",\r\n];\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Form,\r\n  Grid,\r\n  GridColumn,\r\n} from \"semantic-ui-react\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport Auto from \"../../../App/Testing\";\r\n\r\nconst SearchBar = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { jobsCounter, counter, setSearchParams, query } = jobsStore;\r\n  const onSubmit = async (query: IQueryRequest) => {\r\n    await setSearchParams(query);\r\n  };\r\n  useEffect(() => {\r\n    jobsCounter();\r\n  }, [jobsCounter]);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      className=\"searchContainer\"\r\n      style={{ backgroundImage: \"url(/assets/searchBar.png)\" }}\r\n    >\r\n      <Grid centered>\r\n        <GridColumn className=\"phcounter\">\r\n          {counter?.totalJobs === 0 ? (\r\n            <Header style={{ textAlign: \"center\", color: \"white\" }} />\r\n          ) : (\r\n            <Header style={{ textAlign: \"center\", color: \"white\" }}>\r\n              Search {counter?.totalJobs} new jobs - {counter?.addedToday} added\r\n              in the last 24 hours!\r\n            </Header>\r\n          )}\r\n        </GridColumn>{\" \"}\r\n      </Grid>\r\n\r\n      <Container>\r\n        <Grid centered>\r\n          <FinalForm\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit }) => (\r\n              <Form className=\"searchForm\" onSubmit={handleSubmit}>\r\n                <Form.Group className=\"searchFormStyle\">\r\n                  <Form.Field>\r\n                    <label style={{ color: \"white\", textAlign: \"left\" }}>\r\n                      What\r\n                    </label>\r\n                    <Field\r\n                      placeholder=\"e.g. nurse\"\r\n                      name=\"jobTitle\"\r\n                      value={query?.jobTitle}\r\n                      component=\"input\"\r\n                    />{\" \"}\r\n                  </Form.Field>\r\n                  <Auto />\r\n                  <Form.Field>\r\n                    <label style={{ color: \"white\", textAlign: \"left\" }}>\r\n                      Where\r\n                    </label>\r\n                    <Field\r\n                      placeholder=\"location or postcode\"\r\n                      value={query?.locationName}\r\n                      name=\"locationName\"\r\n                      component=\"input\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Button primary>Search</Button>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          ></FinalForm>\r\n        </Grid>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SearchBar);\r\n","import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Container, Grid, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst TrendingJob = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      jobTitle: data.value,\r\n    });\r\n\r\n    if (queryX?.jobTitle === data.value) {\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n\r\n  const trueValue = (data: string) => {\r\n    if (data === \"true\") return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br /> <br />\r\n      <h1 style={{ textAlign: \"center\" }}> Trending Jobs</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        The most popular job types in the last 24 hours!\r\n      </h3>\r\n      <br />\r\n      <Grid stackable centered>\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"NHS\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                NHS Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"immediate\" onClick={handleClick}>\r\n                {\" \"}\r\n                <p className=\"linkHover\">\r\n                Immediate Start Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"supermarket\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Supermarket Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"delivery\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Delivery Driver Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"work home\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Work From Home Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                as={Link}\r\n                value=\"true\"\r\n                onClick={(e: SyntheticEvent<HTMLElement, Event>, data: any) => {\r\n                  setQuery({\r\n                    ...queryX!,\r\n                    partTime: trueValue(data.value),\r\n                  });\r\n                  if (queryX?.partTime === trueValue(data.value)) {\r\n                    setSearchParams(queryX!);\r\n                  }\r\n                }}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Part Time Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"medicine\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Health and Medicine Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"emergency\" onClick={handleClick}>\r\n                {\" \"}\r\n                <p className=\"linkHover\">\r\n                Emergency Call Handler Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"farm\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Farm Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"warehouse\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Warehouse Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"social care\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Social Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"administration\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Administration Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(TrendingJob);\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport { Container, Grid, Card, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\n\r\nexport const DisplayJobsCard = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      employerName: data.value,\r\n    });\r\n\r\n    if (queryX?.employerName === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <Container>\r\n        <br style={{ lineHeight: \"10px\" }} />\r\n\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Find a job you love with the UK's #1 job site\r\n        </h1>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Your next role could be with one of these leading companies. Apply\r\n          today.\r\n        </h3>\r\n        <br />\r\n        <Grid centered>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/hays.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"Hays Specialist Recruitment Limited\"\r\n                    onClick={handleClick}\r\n                  ><p style={{textAlign: \"center\"}}>\r\n                    Jobs at Hays Company\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/trainingroom.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"The training room\"\r\n                    onClick={handleClick}\r\n                  >\r\n                   <p style={{textAlign: \"center\"}}>\r\n                    Jobs at The Training Room\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/tradewind.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"tradewind\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Tradewind\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/rise.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"rise\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Rise Technical\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/prospero.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"prospero\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Prospero Learning\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/teachingpersonnel.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"Teaching Personnel\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at The Teaching Personnel\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/academics.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"Academics\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Academics\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/nhsscotland.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"NHS National Services Scotland\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at NHS Scotland\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/nhsjobs.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"NHS Business Services Authority Jobs\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at NHS Business\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Container, Grid, List, Image, Segment, Item } from \"semantic-ui-react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"39%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport const Sectors = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n const styleP={paddingLeft: \"60px\", color: \"#0079d1\"}\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      jobTitle: data.value,\r\n    });\r\n\r\n    if (queryX?.jobTitle === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <br style={{ lineHeight: \"10px\" }} />\r\n\r\n      <h1 style={{ textAlign: \"center\" }}>Choose your sector</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        Jobs across 42 sectors. See the latest roles now.\r\n      </h3>\r\n      <br />\r\n      <Grid centered>\r\n        <br />\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/technology.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"technology\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Technology</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Accountant\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Accountancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Admin\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Admin Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Banking\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Banking Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Construction\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Construction Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Customer Service\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Customer Service Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Education\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Education Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/engineering.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Engineer\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Engineering</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Engineer\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Engineering Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Financial\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Financial Service Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Insurance\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                General Insurance Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"HR\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Human Resources Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"IT\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                IT and Telecoms Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Contractor\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Contractor Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/graduation.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Graduate\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Graduates</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Legal\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Legal Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Manufactoring\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Manufactoring Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Digital\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Media, Digital and Creative Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Multilingual\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Multilingual Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Recruitment\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Recruitment Consultancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Motoring\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Motoring and Automative Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/health.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Health\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Health</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Sales\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Sales Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Social Care\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Social Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"NHS\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                National Health Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Transport\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Transport and Logisitics Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Security\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Security and Consultancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Scientific\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Scientific Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  List,\r\n  Image,\r\n  Segment,\r\n  Item,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"39%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst Locations = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      locationName: data.value,\r\n    });\r\n\r\n    if (queryX?.locationName === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n \r\n  };\r\n  return (\r\n    <Container>\r\n      <br style={{ lineHeight: \"10px\" }} />\r\n\r\n      <h1 style={{ textAlign: \"center\" }}>Browse local jobs</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        See who's hiring in your area. Find a job close to home.\r\n      </h3>\r\n      <br />\r\n      <Grid centered>\r\n        <br />\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  src=\"/assets/london.png\"\r\n                  circular\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"london\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> London</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n              <List.Item \r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"london\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in London</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"south east england\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in South East England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"surrey\"\r\n                onClick={handleClick}\r\n              ><p className=\"linkHover\">\r\n                Jobs in Surrey\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Essex\"\r\n                onClick={handleClick}\r\n                \r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Essex\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Kent\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Kent\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"south west england\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in South West England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"bristol\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Bristol\r\n                </p>\r\n              </List.Item>{\" \"}\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Devon\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Devon\r\n                </p>\r\n              </List.Item>{\" \"}\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Plymouth\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Plymouth\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/glasgow.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Glasgow\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Glasgow</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"East Midlands\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in East Midlands</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Nottingham\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Nottingham\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Leicester\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Leicester\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Derby\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Derby\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"West Midlands\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in West Midlands</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Birmingham\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Birmingham\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Coventry\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Coventry\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Stoke-on-Trent\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Stoke-on-Trent\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"East Anglia\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in East Anglia</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Cambridge\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Cambridge\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Norwich\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Norwich\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Peterborough\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Peterborough\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/manchester.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Manchester\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Manchester</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"North East England\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in North East England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Newcastle Upon Tyne\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Newcastle Upon Tyne\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Middlesbrough\"\r\n                onClick={handleClick}\r\n                \r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Middlesbrough\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Sunderland\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Sunderland\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"North West England\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in North West England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Manchester\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Manchester\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Liverpool\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Liverpool\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Bolton\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Bolton\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Jobs in Yorkshire and Humberside\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Yorkshire</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Leeds\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Leeds\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Sheffield\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Sheffield\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Hull\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Hull\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/liverpool.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Liverpool\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Liverpool</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Scotland\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Scotland</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Glasgow\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Glasgow\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Edinburgh\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Edinburgh\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Aberdeen\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Aberdeen\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Wales\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Wales</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Cardiff\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Cardiff\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Swansea\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Swansea\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Newport\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Newport\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Northern Ireland\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Northern Ireland</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Belfast\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Belfast\r\n                </p>\r\n              </List.Item>\r\n             \r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(Locations);\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Segment,\r\n  Item,\r\n  Button,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"300%\",\r\n  width: \"100%\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport const Courses = () => {\r\n  return (\r\n    <Container className=\"imageContainer\">\r\n      <br />\r\n      <br />\r\n\r\n      <Container className=\"imageContainer\">\r\n        <Image\r\n          className=\"imageCourse\"\r\n          src=\"/assets/courses.png\"\r\n          fluid\r\n          style={{\r\n            filter: \"brightness(60%)\",\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n      </Container>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Segment basic style={textStyle}>\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Content>\r\n                  <h1>Find the right course</h1>\r\n\r\n                  <h3>\r\n                    Invest in your future with thousands of courses to help you\r\n                    learn and develop.\r\n                  </h3>\r\n                  <p>Now with an extra 10% off</p>\r\n\r\n                  <Button\r\n                    as={NavLink}\r\n                    to=\"/registercv\"\r\n                    style={{\r\n                      backgroundColor: \"transparent\",\r\n                      border: \"1px solid white\",\r\n                      borderRadius: \"15px\",\r\n                      padding: \"7px\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  >\r\n                    <p style={{ color: \"white\" }}>Learn more</p>\r\n                  </Button>\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Segment>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport TrendingJob from \"./Features/TrendingJob\";\r\nimport { DisplayJobsCard } from \"./Features/DisplayJobsCard\";\r\nimport { Sectors } from \"./Features/Sectors\";\r\nimport Locations from \"./Features/Locations\";\r\nimport { Courses } from \"./Features/Courses\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst Jobs = () => {\r\n  return (\r\n    <Segment\r\n      style={{\r\n        margin: \"0px\",\r\n        paddingRight: \"0px\",\r\n        paddingLeft: \"0px\",\r\n        borderLeftWidth: \"0px\",\r\n        borderRightWidth: \"0px\",\r\n      }}\r\n    >\r\n      <SearchBar />\r\n\r\n      <TrendingJob />\r\n      <DisplayJobsCard />\r\n\r\n      <Courses />\r\n      <Sectors />\r\n      <Locations />\r\n    </Segment>\r\n  );\r\n};\r\nexport default observer(Jobs);\r\n","import React from \"react\";\r\nimport { NavBar } from \"../nav/NavBar\";\r\nimport Jobs from \"../Jobs/Jobs\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nexport const Homepage = () => {\r\n  return (\r\n    <Container fluid>\r\n      <NavBar />\r\n      <Jobs />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nexport const UnderConstruction = () => {\r\n  return (\r\n    <Container\r\n      style={{\r\n        backgroundImage: \"url(/assets/UnderConstruction.png)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        paddingTop: \"780px\",\r\n        backgroundSize: \"100%\",\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    ></Container>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Container, Button } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\n\r\nexport const Courses = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { createIndex, indexButton } = jobsStore;\r\n\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n      <Container>\r\n        <Button\r\n          primary\r\n          fluid\r\n          onClick={() => createIndex()}\r\n          loading={indexButton}\r\n        >\r\n          Import Jobs\r\n        </Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const CareerAdvice = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const Recruiting = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const RegisterCV = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const SignIn = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const Shortlistedjobs = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Segment,\r\n  Image,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Segment\r\n      inverted\r\n      vertical\r\n      style={{ padding: \"5em 0em\", position: \"relative\", bottom: \"0\" }}\r\n    >\r\n      <Container>\r\n        <Grid inverted>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"JOBS\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Contact Us</List.Item>\r\n                <List.Item as=\"a\">Job search</List.Item>\r\n                <List.Item as=\"a\">Recruiter directory</List.Item>\r\n                <List.Item as=\"a\">Work from home</List.Item>\r\n                <List.Item as=\"a\">Browse jobs</List.Item>\r\n                <List.Item as=\"a\">Browse location</List.Item>\r\n                <List.Item as=\"a\">Popular searches</List.Item>\r\n                <List.Item as=\"a\">Career Advice</List.Item>\r\n                <List.Item as=\"a\">Average salary checker</List.Item>\r\n                <List.Item as=\"a\">Help</List.Item>\r\n                <List.Item as=\"a\">Contact a REED office</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"RECRUITER\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Recruiter site</List.Item>\r\n                <List.Item as=\"a\">Post a Job</List.Item>\r\n                <List.Item as=\"a\">CV search</List.Item>\r\n                <List.Item as=\"a\">Recruitment agency</List.Item>\r\n                <List.Item as=\"a\">Recruiter Advice</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"COURSES\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Help</List.Item>\r\n                <List.Item as=\"a\">Contact us</List.Item>\r\n                <List.Item as=\"a\">Find a course</List.Item>\r\n                <List.Item as=\"a\">View all subjects</List.Item>\r\n                <List.Item as=\"a\">Discount courses</List.Item>\r\n                <List.Item as=\"a\">Online courses</List.Item>\r\n                <List.Item as=\"a\">Free courses</List.Item>\r\n                <List.Item as=\"a\">Awarding body directory</List.Item>\r\n                <List.Item as=\"a\">Career guides</List.Item>\r\n                <List.Item as=\"a\">Advertise a course</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"MORE\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">About us</List.Item>\r\n                <List.Item as=\"a\">Careers at reed.co.uk</List.Item>\r\n                <List.Item as=\"a\">For developers</List.Item>\r\n                <List.Item as=\"a\">Press Office</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"REED\" />\r\n\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Tempzone: timesheets & holiday</List.Item>\r\n                <List.Item as=\"a\">Authorize timesheets</List.Item>\r\n                <List.Item as=\"a\">Reed Global</List.Item>\r\n                <List.Item as=\"a\">Reed in Partnership </List.Item>\r\n                <List.Item as=\"a\">Careers with Reed</List.Item>\r\n                <List.Item as=\"a\">James Reed - Official Site</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Divider section />\r\n        <Grid centered>\r\n          <Image\r\n            style={{ height: \"88px\", width: \"176px\", position: \"center\" }}\r\n            src=\"/assets/appButtons.png\"\r\n          />\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Container, Form, Button } from \"semantic-ui-react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst SearchBar = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { query, getListJobs, setSearchParams } = jobsStore;\r\n  const onSubmit = async (data: IQueryRequest) => {\r\n    await setSearchParams(data);\r\n    await getListJobs(data);\r\n  };\r\n  return (\r\n    <Container style={{ width: \"100%\" }}>\r\n      <FinalForm\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form className=\"searchFormLanding\" onSubmit={handleSubmit}>\r\n            <Form.Group className=\"searchFormStyleLanding\">\r\n              <Form.Field style={{ width: \"20%\" }}>\r\n                <Field\r\n                  placeholder=\"e.g. nurse\"\r\n                  name=\"jobTitle\"\r\n                  value={query?.jobTitle}\r\n                  component=\"input\"\r\n                />{\" \"}\r\n              </Form.Field>\r\n              <Form.Field style={{ width: \"20%\" }}>\r\n                <Field\r\n                  placeholder=\"location or postcode\"\r\n                  value={query?.locationName}\r\n                  name=\"locationName\"\r\n                  component=\"input\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Button primary>Search</Button>\r\n              </Form.Field>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      ></FinalForm>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SearchBar);\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport {\r\n  Header,\r\n  Segment,\r\n  SegmentGroup,\r\n  Checkbox,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { salaryOptions, timeAdded } from \"../../../App/Util/FilterOptions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Form as FinalForm } from \"react-final-form\";\r\nimport { IQueryRequest, ICounters } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { toJS } from \"mobx\";\r\n\r\nconst Filters: React.FC<{ counters: ICounters }> = ({ counters }) => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { combineQuery } = jobsStore;\r\n  const onSubmit = async () => {\r\n    await combineQuery(queryX!);\r\n    console.log(queryX);\r\n  };\r\n  const returnValue = (text: string) => {\r\n    let result;\r\n    for (var i = 0; i < salaryOptions.length; i++) {\r\n      if (salaryOptions[i].text === text) {\r\n        result = salaryOptions[i].value;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  const returnDateValue = (text: string) => {\r\n    let result;\r\n    for (var i = 0; i < timeAdded.length; i++) {\r\n      if (timeAdded[i].text === text) {\r\n        result = timeAdded[i].value;\r\n      }\r\n    }\r\n    const data = result;\r\n    return new Date(Date.parse(data!));\r\n  };\r\n\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const [show, toggleShow] = React.useState(false);\r\n  const setTrue = () => {\r\n    toggleShow(true);\r\n  };\r\n  console.log(toJS(counters));\r\n  return (\r\n    <Container>\r\n      <FinalForm\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <SegmentGroup>\r\n              <Segment>\r\n                <Header content=\"Filter your search\" size=\"medium\" />\r\n              </Segment>\r\n\r\n              {show && (\r\n                <Segment>\r\n                  <Button\r\n                    fluid\r\n                    style={{ backgroundColor: \"#2185d0\", color: \"#fff\" }}\r\n                    animated=\"fade\"\r\n                  >\r\n                    <Button.Content visible>Update</Button.Content>\r\n                    <Button.Content hidden>Search</Button.Content>\r\n                  </Button>\r\n                </Segment>\r\n              )}\r\n\r\n              <Segment>\r\n                <label>From :</label>\r\n                <Form.Field>\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        minimumSalary: returnValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"£Any\"\r\n                    onClick={setTrue}\r\n                    fluid\r\n                    selection\r\n                    options={salaryOptions}\r\n                    value={queryX?.minimumSalary}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n\r\n                <label>To :</label>\r\n                <br />\r\n                <Form.Field>\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        maximumSalary: returnValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"£Any\"\r\n                    onClick={setTrue}\r\n                    fluid\r\n                    selection\r\n                    options={salaryOptions}\r\n                    name=\"maximumSalary\"\r\n                    value={queryX?.maximumSalary}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"Job Type :\" size=\"tiny\" />\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Temporary\"\r\n                        : `Temporary (${counters.temporary})`\r\n                    }\r\n                    value=\"temporary\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.temporary})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Permanent\"\r\n                        : `Permanent (${counters.permanent})`\r\n                    }\r\n                    value=\"permanent\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.permanent})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Contract\"\r\n                        : `Contract (${counters.contract})`\r\n                    }\r\n                    value=\"contract\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.contract})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    onChange={(\r\n                      e: SyntheticEvent<HTMLElement, Event>,\r\n                      data: any\r\n                    ) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        fullTime: data.checked,\r\n                      })\r\n                    }\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Full-time\"\r\n                        : `Full-time (${counters.fullTime})`\r\n                    }\r\n                    onClick={setTrue}\r\n                    value={\"true\"}\r\n                    checked={queryX?.fullTime === true}\r\n                  />{\" \"}\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    onChange={(\r\n                      e: SyntheticEvent<HTMLElement, Event>,\r\n                      data: any\r\n                    ) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        partTime: data.checked,\r\n                      })\r\n                    }\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Part-time\"\r\n                        : `Part-time (${counters.partTime})`\r\n                    }\r\n                    onClick={setTrue}\r\n                    value={\"true\"}\r\n                    checked={queryX?.partTime === true}\r\n                  />{\" \"}\r\n                </Form.Group>\r\n              </Segment>\r\n              <Segment>\r\n                <Form.Field>\r\n                  <Header content=\"Date posted :\" size=\"tiny\" />\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        date: returnDateValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"Anytime\"\r\n                    fluid\r\n                    selection\r\n                    options={timeAdded}\r\n                    onClick={setTrue}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n              </Segment>\r\n\r\n              <Segment>\r\n                <Header content=\"Specialisms\" size=\"tiny\" />\r\n                <Segment style={{ height: \"220px\", overflowY: \"scroll\" }}>\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                </Segment>\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"Posted by :\" size=\"tiny\" />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Agency(26.431)\"\r\n                />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Employer(15.321)\"\r\n                />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Reed(54.123)\"\r\n                />\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"More options :\" size=\"tiny\" />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Suitable for graduates\"\r\n                />\r\n              </Segment>\r\n            </SegmentGroup>\r\n          </Form>\r\n        )}\r\n      >\r\n        {\" \"}\r\n      </FinalForm>\r\n      <SegmentGroup>\r\n        <Segment style={{ borderTop: \"3px solid green\" }}>\r\n          <p>\r\n            Find your perfect course through <b>reed.co.uk</b>\r\n          </p>\r\n          <Button\r\n            fluid\r\n            as={NavLink}\r\n            to=\"/registercv\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"1px solid grey\",\r\n              borderRadius: \"8px\",\r\n              padding: \"7px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            content=\"Search courses >\"\r\n          ></Button>\r\n        </Segment>\r\n      </SegmentGroup>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(Filters);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport const LoadingComponent: React.FC<{\r\n  inverted?: boolean;\r\n  content?: string;\r\n}> = ({ inverted = true, content }) => {\r\n  return (\r\n    <Dimmer\r\n      active\r\n      inverted\r\n      style={{\r\n        backgroundColor: \"rgb(245, 247, 250)\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  CardGroup,\r\n  GridRow,\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Button,\r\n  Modal,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IListSearchResult, IJobResult } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Dotdotdot from \"react-dotdotdot\";\r\nimport { formatDistance, parseISO } from \"date-fns\";\r\nimport { LoadingComponent } from \"../../../App/Layout/LoadingComponent\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst Cards: React.FC<{\r\n  jobs: IListSearchResult;\r\n  loadingInitial: boolean;\r\n  jobsPag: IJobResult[];\r\n}> = ({ jobs, loadingInitial, jobsPag }) => {\r\n  console.log(jobsPag);\r\n  if (loadingInitial)\r\n    return (\r\n      <CardGroup style={{ boxShadow: \"none\" }}>\r\n        <Card fluid style={{ height: \"300px\", boxShadow: \"none\" }}>\r\n          <Card.Description style={{ boxShadow: \"none\" }}>\r\n            <LoadingComponent content=\"Getting job results...\" />\r\n          </Card.Description>\r\n        </Card>\r\n      </CardGroup>\r\n    );\r\n  if (jobs?.count === 0)\r\n    return (\r\n      <CardGroup>\r\n        <Container>\r\n          <Header>\r\n            We cannot find any jobs with your search parameters. Please try\r\n            again later or change the location and job title!\r\n          </Header>\r\n        </Container>\r\n      </CardGroup>\r\n    );\r\n  return (\r\n    <CardGroup>\r\n      {jobsPag?.map((job, index) => (\r\n        <Card key={index} fluid>\r\n          <Card.Content>\r\n            <Grid>\r\n              <GridRow>\r\n                <GridColumn width=\"2\">\r\n                  <h6\r\n                    style={{\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b> Promoted</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"2\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"red\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b> Featured</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"1\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"green\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b>New</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"3\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"blue\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b>Easy Apply</b>\r\n                  </h6>\r\n                </GridColumn>\r\n              </GridRow>\r\n            </Grid>\r\n            <Image\r\n              style={{ marginTop: \"-20px\" }}\r\n              floated=\"right\"\r\n              size=\"small\"\r\n              alt=\"some image\"\r\n              src={job.photos}\r\n            />\r\n\r\n            <Card.Header as={Link} to={`/jobs/result/${job.jobId}`}>\r\n              {job.jobTitle}\r\n            </Card.Header>\r\n            <Card.Meta style={{ font: \"6\" }}>\r\n              <b>Posted</b>\r\n              {formatDistance(\r\n                parseISO(job?.datePosted!.toString()),\r\n                new Date(),\r\n                {\r\n                  addSuffix: true,\r\n                }\r\n              )}\r\n              <b> by </b> {job.employerName}\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              <Grid>\r\n                <GridRow>\r\n                  <GridColumn width=\"4\">\r\n                    <GridRow>\r\n                      <Header as=\"h5\">\r\n                        <Icon.Group size=\"small\">\r\n                          <Icon name=\"pound sign\" />\r\n                        </Icon.Group>\r\n                        {job.yearlyMinimumSalary === 0\r\n                          ? \"Depending on experiece\"\r\n                          : `${job.yearlyMinimumSalary} to\r\n                            ${job.yearlyMaximumSalary}`}\r\n                      </Header>\r\n                    </GridRow>\r\n                  </GridColumn>\r\n                  <GridColumn width=\"4\">\r\n                    <Header as=\"h5\">\r\n                      <Icon.Group size=\"small\">\r\n                        <Icon name=\"location arrow\" />\r\n                      </Icon.Group>\r\n                      {job.locationName}\r\n                    </Header>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow>\r\n                  <GridColumn width=\"4\">\r\n                    <Header as=\"h5\">\r\n                      <Icon.Group size=\"small\">\r\n                        <Icon name=\"clock outline\" />\r\n                      </Icon.Group>\r\n                      {job.contractType}\r\n                    </Header>\r\n                  </GridColumn>\r\n                </GridRow>\r\n              </Grid>\r\n            </Card.Description>\r\n            <br />\r\n            <Card.Description className=\"cardsdescription\">\r\n              <Dotdotdot clamp={4} truncationChar=\"...\">\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: job.jobDescription!.replace(/(<([^>]+)>)/gi, \"\"),\r\n                  }}\r\n                />\r\n              </Dotdotdot>\r\n            </Card.Description>\r\n            <Button\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={`/jobs/result/${job.jobId}`}\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid grey\",\r\n                borderRadius: \"8px\",\r\n                padding: \"7px\",\r\n              }}\r\n              content=\"Detailed view\"\r\n            ></Button>\r\n            <Modal\r\n              trigger={\r\n                <Button\r\n                  floated=\"right\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"1px solid grey\",\r\n                    borderRadius: \"8px\",\r\n                    padding: \"7px\",\r\n                  }}\r\n                >\r\n                  Quick view\r\n                </Button>\r\n              }\r\n            >\r\n              <Modal.Header>\r\n                {job.employerName}\r\n                <Image\r\n                  wrapped\r\n                  floated=\"right\"\r\n                  size=\"tiny\"\r\n                  src={job.photos}\r\n                  style={{ marginTop: \"-6px\" }}\r\n                />\r\n              </Modal.Header>\r\n\r\n              <Modal.Content scrolling>\r\n                <Header>{job.jobTitle}</Header>\r\n                <Modal.Description>\r\n                  <Grid>\r\n                    <GridRow>\r\n                      <GridColumn width=\"3\">\r\n                        <GridRow>\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"pound sign\" />\r\n                            </Icon.Group>\r\n                            {job.yearlyMinimumSalary === 0\r\n                              ? \"Depending on experiece\"\r\n                              : `${job.yearlyMinimumSalary} to\r\n                            ${job.yearlyMaximumSalary}`}\r\n                          </Header>\r\n                        </GridRow>\r\n                      </GridColumn>\r\n                      <GridColumn width=\"3\">\r\n                        <Header as=\"h5\">\r\n                          <Icon.Group size=\"small\">\r\n                            <Icon name=\"location arrow\" />\r\n                          </Icon.Group>\r\n                          {job.locationName}\r\n                        </Header>\r\n                      </GridColumn>\r\n                      <GridColumn width=\"3\">\r\n                        <Header as=\"h5\">\r\n                          <Icon.Group size=\"small\">\r\n                            <Icon name=\"clock outline\" />\r\n                          </Icon.Group>\r\n                          {job.contractType}\r\n                        </Header>\r\n                      </GridColumn>\r\n                    </GridRow>\r\n                  </Grid>\r\n                </Modal.Description>\r\n                <br />\r\n                <Modal.Description>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: job.jobDescription!,\r\n                    }}\r\n                  />\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button primary as={Link} to={`/jobs/result/${job.jobId}`}>\r\n                  Detailed view <Icon name=\"chevron right\" />\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Card.Content>\r\n        </Card>\r\n      ))}\r\n    </CardGroup>\r\n  );\r\n};\r\nexport default observer(Cards);\r\n","import React, { useContext, useState, useEffect, SyntheticEvent } from \"react\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Container,\r\n  Pagination,\r\n} from \"semantic-ui-react\";\r\nimport Filters from \"./Filters\";\r\nimport Cards from \"./Cards\";\r\nimport { IListSearchResult, ICounters } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst FiltersAndCards: React.FC<{\r\n  jobs?: IListSearchResult;\r\n  loadingInitial: boolean;\r\n  counters: ICounters;\r\n}> = ({ jobs, loadingInitial, counters }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [postsPerPage] = useState(5);\r\n  const indexOfLastJob = currentPage * postsPerPage;\r\n  const indexOfFirstJob = indexOfLastJob - postsPerPage;\r\n  const currentPosts = jobs?.lists.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  const clickon = (event: SyntheticEvent, data: any) => {\r\n    setCurrentPage(data!.activePage);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\">\r\n        {jobs?.count === undefined ? \"\" : `${jobs?.count} Jobs & Vacancies`}\r\n      </Header>\r\n      <Grid>\r\n        <GridColumn width={4}>\r\n          <Filters counters={counters!} />\r\n        </GridColumn>\r\n        <GridColumn width={12}>\r\n          <Cards\r\n            loadingInitial={loadingInitial!}\r\n            jobs={jobs!}\r\n            jobsPag={currentPosts!}\r\n          />\r\n          <Container style={{ textAlign: \"center\" }}>\r\n            <br />\r\n            {jobs?.lists === undefined || jobs?.count === 0 ? (\r\n              \"\"\r\n            ) : (\r\n              <Pagination\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={2}\r\n                activePage={currentPage}\r\n                totalPages={jobs?.count! / postsPerPage}\r\n                onPageChange={clickon}\r\n              />\r\n            )}\r\n          </Container>\r\n        </GridColumn>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(FiltersAndCards);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport { Segment, Divider } from \"semantic-ui-react\";\r\nimport FiltersAndCards from \"./Features/FiltersAndCards\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchResults = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const {\r\n    loadingInitial,\r\n    jobs,\r\n    getListJobs,\r\n    getQuery,\r\n    counters,\r\n    getCounters,\r\n  } = jobsStore;\r\n\r\n  useEffect(() => {\r\n    const query = getQuery();\r\n\r\n    getListJobs(query!);\r\n    getCounters(jobs!);\r\n    console.log(query);\r\n  }, [getListJobs]);\r\n  return (\r\n    <Segment style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <SearchBar />\r\n      <Divider section />\r\n      <FiltersAndCards\r\n        counters={counters!}\r\n        loadingInitial={loadingInitial!}\r\n        jobs={jobs!}\r\n      />\r\n    </Segment>\r\n  );\r\n};\r\nexport default withRouter(observer(SearchResults));\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  GridColumn,\r\n  GridRow,\r\n  Header,\r\n  Icon,\r\n  Modal,\r\n  Button,\r\n  CardGroup,\r\n  Image,\r\n  Segment,\r\n  SegmentGroup,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IJobResult } from \"../../../App/Models/Models\";\r\nimport { formatDistance, parseISO } from \"date-fns\";\r\n\r\nconst JobCard: React.FC<{ job: IJobResult }> = ({ job }) => {\r\n  if (job === undefined)\r\n    return (\r\n      <Card fluid style={{ borderTop: \"3px rgb(33, 138, 174) solid\" }}>\r\n        <Card.Content>\r\n          <Header>\r\n            Sorry, the job you're looking for is no longer being advertised.\r\n            However, you can still search for similar jobs.\r\n          </Header>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  return (\r\n    <CardGroup>\r\n      <Card fluid style={{ borderTop: \"3px rgb(33, 138, 174) solid\" }}>\r\n        <Card.Content>\r\n          <Header as=\"h1\" style={{ marginBottom: \"0px\" }}>\r\n            {job?.jobTitle}\r\n          </Header>\r\n          <Card.Meta style={{ font: \"6\" }}>\r\n            Posted{\" \"}\r\n            {formatDistance(parseISO(job?.datePosted!.toString()), new Date(), {\r\n              addSuffix: true,\r\n            })}{\" \"}\r\n            by {job?.employerName}\r\n          </Card.Meta>\r\n          <Grid>\r\n            <GridColumn width=\"12\">\r\n              <GridRow>\r\n                <Card.Description>\r\n                  <Segment\r\n                    style={{ marginTop: \"25px\", backgroundColor: \"#F7F8FA\" }}\r\n                  >\r\n                    <Grid>\r\n                      <GridRow>\r\n                        <GridColumn width=\"8\">\r\n                          <GridRow>\r\n                            <Header as=\"h5\">\r\n                              <Icon.Group size=\"small\">\r\n                                <Icon name=\"pound sign\" />\r\n                              </Icon.Group>\r\n                              {job?.yearlyMinimumSalary === 0\r\n                                ? \"Depending on experiece\"\r\n                                : `${job?.yearlyMinimumSalary} to\r\n                            ${job?.yearlyMaximumSalary}`}\r\n                            </Header>\r\n                          </GridRow>\r\n                        </GridColumn>\r\n                        <GridColumn width=\"8\">\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"location arrow\" />\r\n                            </Icon.Group>\r\n                            {job?.locationName}\r\n                          </Header>\r\n                        </GridColumn>\r\n                      </GridRow>\r\n                      <GridRow>\r\n                        <GridColumn width=\"8\">\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"clock outline\" />\r\n                            </Icon.Group>\r\n                            {job?.contractType}\r\n                          </Header>\r\n                        </GridColumn>\r\n                        {job?.applications! < 10 ? (\r\n                          <GridColumn width=\"8\">\r\n                            <Header as=\"h5\">\r\n                              <Icon.Group size=\"small\">\r\n                                <Icon name=\"universal access\" />\r\n                              </Icon.Group>\r\n                              {\"Be one of the first ten applicants\"}\r\n                            </Header>\r\n                          </GridColumn>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n                </Card.Description>\r\n                <br />\r\n                <Card.Description>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: job?.jobDescription!,\r\n                    }}\r\n                  />\r\n                </Card.Description>\r\n              </GridRow>\r\n            </GridColumn>\r\n            <GridColumn width=\"4\">\r\n              <GridRow>\r\n                <Modal\r\n                  trigger={\r\n                    <Button\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"#e84188\",\r\n                        color: \"white\",\r\n                        border: \"1px solid #e84188\",\r\n                        borderRadius: \"8px\",\r\n                        marginBottom: \"15px\",\r\n                        marginTop: \"25px\",\r\n                        padding: \"9px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <p style={{ fontWeight: \"bold\" }}>Apply Now</p>\r\n                    </Button>\r\n                  }\r\n                  basic\r\n                  size=\"small\"\r\n                >\r\n                  <Header icon=\"browser\" content=\"Success!\" />\r\n                  <Modal.Content>\r\n                    <h3>\r\n                      Congratulations! Your application is now being redirected\r\n                      to {job?.employerName}!\r\n                    </h3>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <Button color=\"green\" inverted>\r\n                      <Icon name=\"checkmark\" /> Got it\r\n                    </Button>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Button\r\n                  floated=\"right\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"1px solid #0079d1\",\r\n                    borderRadius: \"8px\",\r\n                    color: \"#0079d1\",\r\n                    width: \"100%\",\r\n                    padding: \"7px\",\r\n                  }}\r\n                >\r\n                  <p style={{ fontWeight: \"bold\" }}>\r\n                    <Icon name=\"share alternate\"></Icon>Share job\r\n                  </p>\r\n                </Button>\r\n                <SegmentGroup style={{ marginTop: \"54px\" }}>\r\n                  <Segment>\r\n                    <Grid>\r\n                      <GridRow as={NavLink} to=\"/jobs\">\r\n                        <p style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                          {job.employerName}\r\n                        </p>\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n\r\n                  <Segment>\r\n                    <Grid>\r\n                      <GridRow as={NavLink} to=\"/jobs\">\r\n                        <p style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                          About this company\r\n                        </p>\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n                </SegmentGroup>\r\n              </GridRow>\r\n            </GridColumn>\r\n          </Grid>\r\n        </Card.Content>\r\n      </Card>\r\n    </CardGroup>\r\n  );\r\n};\r\nexport default observer(JobCard);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { SegmentGroup, Segment, Container, Header } from \"semantic-ui-react\";\r\nimport { IListSearchResult } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SimilarJobs: React.FC<{ jobs: IListSearchResult }> = ({ jobs }) => {\r\n  return (\r\n    <Container>\r\n      <SegmentGroup>\r\n        <Segment style={{ borderTop: \"3px rgb(169,169,169) solid\" }}>\r\n          <Header content=\"Similar jobs\" size=\"medium\" />\r\n        </Segment>\r\n        {jobs?.lists.slice(0 - 7).map((job, index) => (\r\n          <Segment key={index}>\r\n            <Header\r\n              style={{ color: \"#00487f\", fontSize: \"16px\" }}\r\n              content={job.jobTitle}\r\n              as={Link}\r\n              to={`/jobs/result/${job.jobId}`}\r\n            />\r\n            <p style={{ color: \"#8fa2bf\" }}>\r\n              {job.yearlyMaximumSalary === 0\r\n                ? \"Salary dependent on experience\"\r\n                : `£ ${job.yearlyMaximumSalary}`}\r\n            </p>\r\n            <p style={{ marginTop: \"-15px\", color: \"#8fa2bf\" }}>\r\n              {job.locationName}\r\n            </p>\r\n          </Segment>\r\n        ))}\r\n      </SegmentGroup>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SimilarJobs);\r\n","import React from \"react\";\r\nimport { Grid, Container, GridColumn } from \"semantic-ui-react\";\r\nimport JobCard from \"./JobCard\";\r\nimport SimilarJobs from \"./SimilarJobs\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IJobResult, IListSearchResult } from \"../../../App/Models/Models\";\r\nconst JobDetails: React.FC<{ job: IJobResult; jobs: IListSearchResult }> = ({\r\n  job,\r\n  jobs,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <GridColumn width={12}>\r\n          <JobCard job={job!} />\r\n        </GridColumn>\r\n        <GridColumn width={4}>\r\n          <SimilarJobs jobs={jobs!} />\r\n        </GridColumn>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(JobDetails);\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Segment, Divider } from \"semantic-ui-react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport JobDetails from \"./Features/JobDetails\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\nimport { LoadingComponent } from \"../../App/Layout/LoadingComponent\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\nconst DetailedView: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const jobsStore = useContext(JobStore);\r\n  const {\r\n    loadingInitial,\r\n    jobs,\r\n    getListJobs,\r\n    getQuery,\r\n    loadJob,\r\n    job,\r\n  } = jobsStore;\r\n  useEffect(() => {\r\n    let id = parseInt(match.params.id);\r\n    loadJob(id);\r\n  }, [loadJob, match.params.id, history]);\r\n\r\n  useEffect(() => {\r\n    const query = getQuery();\r\n\r\n    getListJobs(query!);\r\n  }, [getListJobs, getQuery]);\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Getting job details...\" />;\r\n\r\n  return (\r\n    <Segment style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <SearchBar />\r\n      <Divider section />\r\n      <JobDetails job={job!} jobs={jobs!} />\r\n    </Segment>\r\n  );\r\n};\r\nexport default observer(DetailedView);\r\n","import React, { Fragment } from \"react\";\r\nimport NotFound from \"./NotFound\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { NavBar } from \"../../Features/nav/NavBar\";\r\nimport { Route, Switch, withRouter, Router } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Homepage } from \"../../Features/Homepage/Homepage\";\r\nimport Jobs from \"../../Features/Jobs/Jobs\";\r\nimport { Courses } from \"../../Features/Courses/Courses\";\r\nimport { CareerAdvice } from \"../../Features/CareerAdvice/CareerAdvice\";\r\nimport { Recruiting } from \"../../Features/Recruiting/Recruiting\";\r\nimport { RegisterCV } from \"../../Features/Users/RegisterCV\";\r\nimport { SignIn } from \"../../Features/Users/SignIn\";\r\nimport { Shortlistedjobs } from \"../../Features/Users/Shortlistedjobs\";\r\nimport { Footer } from \"../../Features/Footer/Footer\";\r\nimport SearchResults from \"../../Features/JobSeekerLandingPage/SearchResults\";\r\nimport DetailedView from \"../../Features/JobSeekerLandingPage/DetailedView\";\r\nimport \"mobx-react-lite/batchingForReactDom\";\r\nimport { history } from \"../../index\";\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Router history={history}>\r\n        <ToastContainer position=\"bottom-right\" />\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route\r\n          path={\"/(.+)\"}\r\n          render={() => (\r\n            <Fragment>\r\n              <NavBar />\r\n              <Container\r\n                fluid\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"\trgb(176,176,176)\",\r\n                }}\r\n              >\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Homepage} />\r\n                  <Route exact path=\"/jobs\" component={Jobs} />\r\n                  <Route path=\"/jobs/results/\" component={SearchResults} />\r\n                  <Route exact path=\"/courses\" component={Courses} />\r\n                  <Route\r\n                    exact\r\n                    path=\"/jobs/result/:id\"\r\n                    component={DetailedView}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={\"/careeradvice\"}\r\n                    component={CareerAdvice}\r\n                  />\r\n                  <Route exact path=\"/recruiting\" component={Recruiting} />\r\n                  <Route exact path=\"/registercv\" component={RegisterCV} />\r\n                  <Route exact path=\"/signin/\" component={SignIn} />\r\n                  <Route\r\n                    exact\r\n                    path=\"/shortlistedjobs\"\r\n                    component={Shortlistedjobs}\r\n                  />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n        <Footer />\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return children;\r\n};\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App/Layout/styles.css\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport App from \"./App/Layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ScrollToTop from \"./App/Layout/ScrollToTop\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport dateFnsLocalizer from \"react-widgets-date-fns\";\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// or add a new declaration (.d.ts) file containing `declare module 'react-widgets-date-fns';`\n"],"sourceRoot":""}