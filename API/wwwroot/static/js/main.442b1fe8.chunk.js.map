{"version":3,"sources":["App/Layout/NotFound.tsx","Features/nav/NavBar.tsx","App/API/agent.ts","App/Util/FilterOptions.ts","App/Store/jobsStore.ts","Features/Jobs/Features/SearchBar.tsx","Features/Jobs/Features/TrendingJob.tsx","Features/Jobs/Features/DisplayJobsCard.tsx","Features/Jobs/Features/Sectors.tsx","Features/Jobs/Features/Locations.tsx","Features/Jobs/Features/Courses.tsx","Features/Jobs/Jobs.tsx","Features/Homepage/Homepage.tsx","App/Layout/UnderConstruction.tsx","Features/Courses/Courses.tsx","Features/CareerAdvice/CareerAdvice.tsx","Features/Recruiting/Recruiting.tsx","Features/Users/RegisterCV.tsx","Features/Users/SignIn.tsx","Features/Users/Shortlistedjobs.tsx","Features/Footer/Footer.tsx","Features/JobSeekerLandingPage/Features/SearchBar.tsx","Features/JobSeekerLandingPage/Features/Filters.tsx","App/Layout/LoadingComponent.tsx","Features/JobSeekerLandingPage/Features/Cards.tsx","Features/JobSeekerLandingPage/Features/FiltersAndCards.tsx","Features/JobSeekerLandingPage/SearchResults.tsx","Features/JobSeekerLandingPage/Features/JobCard.tsx","Features/JobSeekerLandingPage/Features/SimilarJobs.tsx","Features/JobSeekerLandingPage/Features/JobDetails.tsx","Features/JobSeekerLandingPage/DetailedView.tsx","App/Layout/App.tsx","serviceWorker.ts","App/Layout/ScrollToTop.tsx","index.tsx"],"names":["NotFound","Segment","placeholder","Header","icon","Icon","name","Inline","Button","as","Link","to","primary","NavBar","Menu","fixed","inverted","Container","Item","header","NavLink","exact","style","fontSize","position","backgroundColor","border","borderRadius","padding","marginRight","color","axios","defaults","baseURL","interceptors","response","use","undefined","error","message","respone","toast","status","history","push","responseBody","data","sleep","ms","Promise","resolve","setTimeout","requests","url","get","then","Jobs","counter","detailedJob","id","listJobs","params","createIndex","salaryOptions","key","text","value","anytime","Date","now","today","lastThreeDays","lastWeek","lastTwoWeeks","changeReq","days","setDate","getDate","toString","timeAdded","imageSelector","ls","require","configure","enforceActions","JobsStore","handlePhoto","result","first","Math","random","rand","round","i","length","observable","Map","action","a","indexButton","agent","runInAction","console","log","oldQuery","remove","clear","jobTitle","jobs","set","query","minimumSalary","maximumSalary","fullTime","partTime","contract","date","getListJobs","counterRegistry","loadingInitial","job","jobRegistry","lists","forEach","photos","counters","jobsRegistry","addPhotoToJobs","getCounters","isuggestion","locationName","suggestions","JobStore","createContext","observer","jobsStore","useContext","jobsCounter","setSearchParams","onSubmit","useEffect","fluid","className","backgroundImage","Grid","centered","GridColumn","totalJobs","textAlign","addedToday","render","handleSubmit","Form","Group","Field","component","React","useState","queryX","setQuery","handleClick","e","trueValue","stackable","Row","Column","width","List","link","onClick","DisplayJobsCard","employerName","lineHeight","columns","Card","image","extra","textStyle","bottom","height","Sectors","styleP","paddingLeft","Image","circular","src","filter","basic","Content","Courses","margin","paddingRight","borderLeftWidth","borderRightWidth","Homepage","UnderConstruction","backgroundRepeat","paddingTop","backgroundSize","backgroundPosition","useKey","pressed","setPressed","match","toLowerCase","onDown","onUp","window","addEventListener","removeEventListener","b","loading","CareerAdvice","Recruiting","RegisterCV","SignIn","Shortlistedjobs","Footer","vertical","content","Divider","section","combineQuery","returnValue","returnDateValue","parse","show","toggleShow","setTrue","toJS","SegmentGroup","size","animated","visible","hidden","Select","onChange","currentTarget","innerText","selection","options","grouped","Checkbox","label","temporary","replace","permanent","checked","overflowY","marginBottom","borderTop","LoadingComponent","Dimmer","active","boxShadow","Loader","jobsPag","CardGroup","Description","count","map","index","GridRow","font","marginTop","floated","alt","jobId","Meta","formatDistance","parseISO","datePosted","addSuffix","yearlyMinimumSalary","yearlyMaximumSalary","contractType","clamp","truncationChar","dangerouslySetInnerHTML","__html","jobDescription","Modal","trigger","wrapped","scrolling","Actions","currentPage","setCurrentPage","postsPerPage","indexOfLastJob","indexOfFirstJob","currentPosts","slice","Pagination","firstItem","lastItem","siblingRange","activePage","totalPages","onPageChange","event","scrollTo","withRouter","getQuery","applications","fontWeight","loadJob","parseInt","path","SearchResults","DetailedView","Boolean","location","hostname","children","pathname","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.442b1fe8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Segment, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere but couldn't find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/\" primary>\r\n          Return to our main page!\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Menu, Container, Button } from \"semantic-ui-react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <p style={{ fontSize: \"19px\" }}>\r\n            <b>reed</b>.co.uk\r\n          </p>\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Jobs\" as={NavLink} to=\"/jobs\" />\r\n        <Menu.Item name=\"Courses\" as={NavLink} to=\"/courses\" />\r\n        <Menu.Item name=\"Career advice\" as={NavLink} to=\"/careeradvice\" />\r\n        <Menu.Item name=\"Recruiting?Post a job\" as={NavLink} to=\"/recruiting\" />\r\n        <Menu.Item position=\"right\">\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/registercv\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"1px solid white\",\r\n              borderRadius: \"15px\",\r\n              padding: \"7px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Register CV</p>\r\n          </Button>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/signin\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              padding: \"3px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Sign in</p>\r\n          </Button>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/shortlistedjobs\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              padding: \"3px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <p style={{ color: \"white\" }}>Shortlisted jobs</p>\r\n          </Button>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { ICounter, IJobResult, IListSearchResult } from \"../Models/Models\";\r\n\r\naxios.defaults.baseURL = \"/api/search\";\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.respone) {\r\n    toast.error(\"Network error - Servers are currently offline.\");\r\n  }\r\n  const { status } = error.response;\r\n\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    history.push(\"/notfound\");\r\n  }\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nexport const sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\nconst requests = {\r\n  getEasy: (url: string) => axios.get(url),\r\n  get: (url: string) => axios.get(url).then(sleep(50)).then(responseBody),\r\n  getForm: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(sleep(10)).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(sleep(10)).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(sleep(10)).then(responseBody),\r\n};\r\n\r\nconst Jobs = {\r\n  counter: (): Promise<ICounter> => requests.get(\"/counter\"),\r\n  detailedJob: (id: number): Promise<IJobResult> =>\r\n    requests.get(`/result/${id}`),\r\n  listJobs: (params: URLSearchParams): Promise<IListSearchResult> =>\r\n    axios.get(\"/results\", { params: params }).then(responseBody),\r\n\r\n  createIndex: () => requests.getEasy(\"/createIndex\"),\r\n};\r\nexport default Jobs;\r\n","export const salaryOptions = [\r\n  { key: \"s1\", text: \"Up to £10000\", value: 10000 },\r\n  { key: \"s2\", text: \"£12000\", value: 12000 },\r\n  { key: \"s3\", text: \"£14000\", value: 14000 },\r\n  { key: \"s4\", text: \"£18000\", value: 18000 },\r\n  { key: \"s5\", text: \"£25000\", value: 25000 },\r\n  { key: \"s6\", text: \"£30000\", value: 30000 },\r\n  { key: \"s7\", text: \"£35000\", value: 35000 },\r\n  { key: \"s8\", text: \"£40000\", value: 40000 },\r\n  { key: \"s9\", text: \"£45000\", value: 45000 },\r\n  { key: \"s10\", text: \"£50000\", value: 50000 },\r\n  { key: \"s11\", text: \"£55000\", value: 55000 },\r\n  { key: \"s12\", text: \"£75000\", value: 75000 },\r\n  { key: \"s13\", text: \"£100000\", value: 100000 },\r\n];\r\n\r\nconst anytime = new Date(Date.now());\r\nconst today = new Date(Date.now());\r\nconst lastThreeDays = new Date(Date.now());\r\nconst lastWeek = new Date(Date.now());\r\nconst lastTwoWeeks = new Date(Date.now());\r\n//dateTime.setFullYear(dateTime.getFullYear() + 1);\r\nconst changeReq = (data: Date, days: number) => {\r\n  const date = new Date(data.setDate(data.getDate() + days));\r\n  return date.toString();\r\n};\r\n\r\nexport const timeAdded = [\r\n  { key: \"anytime\", text: \"Anytime\", value: changeReq(anytime, -365) },\r\n  { key: \"today\", text: \"Today\", value: changeReq(today, -1) },\r\n  {\r\n    key: \"last three days\",\r\n    text: \"Last three days\",\r\n    value: changeReq(lastThreeDays, -3),\r\n  },\r\n  { key: \"last week\", text: \"Last week\", value: changeReq(lastWeek, -7) },\r\n  {\r\n    key: \"last two weeks\",\r\n    text: \"Last two weeks\",\r\n    value: changeReq(lastTwoWeeks, -14),\r\n  },\r\n];\r\n\r\nexport const contractType = [\r\n  { text: \"Permanent\", value: \"Permanent\" },\r\n  { text: \"Contract\", value: \"Contract\" },\r\n  { text: \"Temporary\", value: \"Temporary\" },\r\n];\r\n\r\nexport const imageSelector = [\r\n  { key: 1, value: \"/assets/reedTechnology.png\" },\r\n  { key: 2, value: \"/assets/reedBussiness.png\" },\r\n  { key: 3, value: \"/assets/reedEngine.png\" },\r\n  { key: 4, value: \"/assets/reedProcurement.png\" },\r\n  { key: 5, value: \"/assets/reedAcc.png\" },\r\n  { key: 0, value: \"/assets/reedLogo2.png\" },\r\n];\r\n\r\nexport const employerSelector = [\r\n  { key: 1, text: \"hays\", value: \"/assets/hays.png\" },\r\n  { key: 2, text: \"the training room\", value: \"/assets/trainingroom.png\" },\r\n  { key: 3, text: \"tradewind\", value: \"/assets/tradewind.png\" },\r\n  { key: 4, text: \"rise\", value: \"/assets/rise.png\" },\r\n  { key: 5, text: \"prospero\", value: \"/assets/prospero.png\" },\r\n  {\r\n    key: 0,\r\n    text: \"teaching personnel\",\r\n    value: \"/assets/teachingpersonnel.png\",\r\n  },\r\n  {\r\n    key: 6,\r\n    text: \"academics\",\r\n    value: \"/assets/academics.png\",\r\n  },\r\n  {\r\n    key: 7,\r\n    text: \"NHS National Services Scotland\",\r\n    value: \"/assets/nhsscotland.png\",\r\n  },\r\n  {\r\n    key: 8,\r\n    text: \"NHS Business Services Authority Jobs\",\r\n    value: \"/assets/nhsjobs.png\",\r\n  },\r\n];\r\n","import { observable, action, runInAction, configure } from \"mobx\";\r\nimport {\r\n  ICounter,\r\n  IQueryRequest,\r\n  IJobResult,\r\n  IListSearchResult,\r\n  ICounters,\r\n  ISuggest,\r\n} from \"../Models/Models\";\r\nimport agent from \"../API/agent\";\r\nimport { history } from \"../../index\";\r\nimport { createContext } from \"react\";\r\nimport { imageSelector } from \"../Util/FilterOptions\";\r\nvar ls = require(\"local-storage\");\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport class JobsStore {\r\n  @observable counter: ICounter | undefined;\r\n  @observable counters: ICounters | undefined;\r\n  @observable resultCount?: number;\r\n  @observable counterRegistry = new Map();\r\n  @observable queryRegistry = new Map();\r\n  @observable loadingInitial = false;\r\n  @observable addedToday: number | undefined;\r\n  @observable jobs?: IListSearchResult;\r\n  @observable jobsRegistry = new Map();\r\n  @observable jobRegistry = new Map();\r\n  @observable appLoaded = false;\r\n  @observable query?: IQueryRequest;\r\n  @observable job?: IJobResult;\r\n  @observable jobresult?: IJobResult;\r\n  @observable jobsPag?: IJobResult[];\r\n  @observable indexButton = false;\r\n  @observable isuggestion?: ISuggest;\r\n  @observable suggestions?: ISuggest[];\r\n\r\n  @action createIndex = async () => {\r\n    this.indexButton = true;\r\n    await agent.createIndex();\r\n    try {\r\n      runInAction(async () => {\r\n        this.indexButton = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action trendingQuery = async (data: string) => {\r\n    const oldQuery: IQueryRequest = await ls.get(\"data\");\r\n    ls.remove(\"data\");\r\n    ls.clear();\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        oldQuery.jobTitle = data;\r\n      });\r\n      return this.jobs;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action setSearchParams = async (data: IQueryRequest) => {\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        if (ls.get(\"data\") !== null) {\r\n          ls.remove(\"data\");\r\n          ls.clear();\r\n          ls.set(\"data\", data);\r\n        } else {\r\n          ls.set(\"data\", data);\r\n        }\r\n\r\n        this.query = data;\r\n        history.push(\"/jobs/results\");\r\n      });\r\n      return this.query;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handlePhoto = () => {\r\n    const min = 0;\r\n    const max = 5;\r\n    const first = min + Math.random() * (max - min);\r\n    const rand = Math.round(first);\r\n    let result;\r\n    for (var i = 0; i < imageSelector.length; i++) {\r\n      if (imageSelector[i].key === rand) {\r\n        result = imageSelector[i].value;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action combineQuery = async (data: IQueryRequest) => {\r\n    const oldQuery: IQueryRequest = await ls.get(\"data\");\r\n    try {\r\n      runInAction(\"loading query\", () => {\r\n        if (data.minimumSalary !== null) {\r\n          oldQuery.minimumSalary = data.minimumSalary;\r\n        }\r\n        if (data.maximumSalary !== null) {\r\n          oldQuery.maximumSalary = data.maximumSalary;\r\n        }\r\n        if (data.fullTime !== null) {\r\n          oldQuery.fullTime = data.fullTime;\r\n        }\r\n        if (data.partTime !== null) {\r\n          oldQuery.partTime = data.partTime;\r\n        }\r\n        if (data.contract !== null) {\r\n          oldQuery.contract = data.contract;\r\n        }\r\n        if (data.date !== null) {\r\n          oldQuery.date = data.date;\r\n        }\r\n        ls.set(\"data\", oldQuery);\r\n        this.getListJobs(oldQuery!);\r\n      });\r\n      return this.jobs;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action getQuery = () => {\r\n    try {\r\n      runInAction(\"loading counter\", () => {\r\n        this.query = ls.get(\"data\");\r\n      });\r\n      return this.query;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action jobsCounter = async () => {\r\n    try {\r\n      let counter = await agent.counter();\r\n      runInAction(\"loading counter\", () => {\r\n        this.counter = counter;\r\n        this.counterRegistry.set(counter, this.counter);\r\n      });\r\n      return counter;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action loadJob = async (id: number) => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      let job = await agent.detailedJob(id);\r\n      runInAction(\"load job\", () => {\r\n        this.job = job;\r\n        this.jobRegistry.set(job, this.job);\r\n        this.loadingInitial = false;\r\n      });\r\n      return job;\r\n    } catch (error) {\r\n      this.loadingInitial = false;\r\n\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action addPhotoToJobs = async (jobs: IListSearchResult) => {\r\n    try {\r\n      runInAction(\"add images\", () => {\r\n        jobs.lists.forEach((job) => {\r\n          job.photos = this.handlePhoto();\r\n        });\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getCounters = (params: IListSearchResult) => {\r\n    try {\r\n      runInAction(() => {\r\n        this.counters = params.counters;\r\n      });\r\n      return this.counters;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action getListJobs = async (params: IQueryRequest) => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      let jobs = await agent.listJobs(params);\r\n      runInAction(\"get list\", () => {\r\n        this.jobs = jobs;\r\n        this.jobsRegistry.set(jobs, this.jobs);\r\n        this.loadingInitial = false;\r\n        this.addPhotoToJobs(this.jobs);\r\n        this.getCounters(jobs!);\r\n      });\r\n\r\n      return this.jobs;\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getListJobTitles = async (params: string) => {\r\n    this.isuggestion!.jobTitle = params;\r\n    try {\r\n      let jobs = await agent.listJobs(this.isuggestion!);\r\n      let suggestions: ISuggest[];\r\n      let suggestion: ISuggest;\r\n      runInAction(\"get list\", () => {\r\n        jobs.lists.forEach((job) => {\r\n          suggestion.jobTitle = job.jobTitle;\r\n          suggestion.locationName = job.locationName;\r\n          suggestions?.push(suggestion);\r\n        });\r\n        this.suggestions = suggestions;\r\n      });\r\n      return this.suggestions;\r\n    } catch (error) {\r\n      runInAction(\"load jobs error\", () => {\r\n        console.log(error);\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport const JobStore = createContext(new JobsStore());\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Form,\r\n  Grid,\r\n  GridColumn,\r\n} from \"semantic-ui-react\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nconst SearchBar = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { jobsCounter, counter, setSearchParams, query } = jobsStore;\r\n  const onSubmit = async (query: IQueryRequest) => {\r\n    await setSearchParams(query);\r\n  };\r\n  useEffect(() => {\r\n    jobsCounter();\r\n  }, [jobsCounter]);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      className=\"searchContainer\"\r\n      style={{ backgroundImage: \"url(/assets/searchBar.png)\" }}\r\n    >\r\n      <Grid centered>\r\n        <GridColumn className=\"phcounter\">\r\n          {counter?.totalJobs === 0 ? (\r\n            <Header style={{ textAlign: \"center\", color: \"white\" }} />\r\n          ) : (\r\n            <Header style={{ textAlign: \"center\", color: \"white\" }}>\r\n              Search {counter?.totalJobs} new jobs - {counter?.addedToday} added\r\n              in the last 24 hours!\r\n            </Header>\r\n          )}\r\n        </GridColumn>{\" \"}\r\n      </Grid>\r\n\r\n      <Container>\r\n        <Grid centered>\r\n          <FinalForm\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit }) => (\r\n              <Form className=\"searchForm\" onSubmit={handleSubmit}>\r\n                <Form.Group className=\"searchFormStyle\">\r\n                  <Form.Field>\r\n                    <label style={{ color: \"white\", textAlign: \"left\" }}>\r\n                      What\r\n                    </label>\r\n                    <Field\r\n                      placeholder=\"e.g. nurse\"\r\n                      name=\"jobTitle\"\r\n                      value={query?.jobTitle}\r\n                      component=\"input\"\r\n                    />{\" \"}\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label style={{ color: \"white\", textAlign: \"left\" }}>\r\n                      Where\r\n                    </label>\r\n                    <Field\r\n                      placeholder=\"location or postcode\"\r\n                      value={query?.locationName}\r\n                      name=\"locationName\"\r\n                      component=\"input\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Button primary>Search</Button>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          ></FinalForm>\r\n        </Grid>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SearchBar);\r\n","import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Container, Grid, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst TrendingJob = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      jobTitle: data.value,\r\n    });\r\n\r\n    if (queryX?.jobTitle === data.value) {\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n\r\n  const trueValue = (data: string) => {\r\n    if (data === \"true\") return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br /> <br />\r\n      <h1 style={{ textAlign: \"center\" }}> Trending Jobs</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        The most popular job types in the last 24 hours!\r\n      </h3>\r\n      <br />\r\n      <Grid stackable centered>\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"NHS\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                NHS Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"immediate\" onClick={handleClick}>\r\n                {\" \"}\r\n                <p className=\"linkHover\">\r\n                Immediate Start Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"supermarket\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Supermarket Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"delivery\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Delivery Driver Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"work home\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Work From Home Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                as={Link}\r\n                value=\"true\"\r\n                onClick={(e: SyntheticEvent<HTMLElement, Event>, data: any) => {\r\n                  setQuery({\r\n                    ...queryX!,\r\n                    partTime: trueValue(data.value),\r\n                  });\r\n                  if (queryX?.partTime === trueValue(data.value)) {\r\n                    setSearchParams(queryX!);\r\n                  }\r\n                }}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Part Time Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"medicine\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Health and Medicine Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"emergency\" onClick={handleClick}>\r\n                {\" \"}\r\n                <p className=\"linkHover\">\r\n                Emergency Call Handler Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"farm\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Farm Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <List link>\r\n              <List.Item as={Link} value=\"warehouse\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Warehouse Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"social care\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Social Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item as={Link} value=\"administration\" onClick={handleClick}>\r\n              <p className=\"linkHover\">\r\n                Administration Jobs\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(TrendingJob);\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport { Container, Grid, Card, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\n\r\nexport const DisplayJobsCard = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      employerName: data.value,\r\n    });\r\n\r\n    if (queryX?.employerName === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <Container>\r\n        <br style={{ lineHeight: \"10px\" }} />\r\n\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Find a job you love with the UK's #1 job site\r\n        </h1>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Your next role could be with one of these leading companies. Apply\r\n          today.\r\n        </h3>\r\n        <br />\r\n        <Grid centered>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/hays.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"Hays Specialist Recruitment Limited\"\r\n                    onClick={handleClick}\r\n                  ><p style={{textAlign: \"center\"}}>\r\n                    Jobs at Hays Company\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/trainingroom.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"The training room\"\r\n                    onClick={handleClick}\r\n                  >\r\n                   <p style={{textAlign: \"center\"}}>\r\n                    Jobs at The Training Room\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/tradewind.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"tradewind\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Tradewind\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/rise.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"rise\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Rise Technical\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/prospero.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"prospero\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Prospero Learning\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/teachingpersonnel.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"Teaching Personnel\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at The Teaching Personnel\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/academics.png\"\r\n                extra={\r\n                  <List.Item as={Link} value=\"Academics\" onClick={handleClick}>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at Academics\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/nhsscotland.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"NHS National Services Scotland\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at NHS Scotland\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n              <Card\r\n                image=\"/assets/nhsjobs.png\"\r\n                extra={\r\n                  <List.Item\r\n                    as={Link}\r\n                    value=\"NHS Business Services Authority Jobs\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <p style={{textAlign: \"center\"}}>\r\n                    Jobs at NHS Business\r\n                    </p>\r\n                  </List.Item>\r\n                }\r\n              ></Card>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Container, Grid, List, Image, Segment, Item } from \"semantic-ui-react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"39%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport const Sectors = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n const styleP={paddingLeft: \"60px\", color: \"#0079d1\"}\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      jobTitle: data.value,\r\n    });\r\n\r\n    if (queryX?.jobTitle === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <br style={{ lineHeight: \"10px\" }} />\r\n\r\n      <h1 style={{ textAlign: \"center\" }}>Choose your sector</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        Jobs across 42 sectors. See the latest roles now.\r\n      </h3>\r\n      <br />\r\n      <Grid centered>\r\n        <br />\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/technology.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"technology\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Technology</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Accountant\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Accountancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Admin\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Admin Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Banking\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Banking Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Construction\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Construction Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Customer Service\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Customer Service Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Education\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Education Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/engineering.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Engineer\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Engineering</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Engineer\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Engineering Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Financial\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Financial Service Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Insurance\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                General Insurance Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"HR\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Human Resources Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"IT\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                IT and Telecoms Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Contractor\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Contractor Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/graduation.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Graduate\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Graduates</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Legal\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Legal Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Manufactoring\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Manufactoring Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Digital\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Media, Digital and Creative Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Multilingual\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Multilingual Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Recruitment\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Recruitment Consultancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Motoring\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Motoring and Automative Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered as={NavLink} to=\"/registercv\">\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/health.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                      <List.Item\r\n                          as={Link}\r\n                          value=\"Health\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Health</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Sales\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Sales Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Social Care\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Social Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"NHS\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                National Health Care Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Transport\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Transport and Logisitics Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Security\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Security and Consultancy Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n              <List.Item\r\n                style={styleP}\r\n                as={Link}\r\n                value=\"Scientific\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Scientific Jobs\r\n                </p>\r\n              </List.Item>\r\n              <br />\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  List,\r\n  Image,\r\n  Segment,\r\n  Item,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"39%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst Locations = () => {\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const jobsStore = useContext(JobStore);\r\n  const { setSearchParams } = jobsStore;\r\n\r\n  const handleClick = async (\r\n    e: SyntheticEvent<HTMLElement, Event>,\r\n    data: any\r\n  ) => {\r\n    setQuery({\r\n      ...queryX!,\r\n      locationName: data.value,\r\n    });\r\n\r\n    if (queryX?.locationName === data.value) {\r\n      console.log(queryX);\r\n\r\n      await setSearchParams(queryX!);\r\n    }\r\n \r\n  };\r\n  return (\r\n    <Container>\r\n      <br style={{ lineHeight: \"10px\" }} />\r\n\r\n      <h1 style={{ textAlign: \"center\" }}>Browse local jobs</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        See who's hiring in your area. Find a job close to home.\r\n      </h3>\r\n      <br />\r\n      <Grid centered>\r\n        <br />\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  src=\"/assets/london.png\"\r\n                  circular\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"london\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> London</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n              <List.Item \r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"london\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in London</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"south east england\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in South East England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"surrey\"\r\n                onClick={handleClick}\r\n              ><p className=\"linkHover\">\r\n                Jobs in Surrey\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Essex\"\r\n                onClick={handleClick}\r\n                \r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Essex\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Kent\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Kent\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"south west england\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in South West England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"bristol\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Bristol\r\n                </p>\r\n              </List.Item>{\" \"}\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Devon\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Devon\r\n                </p>\r\n              </List.Item>{\" \"}\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Plymouth\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Plymouth\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/glasgow.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Glasgow\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Glasgow</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"East Midlands\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in East Midlands</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Nottingham\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Nottingham\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Leicester\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Leicester\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Derby\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Derby\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"West Midlands\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in West Midlands</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Birmingham\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Birmingham\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Coventry\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Coventry\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Stoke-on-Trent\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Stoke-on-Trent\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"East Anglia\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in East Anglia</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Cambridge\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Cambridge\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Norwich\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Norwich\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Peterborough\"\r\n                onClick={handleClick}\r\n              >\r\n               <p className=\"linkHover\">\r\n                Jobs in Peterborough\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/manchester.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Manchester\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Manchester</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"North East England\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in North East England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Newcastle Upon Tyne\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Newcastle Upon Tyne\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Middlesbrough\"\r\n                onClick={handleClick}\r\n                \r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Middlesbrough\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Sunderland\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Sunderland\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"North West England\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in North West England</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Manchester\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Manchester\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Liverpool\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Liverpool\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Bolton\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Bolton\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Jobs in Yorkshire and Humberside\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Yorkshire</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Leeds\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Leeds\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Sheffield\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Sheffield\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Hull\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Hull\r\n                </p>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Grid>\r\n              <Grid.Row centered>\r\n                <Image\r\n                  circular\r\n                  src=\"/assets/liverpool.png\"\r\n                  style={{ filter: \"brightness(80%)\" }}\r\n                />\r\n                <Item className=\"overlay\" />\r\n                <Segment basic style={textStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <List.Item\r\n                          as={Link}\r\n                          value=\"Liverpool\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          <h1 style={{ color: \"white\" }}> Liverpool</h1>\r\n                        </List.Item>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <List link>\r\n            <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Scotland\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Scotland</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Glasgow\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Glasgow\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Edinburgh\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Edinburgh\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Aberdeen\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Aberdeen\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Wales\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Wales</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Cardiff\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Cardiff\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Swansea\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Swansea\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Newport\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Newport\r\n                </p>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"40px\" }}\r\n                as={Link}\r\n                value=\"Northern Ireland\"\r\n                onClick={handleClick}\r\n              >\r\n                <h4 className=\"linkHover\">Jobs in Northern Ireland</h4>\r\n              </List.Item>\r\n              <List.Item\r\n                style={{ color: \"#0079d1\", paddingLeft: \"60px\" }}\r\n                as={Link}\r\n                value=\"Belfast\"\r\n                onClick={handleClick}\r\n              >\r\n                <p className=\"linkHover\">\r\n                Jobs in Belfast\r\n                </p>\r\n              </List.Item>\r\n             \r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(Locations);\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Image,\r\n  Segment,\r\n  Item,\r\n  Button,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst textStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"300%\",\r\n  width: \"100%\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport const Courses = () => {\r\n  return (\r\n    <Container className=\"imageContainer\">\r\n      <br />\r\n      <br />\r\n\r\n      <Container className=\"imageContainer\">\r\n        <Image\r\n          className=\"imageCourse\"\r\n          src=\"/assets/courses.png\"\r\n          fluid\r\n          style={{\r\n            filter: \"brightness(60%)\",\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n      </Container>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Segment basic style={textStyle}>\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Content>\r\n                  <h1>Find the right course</h1>\r\n\r\n                  <h3>\r\n                    Invest in your future with thousands of courses to help you\r\n                    learn and develop.\r\n                  </h3>\r\n                  <p>Now with an extra 10% off</p>\r\n\r\n                  <Button\r\n                    as={NavLink}\r\n                    to=\"/registercv\"\r\n                    style={{\r\n                      backgroundColor: \"transparent\",\r\n                      border: \"1px solid white\",\r\n                      borderRadius: \"15px\",\r\n                      padding: \"7px\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  >\r\n                    <p style={{ color: \"white\" }}>Learn more</p>\r\n                  </Button>\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Segment>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport TrendingJob from \"./Features/TrendingJob\";\r\nimport { DisplayJobsCard } from \"./Features/DisplayJobsCard\";\r\nimport { Sectors } from \"./Features/Sectors\";\r\nimport Locations from \"./Features/Locations\";\r\nimport { Courses } from \"./Features/Courses\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst Jobs = () => {\r\n  return (\r\n    <Segment\r\n      style={{\r\n        margin: \"0px\",\r\n        paddingRight: \"0px\",\r\n        paddingLeft: \"0px\",\r\n        borderLeftWidth: \"0px\",\r\n        borderRightWidth: \"0px\",\r\n      }}\r\n    >\r\n      <SearchBar />\r\n\r\n      <TrendingJob />\r\n      <DisplayJobsCard />\r\n\r\n      <Courses />\r\n      <Sectors />\r\n      <Locations />\r\n    </Segment>\r\n  );\r\n};\r\nexport default observer(Jobs);\r\n","import React from \"react\";\r\nimport { NavBar } from \"../nav/NavBar\";\r\nimport Jobs from \"../Jobs/Jobs\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nexport const Homepage = () => {\r\n  return (\r\n    <Container fluid>\r\n      <NavBar />\r\n      <Jobs />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nexport const UnderConstruction = () => {\r\n  return (\r\n    <Container\r\n      style={{\r\n        backgroundImage: \"url(/assets/UnderConstruction.png)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        paddingTop: \"780px\",\r\n        backgroundSize: \"100%\",\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    ></Container>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, Key, useState } from \"react\";\r\nimport { Container, Button } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\n\r\nexport const Courses = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { createIndex, indexButton } = jobsStore;\r\n\r\n  function useKey(key: Key) {\r\n    const [pressed, setPressed] = useState(false);\r\n\r\n    const match = (e: KeyboardEvent) => key == e.key.toLowerCase();\r\n\r\n    const onDown = (e: KeyboardEvent) => {\r\n      if (match(e)) setPressed(true);\r\n    };\r\n\r\n    const onUp = (e: KeyboardEvent) => {\r\n      if (match(e)) setPressed(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\", onDown);\r\n      window.addEventListener(\"keyup\", onUp);\r\n      return () => {\r\n        window.removeEventListener(\"keydown\", onDown);\r\n        window.removeEventListener(\"keyup\", onUp);\r\n      };\r\n    }, [key]);\r\n\r\n    return pressed;\r\n  }\r\n  const and = (a: boolean, b: boolean) => {\r\n    return a && b;\r\n  };\r\n  const key = and(useKey(\"shift\"), useKey(\"z\"));\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n      <Container>\r\n        {key && (\r\n          <Button\r\n            primary\r\n            fluid\r\n            onClick={() => createIndex()}\r\n            loading={indexButton}\r\n          >\r\n            Import Jobs\r\n          </Button>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const CareerAdvice = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const Recruiting = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const RegisterCV = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const SignIn = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { UnderConstruction } from \"../../App/Layout/UnderConstruction\";\r\n\r\nexport const Shortlistedjobs = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Segment,\r\n  Image,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Segment\r\n      inverted\r\n      vertical\r\n      style={{ padding: \"5em 0em\", position: \"relative\", bottom: \"0\" }}\r\n    >\r\n      <Container>\r\n        <Grid inverted>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"JOBS\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Contact Us</List.Item>\r\n                <List.Item as=\"a\">Job search</List.Item>\r\n                <List.Item as=\"a\">Recruiter directory</List.Item>\r\n                <List.Item as=\"a\">Work from home</List.Item>\r\n                <List.Item as=\"a\">Browse jobs</List.Item>\r\n                <List.Item as=\"a\">Browse location</List.Item>\r\n                <List.Item as=\"a\">Popular searches</List.Item>\r\n                <List.Item as=\"a\">Career Advice</List.Item>\r\n                <List.Item as=\"a\">Average salary checker</List.Item>\r\n                <List.Item as=\"a\">Help</List.Item>\r\n                <List.Item as=\"a\">Contact a REED office</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"RECRUITER\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Recruiter site</List.Item>\r\n                <List.Item as=\"a\">Post a Job</List.Item>\r\n                <List.Item as=\"a\">CV search</List.Item>\r\n                <List.Item as=\"a\">Recruitment agency</List.Item>\r\n                <List.Item as=\"a\">Recruiter Advice</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"COURSES\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Help</List.Item>\r\n                <List.Item as=\"a\">Contact us</List.Item>\r\n                <List.Item as=\"a\">Find a course</List.Item>\r\n                <List.Item as=\"a\">View all subjects</List.Item>\r\n                <List.Item as=\"a\">Discount courses</List.Item>\r\n                <List.Item as=\"a\">Online courses</List.Item>\r\n                <List.Item as=\"a\">Free courses</List.Item>\r\n                <List.Item as=\"a\">Awarding body directory</List.Item>\r\n                <List.Item as=\"a\">Career guides</List.Item>\r\n                <List.Item as=\"a\">Advertise a course</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"MORE\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">About us</List.Item>\r\n                <List.Item as=\"a\">Careers at reed.co.uk</List.Item>\r\n                <List.Item as=\"a\">For developers</List.Item>\r\n                <List.Item as=\"a\">Press Office</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" inverted content=\"REED\" />\r\n\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Tempzone: timesheets & holiday</List.Item>\r\n                <List.Item as=\"a\">Authorize timesheets</List.Item>\r\n                <List.Item as=\"a\">Reed Global</List.Item>\r\n                <List.Item as=\"a\">Reed in Partnership </List.Item>\r\n                <List.Item as=\"a\">Careers with Reed</List.Item>\r\n                <List.Item as=\"a\">James Reed - Official Site</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Divider section />\r\n        <Grid centered>\r\n          <Image\r\n            style={{ height: \"88px\", width: \"176px\", position: \"center\" }}\r\n            src=\"/assets/appButtons.png\"\r\n          />\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Container, Form, Button } from \"semantic-ui-react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { IQueryRequest } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst SearchBar = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { query, getListJobs, setSearchParams } = jobsStore;\r\n  const onSubmit = async (data: IQueryRequest) => {\r\n    await setSearchParams(data);\r\n    await getListJobs(data);\r\n  };\r\n  return (\r\n    <Container style={{ width: \"100%\" }}>\r\n      <FinalForm\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form className=\"searchFormLanding\" onSubmit={handleSubmit}>\r\n            <Form.Group className=\"searchFormStyleLanding\">\r\n              <Form.Field style={{ width: \"20%\" }}>\r\n                <Field\r\n                  placeholder=\"e.g. nurse\"\r\n                  name=\"jobTitle\"\r\n                  value={query?.jobTitle}\r\n                  component=\"input\"\r\n                />{\" \"}\r\n              </Form.Field>\r\n              <Form.Field style={{ width: \"20%\" }}>\r\n                <Field\r\n                  placeholder=\"location or postcode\"\r\n                  value={query?.locationName}\r\n                  name=\"locationName\"\r\n                  component=\"input\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Button primary>Search</Button>\r\n              </Form.Field>\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n      ></FinalForm>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SearchBar);\r\n","import React, { useContext, SyntheticEvent } from \"react\";\r\nimport {\r\n  Header,\r\n  Segment,\r\n  SegmentGroup,\r\n  Checkbox,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { salaryOptions, timeAdded } from \"../../../App/Util/FilterOptions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Form as FinalForm } from \"react-final-form\";\r\nimport { IQueryRequest, ICounters } from \"../../../App/Models/Models\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\nimport { toJS } from \"mobx\";\r\n\r\nconst Filters: React.FC<{ counters: ICounters }> = ({ counters }) => {\r\n  const jobsStore = useContext(JobStore);\r\n  const { combineQuery } = jobsStore;\r\n  const onSubmit = async () => {\r\n    await combineQuery(queryX!);\r\n    console.log(queryX);\r\n  };\r\n  const returnValue = (text: string) => {\r\n    let result;\r\n    for (var i = 0; i < salaryOptions.length; i++) {\r\n      if (salaryOptions[i].text === text) {\r\n        result = salaryOptions[i].value;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  const returnDateValue = (text: string) => {\r\n    let result;\r\n    for (var i = 0; i < timeAdded.length; i++) {\r\n      if (timeAdded[i].text === text) {\r\n        result = timeAdded[i].value;\r\n      }\r\n    }\r\n    const data = result;\r\n    return new Date(Date.parse(data!));\r\n  };\r\n\r\n  const [queryX, setQuery] = React.useState<IQueryRequest>();\r\n  const [show, toggleShow] = React.useState(false);\r\n  const setTrue = () => {\r\n    toggleShow(true);\r\n  };\r\n  console.log(toJS(counters));\r\n  return (\r\n    <Container>\r\n      <FinalForm\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <SegmentGroup>\r\n              <Segment>\r\n                <Header content=\"Filter your search\" size=\"medium\" />\r\n              </Segment>\r\n\r\n              {show && (\r\n                <Segment>\r\n                  <Button\r\n                    fluid\r\n                    style={{ backgroundColor: \"#2185d0\", color: \"#fff\" }}\r\n                    animated=\"fade\"\r\n                  >\r\n                    <Button.Content visible>Update</Button.Content>\r\n                    <Button.Content hidden>Search</Button.Content>\r\n                  </Button>\r\n                </Segment>\r\n              )}\r\n\r\n              <Segment>\r\n                <label>From :</label>\r\n                <Form.Field>\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        minimumSalary: returnValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"£Any\"\r\n                    onClick={setTrue}\r\n                    fluid\r\n                    selection\r\n                    options={salaryOptions}\r\n                    value={queryX?.minimumSalary}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n\r\n                <label>To :</label>\r\n                <br />\r\n                <Form.Field>\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        maximumSalary: returnValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"£Any\"\r\n                    onClick={setTrue}\r\n                    fluid\r\n                    selection\r\n                    options={salaryOptions}\r\n                    name=\"maximumSalary\"\r\n                    value={queryX?.maximumSalary}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"Job Type :\" size=\"tiny\" />\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Temporary\"\r\n                        : `Temporary (${counters.temporary})`\r\n                    }\r\n                    value=\"temporary\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.temporary})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Permanent\"\r\n                        : `Permanent (${counters.permanent})`\r\n                    }\r\n                    value=\"permanent\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.permanent})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Contract\"\r\n                        : `Contract (${counters.contract})`\r\n                    }\r\n                    value=\"contract\"\r\n                    onClick={setTrue}\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        contract: e.currentTarget.innerText\r\n                          .toLowerCase()\r\n                          .replace(` (${counters.contract})`, \"\"),\r\n                      })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    onChange={(\r\n                      e: SyntheticEvent<HTMLElement, Event>,\r\n                      data: any\r\n                    ) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        fullTime: data.checked,\r\n                      })\r\n                    }\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Full-time\"\r\n                        : `Full-time (${counters.fullTime})`\r\n                    }\r\n                    onClick={setTrue}\r\n                    value={\"true\"}\r\n                    checked={queryX?.fullTime === true}\r\n                  />{\" \"}\r\n                </Form.Group>\r\n                <Form.Group grouped>\r\n                  <Checkbox\r\n                    onChange={(\r\n                      e: SyntheticEvent<HTMLElement, Event>,\r\n                      data: any\r\n                    ) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        partTime: data.checked,\r\n                      })\r\n                    }\r\n                    label={\r\n                      counters === undefined\r\n                        ? \"Part-time\"\r\n                        : `Part-time (${counters.partTime})`\r\n                    }\r\n                    onClick={setTrue}\r\n                    value={\"true\"}\r\n                    checked={queryX?.partTime === true}\r\n                  />{\" \"}\r\n                </Form.Group>\r\n              </Segment>\r\n              <Segment>\r\n                <Form.Field>\r\n                  <Header content=\"Date posted :\" size=\"tiny\" />\r\n                  <Form.Select\r\n                    onChange={(e: SyntheticEvent<HTMLElement, Event>) =>\r\n                      setQuery({\r\n                        ...queryX!,\r\n                        date: returnDateValue(e.currentTarget.innerText),\r\n                      })\r\n                    }\r\n                    placeholder=\"Anytime\"\r\n                    fluid\r\n                    selection\r\n                    options={timeAdded}\r\n                    onClick={setTrue}\r\n                  ></Form.Select>\r\n                </Form.Field>\r\n              </Segment>\r\n\r\n              <Segment>\r\n                <Header content=\"Specialisms\" size=\"tiny\" />\r\n                <Segment style={{ height: \"220px\", overflowY: \"scroll\" }}>\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Permanent(26.431)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Temporary(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Contract(54.123)\"\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                  <Checkbox\r\n                    label=\"Part-time(15.321)\"\r\n                    style={{ marginBottom: \"5px\" }}\r\n                  />\r\n                  <Checkbox\r\n                    style={{ marginBottom: \"9px\" }}\r\n                    label=\"Full-time(15.321)\"\r\n                  />\r\n                </Segment>\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"Posted by :\" size=\"tiny\" />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Agency(26.431)\"\r\n                />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Employer(15.321)\"\r\n                />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Reed(54.123)\"\r\n                />\r\n              </Segment>\r\n              <Segment>\r\n                <Header content=\"More options :\" size=\"tiny\" />\r\n                <Checkbox\r\n                  style={{ marginBottom: \"9px\" }}\r\n                  label=\"Suitable for graduates\"\r\n                />\r\n              </Segment>\r\n            </SegmentGroup>\r\n          </Form>\r\n        )}\r\n      >\r\n        {\" \"}\r\n      </FinalForm>\r\n      <SegmentGroup>\r\n        <Segment style={{ borderTop: \"3px solid green\" }}>\r\n          <p>\r\n            Find your perfect course through <b>reed.co.uk</b>\r\n          </p>\r\n          <Button\r\n            fluid\r\n            as={NavLink}\r\n            to=\"/registercv\"\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              border: \"1px solid grey\",\r\n              borderRadius: \"8px\",\r\n              padding: \"7px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            content=\"Search courses >\"\r\n          ></Button>\r\n        </Segment>\r\n      </SegmentGroup>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(Filters);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport const LoadingComponent: React.FC<{\r\n  inverted?: boolean;\r\n  content?: string;\r\n}> = ({ inverted = true, content }) => {\r\n  return (\r\n    <Dimmer\r\n      active\r\n      inverted\r\n      style={{\r\n        backgroundColor: \"rgb(245, 247, 250)\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  CardGroup,\r\n  GridRow,\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Button,\r\n  Modal,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IListSearchResult, IJobResult } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Dotdotdot from \"react-dotdotdot\";\r\nimport { formatDistance, parseISO } from \"date-fns\";\r\nimport { LoadingComponent } from \"../../../App/Layout/LoadingComponent\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst Cards: React.FC<{\r\n  jobs: IListSearchResult;\r\n  loadingInitial: boolean;\r\n  jobsPag: IJobResult[];\r\n}> = ({ jobs, loadingInitial, jobsPag }) => {\r\n  console.log(jobsPag);\r\n  if (loadingInitial)\r\n    return (\r\n      <CardGroup style={{ boxShadow: \"none\" }}>\r\n        <Card fluid style={{ height: \"300px\", boxShadow: \"none\" }}>\r\n          <Card.Description style={{ boxShadow: \"none\" }}>\r\n            <LoadingComponent content=\"Getting job results...\" />\r\n          </Card.Description>\r\n        </Card>\r\n      </CardGroup>\r\n    );\r\n  if (jobs?.count === 0)\r\n    return (\r\n      <CardGroup>\r\n        <Container>\r\n          <Header>\r\n            We cannot find any jobs with your search parameters. Please try\r\n            again later or change the location and job title!\r\n          </Header>\r\n        </Container>\r\n      </CardGroup>\r\n    );\r\n  return (\r\n    <CardGroup>\r\n      {jobsPag?.map((job, index) => (\r\n        <Card key={index} fluid>\r\n          <Card.Content>\r\n            <Grid>\r\n              <GridRow>\r\n                <GridColumn width=\"2\">\r\n                  <h6\r\n                    style={{\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b> Promoted</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"2\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"red\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b> Featured</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"1\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"green\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b>New</b>\r\n                  </h6>\r\n                </GridColumn>\r\n                <GridColumn width=\"3\">\r\n                  <h6\r\n                    style={{\r\n                      color: \"blue\",\r\n                      font: \"7\",\r\n                      marginTop: \"-10px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  >\r\n                    <b>Easy Apply</b>\r\n                  </h6>\r\n                </GridColumn>\r\n              </GridRow>\r\n            </Grid>\r\n            <Image\r\n              style={{ marginTop: \"-20px\" }}\r\n              floated=\"right\"\r\n              size=\"small\"\r\n              alt=\"some image\"\r\n              src={job.photos}\r\n            />\r\n\r\n            <Card.Header as={Link} to={`/jobs/result/${job.jobId}`}>\r\n              {job.jobTitle}\r\n            </Card.Header>\r\n            <Card.Meta style={{ font: \"6\" }}>\r\n              <b>Posted</b>\r\n              {formatDistance(\r\n                parseISO(job?.datePosted!.toString()),\r\n                new Date(),\r\n                {\r\n                  addSuffix: true,\r\n                }\r\n              )}\r\n              <b> by </b> {job.employerName}\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              <Grid>\r\n                <GridRow>\r\n                  <GridColumn width=\"4\">\r\n                    <GridRow>\r\n                      <Header as=\"h5\">\r\n                        <Icon.Group size=\"small\">\r\n                          <Icon name=\"pound sign\" />\r\n                        </Icon.Group>\r\n                        {job.yearlyMinimumSalary === 0\r\n                          ? \"Depending on experiece\"\r\n                          : `${job.yearlyMinimumSalary} to\r\n                            ${job.yearlyMaximumSalary}`}\r\n                      </Header>\r\n                    </GridRow>\r\n                  </GridColumn>\r\n                  <GridColumn width=\"4\">\r\n                    <Header as=\"h5\">\r\n                      <Icon.Group size=\"small\">\r\n                        <Icon name=\"location arrow\" />\r\n                      </Icon.Group>\r\n                      {job.locationName}\r\n                    </Header>\r\n                  </GridColumn>\r\n                </GridRow>\r\n                <GridRow>\r\n                  <GridColumn width=\"4\">\r\n                    <Header as=\"h5\">\r\n                      <Icon.Group size=\"small\">\r\n                        <Icon name=\"clock outline\" />\r\n                      </Icon.Group>\r\n                      {job.contractType}\r\n                    </Header>\r\n                  </GridColumn>\r\n                </GridRow>\r\n              </Grid>\r\n            </Card.Description>\r\n            <br />\r\n            <Card.Description className=\"cardsdescription\">\r\n              <Dotdotdot clamp={4} truncationChar=\"...\">\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: job.jobDescription!.replace(/(<([^>]+)>)/gi, \"\"),\r\n                  }}\r\n                />\r\n              </Dotdotdot>\r\n            </Card.Description>\r\n            <Button\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={`/jobs/result/${job.jobId}`}\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid grey\",\r\n                borderRadius: \"8px\",\r\n                padding: \"7px\",\r\n              }}\r\n              content=\"Detailed view\"\r\n            ></Button>\r\n            <Modal\r\n              trigger={\r\n                <Button\r\n                  floated=\"right\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"1px solid grey\",\r\n                    borderRadius: \"8px\",\r\n                    padding: \"7px\",\r\n                  }}\r\n                >\r\n                  Quick view\r\n                </Button>\r\n              }\r\n            >\r\n              <Modal.Header>\r\n                {job.employerName}\r\n                <Image\r\n                  wrapped\r\n                  floated=\"right\"\r\n                  size=\"tiny\"\r\n                  src={job.photos}\r\n                  style={{ marginTop: \"-6px\" }}\r\n                />\r\n              </Modal.Header>\r\n\r\n              <Modal.Content scrolling>\r\n                <Header>{job.jobTitle}</Header>\r\n                <Modal.Description>\r\n                  <Grid>\r\n                    <GridRow>\r\n                      <GridColumn width=\"3\">\r\n                        <GridRow>\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"pound sign\" />\r\n                            </Icon.Group>\r\n                            {job.yearlyMinimumSalary === 0\r\n                              ? \"Depending on experiece\"\r\n                              : `${job.yearlyMinimumSalary} to\r\n                            ${job.yearlyMaximumSalary}`}\r\n                          </Header>\r\n                        </GridRow>\r\n                      </GridColumn>\r\n                      <GridColumn width=\"3\">\r\n                        <Header as=\"h5\">\r\n                          <Icon.Group size=\"small\">\r\n                            <Icon name=\"location arrow\" />\r\n                          </Icon.Group>\r\n                          {job.locationName}\r\n                        </Header>\r\n                      </GridColumn>\r\n                      <GridColumn width=\"3\">\r\n                        <Header as=\"h5\">\r\n                          <Icon.Group size=\"small\">\r\n                            <Icon name=\"clock outline\" />\r\n                          </Icon.Group>\r\n                          {job.contractType}\r\n                        </Header>\r\n                      </GridColumn>\r\n                    </GridRow>\r\n                  </Grid>\r\n                </Modal.Description>\r\n                <br />\r\n                <Modal.Description>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: job.jobDescription!,\r\n                    }}\r\n                  />\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button primary as={Link} to={`/jobs/result/${job.jobId}`}>\r\n                  Detailed view <Icon name=\"chevron right\" />\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Card.Content>\r\n        </Card>\r\n      ))}\r\n    </CardGroup>\r\n  );\r\n};\r\nexport default observer(Cards);\r\n","import React, { useContext, useState, useEffect, SyntheticEvent } from \"react\";\r\nimport {\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Container,\r\n  Pagination,\r\n} from \"semantic-ui-react\";\r\nimport Filters from \"./Filters\";\r\nimport Cards from \"./Cards\";\r\nimport { IListSearchResult, ICounters } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { JobStore } from \"../../../App/Store/jobsStore\";\r\n\r\nconst FiltersAndCards: React.FC<{\r\n  jobs?: IListSearchResult;\r\n  loadingInitial: boolean;\r\n  counters: ICounters;\r\n}> = ({ jobs, loadingInitial, counters }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [postsPerPage] = useState(5);\r\n  const indexOfLastJob = currentPage * postsPerPage;\r\n  const indexOfFirstJob = indexOfLastJob - postsPerPage;\r\n  const currentPosts = jobs?.lists.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  const clickon = (event: SyntheticEvent, data: any) => {\r\n    setCurrentPage(data!.activePage);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\">\r\n        {jobs?.count === undefined ? \"\" : `${jobs?.count} Jobs & Vacancies`}\r\n      </Header>\r\n      <Grid>\r\n        <GridColumn width={4}>\r\n          <Filters counters={counters!} />\r\n        </GridColumn>\r\n        <GridColumn width={12}>\r\n          <Cards\r\n            loadingInitial={loadingInitial!}\r\n            jobs={jobs!}\r\n            jobsPag={currentPosts!}\r\n          />\r\n          <Container style={{ textAlign: \"center\" }}>\r\n            <br />\r\n            {jobs?.lists === undefined || jobs?.count === 0 ? (\r\n              \"\"\r\n            ) : (\r\n              <Pagination\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={2}\r\n                activePage={currentPage}\r\n                totalPages={jobs?.count! / postsPerPage}\r\n                onPageChange={clickon}\r\n              />\r\n            )}\r\n          </Container>\r\n        </GridColumn>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(FiltersAndCards);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport { Segment, Divider } from \"semantic-ui-react\";\r\nimport FiltersAndCards from \"./Features/FiltersAndCards\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchResults = () => {\r\n  const jobsStore = useContext(JobStore);\r\n  const {\r\n    loadingInitial,\r\n    jobs,\r\n    getListJobs,\r\n    getQuery,\r\n    counters,\r\n    getCounters,\r\n  } = jobsStore;\r\n\r\n  useEffect(() => {\r\n    const query = getQuery();\r\n\r\n    getListJobs(query!);\r\n    getCounters(jobs!);\r\n    console.log(query);\r\n  }, [getListJobs]);\r\n  return (\r\n    <Segment style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <SearchBar />\r\n      <Divider section />\r\n      <FiltersAndCards\r\n        counters={counters!}\r\n        loadingInitial={loadingInitial!}\r\n        jobs={jobs!}\r\n      />\r\n    </Segment>\r\n  );\r\n};\r\nexport default withRouter(observer(SearchResults));\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  GridColumn,\r\n  GridRow,\r\n  Header,\r\n  Icon,\r\n  Modal,\r\n  Button,\r\n  CardGroup,\r\n  Image,\r\n  Segment,\r\n  SegmentGroup,\r\n} from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IJobResult } from \"../../../App/Models/Models\";\r\nimport { formatDistance, parseISO } from \"date-fns\";\r\n\r\nconst JobCard: React.FC<{ job: IJobResult }> = ({ job }) => {\r\n  if (job === undefined)\r\n    return (\r\n      <Card fluid style={{ borderTop: \"3px rgb(33, 138, 174) solid\" }}>\r\n        <Card.Content>\r\n          <Header>\r\n            Sorry, the job you're looking for is no longer being advertised.\r\n            However, you can still search for similar jobs.\r\n          </Header>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  return (\r\n    <CardGroup>\r\n      <Card fluid style={{ borderTop: \"3px rgb(33, 138, 174) solid\" }}>\r\n        <Card.Content>\r\n          <Header as=\"h1\" style={{ marginBottom: \"0px\" }}>\r\n            {job?.jobTitle}\r\n          </Header>\r\n          <Card.Meta style={{ font: \"6\" }}>\r\n            Posted{\" \"}\r\n            {formatDistance(parseISO(job?.datePosted!.toString()), new Date(), {\r\n              addSuffix: true,\r\n            })}{\" \"}\r\n            by {job?.employerName}\r\n          </Card.Meta>\r\n          <Grid>\r\n            <GridColumn width=\"12\">\r\n              <GridRow>\r\n                <Card.Description>\r\n                  <Segment\r\n                    style={{ marginTop: \"25px\", backgroundColor: \"#F7F8FA\" }}\r\n                  >\r\n                    <Grid>\r\n                      <GridRow>\r\n                        <GridColumn width=\"8\">\r\n                          <GridRow>\r\n                            <Header as=\"h5\">\r\n                              <Icon.Group size=\"small\">\r\n                                <Icon name=\"pound sign\" />\r\n                              </Icon.Group>\r\n                              {job?.yearlyMinimumSalary === 0\r\n                                ? \"Depending on experiece\"\r\n                                : `${job?.yearlyMinimumSalary} to\r\n                            ${job?.yearlyMaximumSalary}`}\r\n                            </Header>\r\n                          </GridRow>\r\n                        </GridColumn>\r\n                        <GridColumn width=\"8\">\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"location arrow\" />\r\n                            </Icon.Group>\r\n                            {job?.locationName}\r\n                          </Header>\r\n                        </GridColumn>\r\n                      </GridRow>\r\n                      <GridRow>\r\n                        <GridColumn width=\"8\">\r\n                          <Header as=\"h5\">\r\n                            <Icon.Group size=\"small\">\r\n                              <Icon name=\"clock outline\" />\r\n                            </Icon.Group>\r\n                            {job?.contractType}\r\n                          </Header>\r\n                        </GridColumn>\r\n                        {job?.applications! < 10 ? (\r\n                          <GridColumn width=\"8\">\r\n                            <Header as=\"h5\">\r\n                              <Icon.Group size=\"small\">\r\n                                <Icon name=\"universal access\" />\r\n                              </Icon.Group>\r\n                              {\"Be one of the first ten applicants\"}\r\n                            </Header>\r\n                          </GridColumn>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n                </Card.Description>\r\n                <br />\r\n                <Card.Description>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: job?.jobDescription!,\r\n                    }}\r\n                  />\r\n                </Card.Description>\r\n              </GridRow>\r\n            </GridColumn>\r\n            <GridColumn width=\"4\">\r\n              <GridRow>\r\n                <Modal\r\n                  trigger={\r\n                    <Button\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"#e84188\",\r\n                        color: \"white\",\r\n                        border: \"1px solid #e84188\",\r\n                        borderRadius: \"8px\",\r\n                        marginBottom: \"15px\",\r\n                        marginTop: \"25px\",\r\n                        padding: \"9px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <p style={{ fontWeight: \"bold\" }}>Apply Now</p>\r\n                    </Button>\r\n                  }\r\n                  basic\r\n                  size=\"small\"\r\n                >\r\n                  <Header icon=\"browser\" content=\"Success!\" />\r\n                  <Modal.Content>\r\n                    <h3>\r\n                      Congratulations! Your application is now being redirected\r\n                      to {job?.employerName}!\r\n                    </h3>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <Button color=\"green\" inverted>\r\n                      <Icon name=\"checkmark\" /> Got it\r\n                    </Button>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Button\r\n                  floated=\"right\"\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"1px solid #0079d1\",\r\n                    borderRadius: \"8px\",\r\n                    color: \"#0079d1\",\r\n                    width: \"100%\",\r\n                    padding: \"7px\",\r\n                  }}\r\n                >\r\n                  <p style={{ fontWeight: \"bold\" }}>\r\n                    <Icon name=\"share alternate\"></Icon>Share job\r\n                  </p>\r\n                </Button>\r\n                <SegmentGroup style={{ marginTop: \"54px\" }}>\r\n                  <Segment>\r\n                    <Grid>\r\n                      <GridRow as={NavLink} to=\"/jobs\">\r\n                        <p style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                          {job.employerName}\r\n                        </p>\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n\r\n                  <Segment>\r\n                    <Grid>\r\n                      <GridRow as={NavLink} to=\"/jobs\">\r\n                        <p style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                          About this company\r\n                        </p>\r\n                      </GridRow>\r\n                    </Grid>\r\n                  </Segment>\r\n                </SegmentGroup>\r\n              </GridRow>\r\n            </GridColumn>\r\n          </Grid>\r\n        </Card.Content>\r\n      </Card>\r\n    </CardGroup>\r\n  );\r\n};\r\nexport default observer(JobCard);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { SegmentGroup, Segment, Container, Header } from \"semantic-ui-react\";\r\nimport { IListSearchResult } from \"../../../App/Models/Models\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SimilarJobs: React.FC<{ jobs: IListSearchResult }> = ({ jobs }) => {\r\n  return (\r\n    <Container>\r\n      <SegmentGroup>\r\n        <Segment style={{ borderTop: \"3px rgb(169,169,169) solid\" }}>\r\n          <Header content=\"Similar jobs\" size=\"medium\" />\r\n        </Segment>\r\n        {jobs?.lists.slice(0 - 7).map((job, index) => (\r\n          <Segment key={index}>\r\n            <Header\r\n              style={{ color: \"#00487f\", fontSize: \"16px\" }}\r\n              content={job.jobTitle}\r\n              as={Link}\r\n              to={`/jobs/result/${job.jobId}`}\r\n            />\r\n            <p style={{ color: \"#8fa2bf\" }}>\r\n              {job.yearlyMaximumSalary === 0\r\n                ? \"Salary dependent on experience\"\r\n                : `£ ${job.yearlyMaximumSalary}`}\r\n            </p>\r\n            <p style={{ marginTop: \"-15px\", color: \"#8fa2bf\" }}>\r\n              {job.locationName}\r\n            </p>\r\n          </Segment>\r\n        ))}\r\n      </SegmentGroup>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(SimilarJobs);\r\n","import React from \"react\";\r\nimport { Grid, Container, GridColumn } from \"semantic-ui-react\";\r\nimport JobCard from \"./JobCard\";\r\nimport SimilarJobs from \"./SimilarJobs\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IJobResult, IListSearchResult } from \"../../../App/Models/Models\";\r\nconst JobDetails: React.FC<{ job: IJobResult; jobs: IListSearchResult }> = ({\r\n  job,\r\n  jobs,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <GridColumn width={12}>\r\n          <JobCard job={job!} />\r\n        </GridColumn>\r\n        <GridColumn width={4}>\r\n          <SimilarJobs jobs={jobs!} />\r\n        </GridColumn>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default observer(JobDetails);\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Segment, Divider } from \"semantic-ui-react\";\r\nimport SearchBar from \"./Features/SearchBar\";\r\nimport JobDetails from \"./Features/JobDetails\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { JobStore } from \"../../App/Store/jobsStore\";\r\nimport { LoadingComponent } from \"../../App/Layout/LoadingComponent\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\nconst DetailedView: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const jobsStore = useContext(JobStore);\r\n  const {\r\n    loadingInitial,\r\n    jobs,\r\n    getListJobs,\r\n    getQuery,\r\n    loadJob,\r\n    job,\r\n  } = jobsStore;\r\n  useEffect(() => {\r\n    let id = parseInt(match.params.id);\r\n    loadJob(id);\r\n  }, [loadJob, match.params.id, history]);\r\n\r\n  useEffect(() => {\r\n    const query = getQuery();\r\n\r\n    getListJobs(query!);\r\n  }, [getListJobs, getQuery]);\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Getting job details...\" />;\r\n\r\n  return (\r\n    <Segment style={{ backgroundColor: \"#f5f7fa\" }}>\r\n      <SearchBar />\r\n      <Divider section />\r\n      <JobDetails job={job!} jobs={jobs!} />\r\n    </Segment>\r\n  );\r\n};\r\nexport default observer(DetailedView);\r\n","import React, { Fragment } from \"react\";\r\nimport NotFound from \"./NotFound\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { NavBar } from \"../../Features/nav/NavBar\";\r\nimport { Route, Switch, withRouter, Router } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Homepage } from \"../../Features/Homepage/Homepage\";\r\nimport Jobs from \"../../Features/Jobs/Jobs\";\r\nimport { Courses } from \"../../Features/Courses/Courses\";\r\nimport { CareerAdvice } from \"../../Features/CareerAdvice/CareerAdvice\";\r\nimport { Recruiting } from \"../../Features/Recruiting/Recruiting\";\r\nimport { RegisterCV } from \"../../Features/Users/RegisterCV\";\r\nimport { SignIn } from \"../../Features/Users/SignIn\";\r\nimport { Shortlistedjobs } from \"../../Features/Users/Shortlistedjobs\";\r\nimport { Footer } from \"../../Features/Footer/Footer\";\r\nimport SearchResults from \"../../Features/JobSeekerLandingPage/SearchResults\";\r\nimport DetailedView from \"../../Features/JobSeekerLandingPage/DetailedView\";\r\nimport \"mobx-react-lite/batchingForReactDom\";\r\nimport { history } from \"../../index\";\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Router history={history}>\r\n        <ToastContainer position=\"bottom-right\" />\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route\r\n          path={\"/(.+)\"}\r\n          render={() => (\r\n            <Fragment>\r\n              <NavBar />\r\n              <Container\r\n                fluid\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"\trgb(176,176,176)\",\r\n                }}\r\n              >\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Homepage} />\r\n                  <Route exact path=\"/jobs\" component={Jobs} />\r\n                  <Route path=\"/jobs/results/\" component={SearchResults} />\r\n                  <Route exact path=\"/courses\" component={Courses} />\r\n                  <Route\r\n                    exact\r\n                    path=\"/jobs/result/:id\"\r\n                    component={DetailedView}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={\"/careeradvice\"}\r\n                    component={CareerAdvice}\r\n                  />\r\n                  <Route exact path=\"/recruiting\" component={Recruiting} />\r\n                  <Route exact path=\"/registercv\" component={RegisterCV} />\r\n                  <Route exact path=\"/signin/\" component={SignIn} />\r\n                  <Route\r\n                    exact\r\n                    path=\"/shortlistedjobs\"\r\n                    component={Shortlistedjobs}\r\n                  />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n        <Footer />\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return children;\r\n};\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App/Layout/styles.css\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport App from \"./App/Layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ScrollToTop from \"./App/Layout/ScrollToTop\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport dateFnsLocalizer from \"react-widgets-date-fns\";\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// or add a new declaration (.d.ts) file containing `declare module 'react-widgets-date-fns';`\n"],"sourceRoot":""}